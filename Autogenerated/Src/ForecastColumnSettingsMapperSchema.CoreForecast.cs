namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnSettingsMapperSchema

	/// <exclude/>
	public class ForecastColumnSettingsMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnSettingsMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnSettingsMapperSchema(ForecastColumnSettingsMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8");
			Name = "ForecastColumnSettingsMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,88,75,111,227,54,16,62,123,129,253,15,68,122,145,129,133,12,244,184,142,29,116,157,245,34,69,243,192,122,211,30,22,61,176,210,200,102,43,81,90,146,202,194,13,242,223,59,124,200,122,152,114,100,39,237,169,167,88,36,103,230,155,231,71,134,211,12,100,65,35,32,95,64,8,42,243,68,133,139,156,39,108,93,10,170,88,206,195,101,46,32,162,82,253,250,227,219,55,143,111,223,140,74,201,248,154,220,192,119,149,115,115,252,103,153,243,233,110,99,181,149,10,178,238,119,248,11,227,223,234,197,166,173,44,107,138,119,119,58,218,155,219,2,250,214,195,37,141,84,46,24,72,223,137,155,146,133,43,16,15,44,130,235,60,134,52,188,164,138,162,207,74,160,20,10,160,200,15,2,214,232,59,185,226,10,68,130,209,121,79,174,170,56,44,242,180,204,248,10,148,66,181,242,154,22,5,8,35,84,148,127,164,44,34,172,146,121,78,100,244,104,196,118,198,174,65,109,242,88,190,39,119,70,145,221,156,76,38,228,92,150,89,70,197,118,94,45,124,2,37,137,218,0,73,156,1,18,25,11,68,58,19,36,70,151,72,34,242,172,123,36,220,41,157,116,181,158,23,84,208,140,112,172,136,217,89,41,65,96,76,56,68,186,8,206,230,247,248,141,42,170,5,244,82,42,202,35,8,207,39,70,204,175,197,218,60,155,47,59,32,246,132,4,168,82,112,57,95,120,252,56,159,84,187,250,120,59,150,58,117,58,28,254,72,235,221,224,190,229,9,105,59,246,78,171,28,181,165,29,200,241,212,165,7,120,108,51,100,190,159,108,129,180,23,171,20,46,82,42,229,144,90,249,122,9,9,45,83,245,129,241,24,183,2,181,45,32,79,130,131,130,227,241,239,117,149,69,218,18,57,116,156,60,139,163,191,0,5,123,160,10,236,110,97,63,136,84,66,247,17,6,219,106,187,193,12,7,166,219,62,114,197,20,54,155,253,177,93,69,27,200,40,129,198,199,59,242,169,100,177,11,236,253,85,60,38,143,38,240,54,177,173,163,161,213,46,195,37,19,82,221,10,23,168,32,34,179,57,137,66,20,38,179,89,67,211,69,168,129,232,62,119,169,233,230,198,231,94,174,48,253,16,87,14,186,79,242,192,132,42,105,74,60,53,182,100,105,90,45,60,83,82,196,95,78,206,229,150,110,18,3,202,50,154,178,191,209,252,140,232,97,23,94,214,107,231,173,211,243,192,181,79,5,100,60,117,42,123,147,32,237,159,89,7,99,235,208,53,229,116,13,34,196,204,94,185,174,254,176,197,208,6,77,112,225,42,47,69,4,58,226,211,125,63,108,140,118,93,59,35,28,190,251,162,104,67,48,178,186,44,6,157,61,20,176,64,77,46,109,79,142,62,67,2,2,16,76,93,110,120,174,133,9,143,216,205,59,170,54,228,226,162,83,156,210,213,158,95,6,61,113,150,238,112,55,143,251,205,52,247,143,176,212,20,171,141,45,75,30,245,155,170,119,143,48,84,11,117,205,196,61,6,98,168,93,143,176,251,110,113,30,80,30,123,28,111,236,86,154,89,138,4,103,210,217,213,189,219,9,175,228,77,174,110,202,52,189,21,31,179,66,109,131,49,185,176,226,163,189,26,183,98,114,30,244,40,27,227,36,227,168,202,200,63,77,155,131,163,170,184,227,218,255,127,122,237,167,87,71,47,255,6,203,246,208,172,27,10,14,250,98,3,209,95,63,137,117,153,97,225,233,2,10,180,171,72,141,238,180,155,62,44,33,221,97,168,107,206,20,220,111,27,166,96,165,239,180,193,184,210,94,21,140,174,35,171,225,105,192,20,107,13,253,238,148,175,111,9,195,235,113,208,237,97,31,147,57,213,45,85,253,253,25,10,129,77,195,177,94,125,37,26,86,98,205,98,116,25,198,10,81,216,107,238,34,225,179,217,189,30,32,109,226,32,208,28,51,180,135,114,161,241,216,94,210,105,36,121,98,126,75,51,255,29,237,31,106,153,7,154,150,176,251,252,50,80,77,45,229,124,117,87,151,61,218,121,36,107,80,83,141,113,74,158,78,117,70,84,60,229,128,12,152,4,135,221,170,21,238,105,234,243,204,199,149,175,226,92,97,56,236,197,46,245,169,233,243,103,143,145,95,197,153,4,185,207,76,167,151,186,211,175,168,207,161,14,235,159,236,78,98,88,113,215,220,195,225,251,5,247,224,58,46,38,13,146,63,29,107,29,165,24,142,68,219,35,122,56,188,241,11,2,91,216,171,14,209,35,206,252,223,195,254,226,241,112,224,119,77,21,45,193,3,101,222,188,125,121,192,15,120,124,62,67,32,39,112,199,137,180,97,25,163,39,224,247,156,125,43,129,176,88,15,201,132,97,41,98,47,69,52,141,202,148,234,167,215,65,46,248,170,239,140,142,126,182,193,153,172,158,34,103,230,69,92,65,51,79,204,221,51,101,112,41,120,145,29,152,193,7,128,137,250,109,225,129,214,120,121,156,94,167,93,96,152,16,181,57,18,157,126,90,180,241,213,52,210,120,124,188,40,128,67,136,163,131,175,104,189,151,60,1,108,63,168,6,227,51,206,188,28,82,111,212,246,158,135,67,129,45,235,153,76,254,68,187,78,225,48,104,118,160,123,1,157,48,188,159,107,207,97,212,217,133,216,120,151,122,210,217,124,182,190,10,203,28,217,15,73,235,173,237,143,100,251,57,62,20,228,194,5,78,195,26,194,130,94,96,49,28,128,244,95,82,221,126,79,52,72,171,175,35,14,243,154,143,199,112,237,31,229,125,41,80,141,24,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8"));
		}

		#endregion

	}

	#endregion

}

