namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastDataMapperSchema

	/// <exclude/>
	public class ForecastDataMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDataMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDataMapperSchema(ForecastDataMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318");
			Name = "ForecastDataMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,86,219,138,27,57,16,125,238,64,254,161,226,64,104,179,70,134,125,220,177,13,193,201,76,12,201,38,204,152,188,46,74,75,30,11,218,173,142,164,158,193,12,243,239,91,186,247,101,28,178,176,47,109,75,170,42,213,41,213,57,82,67,79,92,183,180,226,176,231,74,81,45,15,134,108,101,115,16,247,157,162,70,200,134,92,75,197,43,170,205,247,63,95,191,122,122,253,170,232,180,104,238,225,238,172,13,63,93,141,198,232,90,215,188,178,126,154,220,240,134,43,81,77,108,62,139,230,39,78,226,244,114,185,132,149,238,78,39,170,206,155,48,254,166,228,131,96,92,195,137,155,163,100,26,140,132,19,109,225,16,210,0,70,13,37,209,121,217,243,110,187,31,181,168,160,170,169,214,16,179,254,128,214,95,104,219,114,133,22,79,110,215,226,173,226,247,152,33,124,241,59,252,133,123,138,7,106,184,95,109,253,0,30,164,96,112,45,234,26,49,117,167,230,59,173,59,174,203,93,70,184,218,211,31,53,247,171,27,168,220,175,94,192,173,124,4,37,31,23,176,87,156,59,19,155,195,14,145,131,192,207,28,108,17,139,194,226,161,213,17,202,94,148,16,4,68,252,167,163,245,5,243,163,168,89,182,38,91,59,86,188,73,94,197,3,85,80,241,186,134,181,205,137,108,241,175,14,75,5,185,22,74,155,175,234,3,63,208,174,54,37,133,245,6,40,249,134,135,38,217,142,145,143,63,59,90,235,50,196,222,177,57,188,123,23,125,11,74,124,14,61,59,187,185,53,155,95,245,54,55,46,93,159,65,195,31,97,159,198,49,197,194,7,218,74,198,209,198,71,113,131,63,96,246,207,12,191,17,28,206,45,162,207,141,146,93,27,93,98,130,100,47,239,140,194,78,43,231,201,112,199,82,208,29,75,179,183,188,146,138,185,53,91,150,29,11,11,207,49,117,113,128,210,213,237,13,166,221,213,117,174,104,145,16,17,215,18,24,162,100,18,91,143,207,171,52,25,195,60,199,112,129,27,169,143,200,123,198,202,20,41,86,204,155,187,239,243,176,25,167,189,116,195,205,100,178,188,233,176,103,5,91,128,118,117,128,138,182,182,83,99,246,138,155,78,53,254,28,38,1,3,64,87,20,17,75,181,245,1,108,13,253,191,56,223,195,18,78,246,179,208,102,149,142,119,83,206,61,152,171,30,154,183,188,97,158,123,151,136,232,40,236,23,7,226,128,104,81,9,142,220,73,129,171,91,100,8,25,104,128,247,106,169,162,39,104,80,218,214,51,43,23,179,205,30,93,135,10,178,90,58,171,236,228,139,163,55,153,224,32,15,152,1,199,173,20,63,172,103,61,230,205,150,155,213,50,58,184,115,242,218,115,81,29,48,127,84,161,222,148,46,251,10,229,82,138,167,100,105,131,48,131,221,180,186,62,100,25,154,38,9,67,224,99,115,144,61,25,113,80,183,35,45,177,27,180,142,229,67,6,121,230,147,191,177,110,228,150,183,53,222,10,229,12,102,11,203,195,216,162,214,215,118,51,122,229,28,47,40,137,141,30,213,33,239,151,244,193,114,204,135,26,115,44,108,144,245,194,227,121,26,146,122,144,116,143,220,1,84,222,49,175,228,110,158,32,206,70,65,68,47,23,126,44,22,189,66,88,90,59,149,31,48,218,65,125,19,117,74,127,194,251,109,8,54,41,183,11,240,91,184,167,128,127,169,131,19,232,123,97,234,12,122,167,63,50,225,121,149,45,206,45,183,59,174,211,101,138,15,3,109,52,137,166,62,61,111,22,107,242,130,148,69,217,201,101,234,107,194,47,104,142,18,21,184,110,219,216,181,221,255,71,247,190,83,144,146,145,95,22,152,255,172,20,99,113,253,45,189,24,59,37,213,24,47,188,160,29,254,32,1,46,43,208,232,65,17,68,230,78,118,170,114,129,7,237,62,73,101,162,54,225,149,147,52,6,199,67,129,9,28,126,241,154,242,119,238,194,221,189,238,14,233,75,130,157,252,36,184,162,170,58,158,201,251,230,92,206,51,89,38,239,177,244,236,114,79,174,23,168,55,0,57,230,231,184,63,179,229,165,107,203,207,225,231,95,45,221,182,160,57,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318"));
		}

		#endregion

	}

	#endregion

}

