namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ISspUserAdministratorSchema

	/// <exclude/>
	public class ISspUserAdministratorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ISspUserAdministratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ISspUserAdministratorSchema(ISspUserAdministratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("485de16c-639f-48e3-82c5-2ad4f26079fd");
			Name = "ISspUserAdministrator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("7cc31540-fa76-4c79-9b86-a6eabd8e662c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,181,86,109,171,218,48,20,254,172,112,255,195,193,79,14,134,253,1,115,130,202,69,10,23,185,92,245,211,24,44,54,167,26,214,38,37,73,117,110,220,255,190,147,164,117,214,183,233,112,95,42,182,231,156,231,37,79,210,74,150,163,41,88,130,48,71,173,153,81,169,237,141,149,76,197,170,212,204,10,37,123,179,217,235,83,251,215,83,187,85,26,33,87,48,219,25,139,249,167,163,255,212,147,101,152,184,6,211,155,160,68,45,18,170,161,170,162,92,102,34,1,33,45,234,212,225,196,51,83,44,12,234,33,207,133,20,198,18,140,210,84,232,32,90,81,20,65,223,148,121,206,244,110,80,223,24,107,100,22,141,131,242,77,11,41,44,148,52,162,183,111,137,142,123,250,5,211,44,7,73,242,62,119,92,109,44,83,213,25,76,113,235,59,33,113,51,137,45,112,102,89,175,31,249,242,63,221,26,109,169,165,25,56,162,32,56,74,43,82,65,128,253,168,126,226,74,39,165,224,240,134,43,82,129,218,149,118,43,109,177,220,8,139,80,227,126,8,86,156,87,55,65,107,128,37,137,42,165,133,149,86,101,113,8,120,163,194,170,63,230,157,193,176,26,213,96,125,65,222,240,18,236,25,157,196,115,226,202,98,62,218,13,107,184,174,127,180,71,255,187,80,165,87,76,138,159,193,123,10,6,74,131,94,195,127,86,250,114,8,213,84,71,17,116,65,38,122,85,209,148,106,238,17,54,94,99,242,29,68,218,12,40,254,160,88,220,170,202,93,59,33,109,21,195,11,58,26,16,23,23,108,169,84,22,104,197,169,27,58,85,246,217,209,233,86,90,29,198,117,73,213,150,163,163,192,178,228,190,221,134,57,19,89,103,224,127,32,85,245,94,35,216,36,76,59,85,247,128,5,174,153,94,15,113,208,85,213,142,118,207,142,99,109,138,39,252,17,238,88,248,25,90,120,85,218,178,108,191,33,192,170,102,12,52,38,74,243,155,211,93,247,153,185,90,20,116,54,81,42,14,199,25,95,103,200,201,250,184,189,217,204,6,81,216,174,69,178,134,173,200,50,88,162,91,24,73,227,208,211,183,107,172,89,31,206,222,40,242,101,36,36,111,12,26,74,62,36,30,27,98,234,130,102,70,59,191,123,94,40,108,253,224,235,0,78,69,221,229,114,61,31,60,0,44,119,16,115,243,56,67,5,191,104,167,151,124,36,143,176,131,58,167,224,156,182,235,90,56,175,18,179,63,242,201,241,162,121,199,159,198,15,212,247,237,80,224,45,113,169,206,249,227,204,132,183,196,63,38,135,148,123,7,231,170,49,212,67,93,55,180,25,150,138,219,77,167,151,86,25,93,221,17,116,247,215,2,239,156,121,247,95,113,206,53,189,57,184,170,207,67,159,186,16,152,209,2,133,175,4,215,17,222,52,1,52,72,253,242,21,246,227,156,206,214,251,83,251,253,55,71,43,65,224,169,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("485de16c-639f-48e3-82c5-2ad4f26079fd"));
		}

		#endregion

	}

	#endregion

}

