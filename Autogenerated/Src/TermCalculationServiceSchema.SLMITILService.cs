namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TermCalculationServiceSchema

	/// <exclude/>
	public class TermCalculationServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TermCalculationServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TermCalculationServiceSchema(TermCalculationServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8a10a692-749d-4236-a578-c1816f7dfa6e");
			Name = "TermCalculationService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e9cdff4a-a92d-4d26-906f-df90167f5485");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,221,87,207,111,219,54,20,62,59,64,254,7,206,185,200,128,65,223,151,56,128,231,161,153,135,102,53,108,15,5,22,244,64,75,207,142,86,137,212,72,202,155,87,228,127,223,35,41,90,164,109,197,109,129,30,214,28,28,241,241,241,123,191,63,137,181,202,249,150,44,247,74,67,121,123,125,85,7,75,250,80,136,53,43,242,127,153,206,5,63,222,92,212,92,231,37,208,37,200,188,83,9,55,119,121,10,143,34,131,226,181,61,58,73,117,190,187,8,65,223,195,250,120,63,20,173,64,74,166,196,70,211,169,144,208,33,166,111,88,170,133,204,65,157,85,224,155,124,91,75,239,202,245,21,103,37,168,138,165,208,165,69,81,94,78,89,145,214,133,93,55,14,95,95,125,186,190,234,221,72,216,162,140,76,11,166,212,143,164,75,181,55,26,141,200,157,170,203,146,201,253,125,179,190,49,127,238,215,254,247,143,241,3,57,149,123,188,81,0,248,212,216,66,215,181,196,4,124,48,178,137,170,126,3,61,21,101,133,238,172,243,34,215,251,5,252,85,231,18,74,224,90,37,225,194,20,128,140,201,133,35,70,139,54,130,108,96,140,84,245,186,200,83,146,154,4,116,199,111,114,117,72,214,35,232,103,145,97,186,230,246,172,217,58,206,143,21,76,5,246,160,34,18,48,30,115,206,244,35,97,60,35,140,40,81,212,173,76,11,210,111,108,205,176,103,250,195,195,114,142,71,205,114,46,115,108,9,189,239,83,122,48,55,58,182,119,87,49,201,74,98,58,98,220,151,24,36,40,221,191,95,184,7,178,17,146,168,244,25,178,186,128,140,100,192,178,34,231,160,232,221,200,30,107,81,36,232,90,114,117,63,225,68,172,255,132,84,19,253,204,52,73,177,50,44,231,10,87,112,38,166,40,34,4,245,40,6,246,233,93,5,174,25,195,242,246,158,112,54,102,124,39,62,66,226,82,138,245,235,207,223,45,87,24,241,79,34,219,47,245,190,48,53,69,181,71,80,138,109,225,32,165,239,37,171,42,200,134,164,9,239,141,144,37,58,25,42,59,17,253,85,9,62,52,230,122,11,28,20,193,21,188,174,107,187,194,183,69,83,6,211,23,254,52,121,0,29,136,147,72,197,165,186,201,253,128,216,182,233,237,152,36,181,2,137,193,115,112,105,27,147,228,247,72,50,248,69,235,202,100,7,254,193,249,173,165,196,110,69,110,81,10,247,158,250,177,110,255,195,237,1,87,7,29,139,5,30,187,73,118,20,178,167,232,234,221,42,210,152,173,102,111,27,143,239,19,139,210,235,113,248,27,123,149,43,45,107,115,108,34,183,181,25,150,164,31,59,141,85,137,5,131,225,37,0,213,118,241,44,195,243,77,98,232,50,148,127,54,140,153,141,115,48,78,126,25,166,106,134,40,194,152,31,132,3,119,126,224,146,251,51,211,176,50,205,109,134,30,177,108,251,90,193,152,248,61,58,103,82,65,226,161,22,71,154,167,72,110,104,26,148,184,116,212,63,26,188,24,103,72,156,103,71,236,100,99,100,200,48,104,184,5,158,226,28,150,92,185,87,192,177,7,126,72,191,210,131,78,7,150,1,238,57,7,28,25,16,83,153,115,19,229,198,164,183,136,243,19,166,171,169,237,50,246,63,12,199,42,188,88,115,47,230,231,18,43,59,22,43,145,209,204,27,214,210,216,26,144,35,193,238,84,5,195,46,71,154,196,108,124,49,227,78,124,115,89,206,109,13,101,32,137,216,120,130,236,96,221,166,83,188,99,230,43,166,176,24,154,201,45,104,231,209,247,66,175,133,192,16,145,164,22,54,94,181,202,211,143,230,173,222,46,94,97,84,151,35,171,133,182,76,107,25,180,100,112,251,205,57,55,101,5,240,140,73,116,20,139,26,177,111,215,55,216,180,227,72,64,199,116,138,13,175,97,102,103,10,73,173,221,73,226,64,90,238,154,50,5,200,91,206,179,124,147,116,58,246,3,38,168,46,10,159,190,144,16,106,153,194,97,217,73,109,203,72,175,177,216,59,57,109,254,253,33,56,6,177,17,38,3,59,144,218,200,146,88,243,248,69,226,147,111,82,78,61,134,103,189,94,243,33,29,97,191,21,24,171,119,35,238,132,196,180,193,160,43,21,212,117,27,202,12,222,178,98,252,196,55,31,243,12,187,207,51,204,128,90,120,103,240,37,228,180,192,248,151,145,79,72,49,71,68,113,96,36,195,22,40,77,93,122,190,142,141,86,22,182,229,35,230,44,178,13,178,63,169,24,86,162,155,140,230,33,13,126,47,164,115,232,87,108,5,243,60,49,153,152,155,68,124,46,245,124,43,98,201,34,111,16,247,149,49,65,231,155,165,143,39,164,190,255,63,69,157,228,226,181,137,246,223,5,71,229,108,63,204,218,178,118,204,247,153,201,142,61,104,135,251,6,221,112,55,65,92,25,73,36,56,189,84,159,94,16,220,5,248,244,70,109,15,248,238,15,47,107,232,137,162,231,174,205,77,75,227,248,234,156,21,205,45,246,172,193,232,6,59,151,2,167,87,231,16,93,98,59,89,171,1,68,51,169,238,224,159,39,76,61,123,132,114,13,50,156,181,135,58,207,72,244,181,79,62,57,94,199,111,25,151,115,213,60,28,136,243,82,126,81,244,31,53,38,1,48,22,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8a10a692-749d-4236-a578-c1816f7dfa6e"));
		}

		#endregion

	}

	#endregion

}

