namespace Terrasoft.Core.Process
{

	using Newtonsoft.Json;
	using Newtonsoft.Json.Linq;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Drawing;
	using System.Globalization;
	using System.Text;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;
	using Terrasoft.Core.DB;
	using Terrasoft.Core.Entities;
	using Terrasoft.Core.Process;
	using Terrasoft.Core.Process.Configuration;

	#region Class: ParentCaseSearchProcess

	/// <exclude/>
	public class ParentCaseSearchProcess : Terrasoft.Core.Process.Process
	{

		#region Class: ProcessLane1

		/// <exclude/>
		public class ProcessLane1 : ProcessLane
		{

			public ProcessLane1(UserConnection userConnection, ParentCaseSearchProcess process)
				: base(userConnection) {
				Owner = process;
				IsUsedParentUserContexts = false;
			}

		}

		#endregion

		#region Class: AutoGeneratedPageUserTaskFlowElement

		/// <exclude/>
		public class AutoGeneratedPageUserTaskFlowElement : AutoGeneratedPageUserTask
		{

			#region Constructors: Public

			public AutoGeneratedPageUserTaskFlowElement(UserConnection userConnection, ParentCaseSearchProcess process)
				: base(userConnection) {
				UId = Guid.NewGuid();
				Owner = process;
				Type = "ProcessSchemaUserTask";
				Name = "AutoGeneratedPageUserTask";
				IsLogging = true;
				SchemaElementUId = new Guid("30f34973-ede0-47ef-9f03-13f5b2a88f81");
				CreatedInSchemaUId = process.InternalSchemaUId;
				ProcessLane = process.Lane1;
				SerializeToDB = true;
			}

			#endregion

			#region Properties: Public

			private LocalizableString _title;
			public override LocalizableString Title {
				get {
					return _title ?? (_title = GetLocalizableString("987816a4770c44aeb787048dccde37d4",
						 "BaseElements.AutoGeneratedPageUserTask.Parameters.Title.Value"));
				}
				set {
					_title = value;
				}
			}

			private LocalizableString _buttons;
			public override LocalizableString Buttons {
				get {
					return _buttons ?? (_buttons = GetLocalizableString("987816a4770c44aeb787048dccde37d4",
						 "BaseElements.AutoGeneratedPageUserTask.Parameters.Buttons.Value"));
				}
				set {
					_buttons = value;
				}
			}

			private LocalizableString _elements;
			public override LocalizableString Elements {
				get {
					return _elements ?? (_elements = GetLocalizableString("987816a4770c44aeb787048dccde37d4",
						 "BaseElements.AutoGeneratedPageUserTask.Parameters.Elements.Value"));
				}
				set {
					_elements = value;
				}
			}

			public  virtual Guid ParentServiceRequest {
				get;
				set;
			}

			#endregion

		}

		#endregion

		public ParentCaseSearchProcess(UserConnection userConnection)
			: base(userConnection) {
			InitializeMetaPathParameterValues();
			UId = Guid.NewGuid();
			Name = "ParentCaseSearchProcess";
			SchemaUId = new Guid("987816a4-770c-44ae-b787-048dccde37d4");
			Caption = Schema.Caption;
			SchemaManagerName = "ProcessSchemaManager";
			SerializeToDB = true;
			SerializeToMemory = true;
			IsLogging = false;
			_notificationCaption = () => { return new LocalizableString((Caption)); };
			InitializeFlowElements();
		}

		#region Properties: Private

		private  Guid InternalSchemaUId {
			get {
				return new Guid("987816a4-770c-44ae-b787-048dccde37d4");
			}
		}

		#endregion

		#region Properties: Public

		private Func<string> _notificationCaption;
		public  virtual string NotificationCaption {
			get {
				return (_notificationCaption ?? (_notificationCaption = () => null)).Invoke();
			}
			set {
				_notificationCaption = () => { return value; };
			}
		}

		private ProcessLane1 _lane1;
		public  ProcessLane1 Lane1 {
			get {
				return _lane1 ?? ((_lane1) = new ProcessLane1(UserConnection, this));
			}
		}

		private ProcessTerminateEvent _terminate1;
		public  ProcessTerminateEvent Terminate1 {
			get {
				return _terminate1 ?? (_terminate1 = new ProcessTerminateEvent() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaTerminateEvent",
					Name = "Terminate1",
					SchemaElementUId = new Guid("f74ae6ff-1188-4b2d-9bac-4de5d0531c63"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
					IsLogging = true,
				});
			}
		}

		private ProcessFlowElement _start1;
		public  ProcessFlowElement Start1 {
			get {
				return _start1 ?? (_start1 = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartEvent",
					Name = "Start1",
					SchemaElementUId = new Guid("04c456b0-89f1-449d-a769-6b6bc91c6e43"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
					IsLogging = true,
				});
			}
		}

		private AutoGeneratedPageUserTaskFlowElement _autoGeneratedPageUserTask;
		public  AutoGeneratedPageUserTaskFlowElement AutoGeneratedPageUserTask {
			get {
				return _autoGeneratedPageUserTask ?? (_autoGeneratedPageUserTask = new AutoGeneratedPageUserTaskFlowElement(UserConnection, this) { ExecutedEventHandler = OnExecuted });
			}
		}

		#endregion

		#region Methods: Private

		private void InitializeFlowElements() {
			FlowElements[Terminate1.SchemaElementUId] = new Collection<ProcessFlowElement> { Terminate1 };
			FlowElements[Start1.SchemaElementUId] = new Collection<ProcessFlowElement> { Start1 };
			FlowElements[AutoGeneratedPageUserTask.SchemaElementUId] = new Collection<ProcessFlowElement> { AutoGeneratedPageUserTask };
		}

		private void OnExecuted(object sender, ProcessActivityAfterEventArgs e) {
			switch (e.Context.SenderName) {
					case "Terminate1":
						CompleteProcess();
						break;
					case "Start1":
						e.Context.QueueTasksV2.Enqueue(new ProcessQueueElement("AutoGeneratedPageUserTask", e.Context.SenderName));
						break;
					case "AutoGeneratedPageUserTask":
							e.Context.QueueTasksV2.Enqueue(new ProcessQueueElement("Terminate1", e.Context.SenderName));
						break;
			}
		}

		private void WritePropertyValues(DataWriter writer, bool useAllValueSources) {
			if (!HasMapping("AutoGeneratedPageUserTask.ParentServiceRequest")) {
				writer.WriteValue("AutoGeneratedPageUserTask.ParentServiceRequest", AutoGeneratedPageUserTask.ParentServiceRequest, Guid.Empty);
			}
		}

		#endregion

		#region Methods: Protected

		protected override void PrepareStart(ProcessExecutingContext context) {
			base.PrepareStart(context);
			context.Process = this;
			if (IsProcessExecutedBySignal) {
				return;
			}
			context.QueueTasksV2.Enqueue(new ProcessQueueElement("Start1", string.Empty));
		}

		protected override void CompleteApplyingFlowElementsPropertiesData() {
			base.CompleteApplyingFlowElementsPropertiesData();
			foreach (var item in FlowElements) {
				foreach (var itemValue in item.Value) {
					if (Guid.Equals(itemValue.CreatedInSchemaUId, InternalSchemaUId)) {
						itemValue.ExecutedEventHandler = OnExecuted;
					}
				}
			}
		}

		protected override void InitializeMetaPathParameterValues() {
			base.InitializeMetaPathParameterValues();
			MetaPathParameterValues.Add("68bac3d0-bac0-4db8-81b2-12ad77ba2cd4", () => AutoGeneratedPageUserTask.Title);
			MetaPathParameterValues.Add("d8056fe7-228c-4a1a-bc4b-87d448897781", () => AutoGeneratedPageUserTask.EntitySchemaUId);
			MetaPathParameterValues.Add("f1a3f42b-68b1-49bd-ac4c-b19a866e3ce6", () => AutoGeneratedPageUserTask.Recommendation);
			MetaPathParameterValues.Add("b0073e2b-e1f9-4724-8892-56a13717f196", () => AutoGeneratedPageUserTask.EntityId);
			MetaPathParameterValues.Add("8fdf547b-2998-4954-adf1-287664ac8f01", () => AutoGeneratedPageUserTask.Buttons);
			MetaPathParameterValues.Add("71df8d61-6c01-45ff-89d1-091c5e9cdf11", () => AutoGeneratedPageUserTask.Elements);
			MetaPathParameterValues.Add("cc75ad62-3222-4fb7-aa24-a3bb7e506614", () => AutoGeneratedPageUserTask.ExtendedClientModule);
			MetaPathParameterValues.Add("a29f7bda-2262-4251-8f4b-69f091fa90f3", () => AutoGeneratedPageUserTask.EntryPointId);
			MetaPathParameterValues.Add("9ae030e0-7c7a-45a2-ac98-f323c2b1ddc8", () => AutoGeneratedPageUserTask.PressedButtonCode);
			MetaPathParameterValues.Add("363342a9-69c5-4986-8921-dd819b20f29c", () => AutoGeneratedPageUserTask.OwnerId);
			MetaPathParameterValues.Add("5f200fec-e222-410c-8759-ab73b9709d9d", () => AutoGeneratedPageUserTask.ShowExecutionPage);
			MetaPathParameterValues.Add("d3ed5e85-2ea6-47e2-b761-08aaf987083d", () => AutoGeneratedPageUserTask.InformationOnStep);
			MetaPathParameterValues.Add("e81a6896-a91e-436a-8904-4bdd277315c3", () => AutoGeneratedPageUserTask.IsRunning);
			MetaPathParameterValues.Add("e4bb2fe7-ae51-4fa8-ab66-acd38c149191", () => AutoGeneratedPageUserTask.ParentServiceRequest);
		}

		protected override void ApplyPropertiesDataValues(DataReader reader) {
			base.ApplyPropertiesDataValues(reader);
			bool hasValueToRead = reader.HasValue();
			switch (reader.CurrentName) {
				case "AutoGeneratedPageUserTask.ParentServiceRequest":
					AutoGeneratedPageUserTask.ParentServiceRequest = reader.GetValue<System.Guid>();
				break;
			}
		}

		protected override void WritePropertyValues(DataWriter writer) {
			base.WritePropertyValues(writer);
			WritePropertyValues(writer, true);
		}

		#endregion

		#region Methods: Public

		public override void ThrowEvent(ProcessExecutingContext context, string message) {
			base.ThrowEvent(context, message);
		}

		public override void WritePropertiesData(DataWriter writer, bool writeFlowElements = true) {
			if (Status == Core.Process.ProcessStatus.Inactive) {
				return;
			}
			writer.WriteStartObject(Name);
			base.WritePropertiesData(writer, writeFlowElements);
			WritePropertyValues(writer, false);
			writer.WriteFinishObject();
		}

		public override object CloneShallow() {
			var cloneItem = (ParentCaseSearchProcess)base.CloneShallow();
			cloneItem.ExecutedEventHandler = ExecutedEventHandler;
			return cloneItem;
		}

		#endregion

	}

	#endregion

}

