namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: RegistrationLanguageIteratorSchema

	/// <exclude/>
	public class RegistrationLanguageIteratorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public RegistrationLanguageIteratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public RegistrationLanguageIteratorSchema(RegistrationLanguageIteratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6da69591-0ead-4f19-a7ad-f14d7ecb200f");
			Name = "RegistrationLanguageIterator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("7cc31540-fa76-4c79-9b86-a6eabd8e662c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,205,86,193,110,219,56,16,61,59,64,254,129,112,47,20,96,200,247,218,82,209,196,105,96,32,69,131,36,187,123,44,104,105,100,19,149,40,151,148,154,245,6,249,247,29,146,162,36,202,178,211,98,129,69,15,65,44,114,230,205,240,189,225,112,4,43,64,237,89,2,228,9,164,100,170,204,170,240,186,20,25,223,214,146,85,188,20,225,227,227,253,229,197,203,229,197,229,197,164,86,92,108,201,227,65,85,80,44,6,223,232,149,231,144,104,23,21,222,130,0,201,147,35,155,59,46,190,119,139,253,136,69,81,138,241,29,9,167,214,195,213,213,194,228,245,78,194,22,227,146,235,156,41,245,158,60,224,151,170,108,250,119,76,108,107,182,133,117,5,184,80,74,99,63,159,207,201,82,213,69,193,228,33,110,190,157,1,201,240,47,71,127,29,111,115,32,121,3,160,66,231,56,239,121,238,235,77,206,19,146,232,192,103,227,146,247,100,125,156,203,196,242,218,30,224,94,150,123,144,21,7,60,197,189,129,182,251,195,132,205,194,31,10,36,73,74,33,44,235,97,107,216,79,208,101,168,141,175,91,219,225,231,11,217,66,181,32,175,54,218,94,242,31,172,130,46,225,135,58,7,242,53,133,140,213,121,213,95,92,156,76,110,101,141,91,250,136,68,243,243,41,250,225,86,199,209,72,100,204,39,99,153,144,15,31,8,29,221,136,136,128,231,49,56,234,147,16,4,139,51,100,223,161,178,164,204,72,130,32,181,4,228,61,181,37,113,230,60,55,162,46,80,233,77,14,75,44,11,172,167,216,242,110,33,212,128,245,119,32,82,91,6,126,77,96,134,232,93,39,88,48,63,83,21,107,193,43,206,114,254,15,6,208,7,231,232,205,4,222,111,76,126,169,0,51,151,144,69,211,115,181,58,157,199,33,25,63,154,89,217,51,201,10,34,176,115,68,211,218,227,112,26,15,139,114,57,55,214,227,206,13,153,202,185,53,220,234,219,231,57,54,132,158,203,121,32,38,241,243,154,141,138,225,194,7,228,197,212,213,0,34,26,128,44,58,35,167,96,212,98,152,205,215,255,174,203,77,193,120,254,4,197,62,199,27,168,99,61,49,245,237,183,23,232,200,113,228,34,78,99,215,19,28,140,105,9,255,163,206,51,35,224,196,239,51,35,153,6,216,172,171,29,87,116,8,62,44,152,19,253,230,84,163,124,227,162,127,134,106,87,166,250,142,219,254,235,55,227,71,208,175,43,185,5,131,107,191,232,185,211,94,99,135,114,137,254,96,146,40,11,96,219,97,227,63,232,128,150,31,253,146,215,133,160,211,117,58,29,46,105,208,118,241,147,44,11,58,197,167,221,157,180,221,249,107,7,18,156,117,184,22,212,250,135,247,90,106,64,41,21,245,210,12,8,83,77,78,246,150,73,192,77,209,228,220,39,207,209,161,251,241,242,182,230,105,236,40,49,85,146,94,29,52,224,47,17,163,85,214,0,107,145,149,13,61,6,157,106,120,194,211,25,177,8,166,231,7,49,13,22,199,156,250,178,120,145,172,181,157,95,232,234,234,230,111,72,106,61,16,164,155,246,103,52,120,143,195,27,161,208,127,117,213,45,209,192,165,236,160,116,124,9,44,5,237,111,19,9,45,34,60,152,101,218,69,232,156,39,207,59,142,69,74,173,103,168,45,123,208,26,188,35,35,252,152,166,212,89,226,9,173,136,127,178,188,6,75,189,45,145,25,25,55,105,120,119,101,16,52,76,24,41,187,127,175,125,189,27,26,53,253,95,36,66,66,234,113,57,243,180,10,126,174,46,250,96,111,149,133,235,16,154,150,47,34,63,116,51,237,169,106,240,51,234,85,85,59,55,246,75,202,178,214,16,129,131,38,176,100,103,149,212,104,248,38,140,22,233,132,103,132,250,194,136,3,173,234,189,25,137,136,249,17,26,128,40,178,105,117,130,118,227,171,22,211,3,249,196,165,170,206,194,132,60,117,162,141,136,213,65,175,204,184,140,133,31,132,79,165,62,40,13,126,173,225,189,53,212,160,148,170,199,168,30,209,245,81,200,70,150,207,189,135,233,196,60,118,244,58,73,72,74,153,98,237,198,15,230,23,202,10,162,226,25,199,34,62,122,214,236,105,85,220,148,142,190,175,248,100,119,135,95,206,157,197,137,217,239,168,75,41,91,75,46,139,177,94,228,42,103,172,183,245,39,144,182,187,244,220,140,210,35,243,110,232,129,209,54,124,224,181,92,15,234,148,138,205,90,127,233,245,95,105,159,137,233,74,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6da69591-0ead-4f19-a7ad-f14d7ecb200f"));
		}

		#endregion

	}

	#endregion

}

