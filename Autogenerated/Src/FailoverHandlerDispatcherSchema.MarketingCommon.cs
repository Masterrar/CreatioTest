namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: FailoverHandlerDispatcherSchema

	/// <exclude/>
	public class FailoverHandlerDispatcherSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FailoverHandlerDispatcherSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FailoverHandlerDispatcherSchema(FailoverHandlerDispatcherSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2");
			Name = "FailoverHandlerDispatcher";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("097cd95f-c972-4e9b-ab53-9b1cae85bae7");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,205,87,109,111,219,54,16,254,236,2,251,15,87,13,40,100,32,144,247,57,174,13,4,105,210,121,72,215,162,73,215,15,195,80,208,210,201,86,43,139,30,73,165,113,11,255,247,29,41,82,47,148,228,20,232,176,245,139,45,145,199,123,121,238,185,227,169,96,59,148,123,22,35,220,161,16,76,242,84,69,151,188,72,179,77,41,152,202,120,241,211,147,175,63,61,153,148,50,43,54,112,123,144,10,119,115,239,157,228,243,28,99,45,44,163,151,88,160,200,226,147,50,175,215,31,233,241,21,79,48,239,201,189,204,249,154,229,217,23,99,187,183,123,147,21,127,247,22,223,98,106,85,55,91,237,96,118,187,177,29,129,99,235,93,12,70,165,110,227,45,38,101,142,98,72,226,61,174,123,214,55,38,188,243,243,106,61,186,225,155,13,45,211,62,73,252,44,112,67,198,224,50,103,82,158,195,53,203,114,126,143,226,87,86,36,100,225,69,70,105,82,100,79,24,225,217,108,6,207,101,185,219,49,113,88,218,247,183,184,23,40,177,80,18,118,168,182,60,145,160,56,100,69,166,50,13,41,66,106,85,194,182,210,41,35,167,105,214,82,181,47,215,121,22,67,172,221,24,247,2,206,97,117,177,223,95,221,147,189,155,140,18,81,104,207,38,95,141,119,117,44,215,25,230,9,5,243,70,100,247,76,97,181,185,175,94,224,157,68,65,56,23,85,242,224,67,217,121,159,183,69,165,162,68,196,32,144,37,188,200,15,176,34,228,224,67,78,63,11,160,199,87,172,96,27,20,196,62,165,33,69,17,6,21,194,193,116,110,29,194,34,169,124,210,111,109,23,201,162,84,162,140,21,23,218,81,19,188,147,241,81,54,11,47,48,101,101,174,32,110,14,70,181,112,27,72,135,228,40,134,225,20,116,113,77,142,149,143,131,214,86,100,132,21,148,65,133,210,230,228,115,166,182,144,96,154,21,152,128,6,77,187,98,81,27,241,196,172,236,153,96,59,40,168,226,23,65,23,235,96,249,124,102,118,191,205,109,47,113,93,93,83,98,134,218,102,210,5,55,241,242,74,25,27,72,244,177,159,166,118,146,222,8,190,71,161,50,108,165,104,20,50,98,129,4,46,64,234,127,181,237,243,30,212,97,143,114,44,105,150,114,171,166,101,61,95,121,88,44,225,67,218,93,145,243,22,114,167,143,122,11,210,194,180,65,101,159,38,89,10,97,207,0,44,22,80,148,121,238,96,37,96,251,34,58,246,138,49,49,82,6,230,149,228,177,250,19,168,74,81,140,184,110,133,100,227,197,144,250,123,150,151,216,146,127,36,109,175,170,54,52,82,255,247,60,75,224,22,85,151,78,161,235,42,180,164,240,193,212,153,254,119,113,27,112,124,74,121,208,220,51,1,108,191,39,137,154,115,86,75,68,218,41,69,166,173,255,25,92,24,25,87,4,127,1,147,208,89,178,248,245,25,220,86,30,85,247,208,187,62,169,59,24,185,168,47,164,196,221,154,122,24,165,234,61,23,159,204,237,235,22,195,83,81,62,173,162,132,103,207,252,94,25,213,138,162,149,236,41,93,213,55,64,82,35,228,184,48,170,167,167,165,205,18,123,90,123,51,31,8,113,205,121,14,119,226,64,17,222,233,74,11,121,169,58,69,161,87,151,85,21,58,143,204,11,44,26,157,147,26,40,230,30,22,35,152,205,107,200,26,81,143,17,214,227,148,229,178,205,223,137,246,4,214,76,162,121,88,24,159,120,26,250,85,107,77,40,113,112,10,157,191,206,98,84,7,59,141,222,83,147,196,208,105,165,148,144,171,217,166,96,235,28,175,5,223,77,109,253,90,185,7,88,44,225,129,164,204,197,175,179,251,84,191,93,172,233,118,97,177,154,70,119,92,95,176,46,204,35,196,186,13,67,216,204,61,218,202,13,103,201,213,67,140,123,67,21,116,79,157,146,160,81,79,210,61,89,225,120,19,127,185,85,130,166,143,63,116,77,135,193,104,187,15,206,32,32,121,111,223,196,122,37,4,23,129,107,51,250,62,142,204,82,104,45,157,181,28,153,159,78,132,93,167,11,21,135,40,229,39,4,46,105,22,80,232,122,93,104,210,167,115,226,2,182,250,46,8,32,82,64,87,180,119,160,146,165,130,247,53,15,90,63,217,208,187,61,215,218,215,120,103,110,85,243,26,63,195,41,45,46,189,35,101,210,80,220,175,171,170,138,234,60,167,52,151,50,77,143,26,17,114,163,91,106,29,30,147,69,31,90,119,75,46,124,144,13,102,115,119,78,59,227,68,159,250,119,19,109,187,224,163,139,36,113,130,205,105,123,39,53,116,110,147,183,165,231,251,120,219,13,160,75,215,54,97,175,185,216,49,213,166,237,153,193,44,186,166,168,126,167,137,169,62,116,108,95,169,29,234,214,1,15,49,72,26,151,7,252,183,27,102,178,211,134,206,156,104,238,228,140,121,11,136,219,227,177,249,72,162,134,210,200,16,60,213,118,100,163,9,110,124,49,25,125,253,229,24,25,195,132,78,215,194,188,166,109,79,187,165,111,79,93,56,120,61,182,46,145,183,40,121,41,98,18,231,194,224,218,10,115,48,6,235,133,13,211,76,27,100,188,39,90,133,208,212,132,21,236,77,1,99,199,41,13,151,52,194,151,2,171,36,152,175,86,150,123,238,70,52,233,91,177,179,170,97,77,7,58,86,51,18,125,243,48,244,216,0,235,62,43,37,124,228,107,9,84,210,253,79,55,160,184,11,174,136,169,116,55,124,235,212,111,135,160,96,233,42,2,120,74,230,17,33,22,152,46,2,111,244,10,102,203,104,224,195,192,204,109,175,11,18,190,85,76,168,199,6,182,254,132,231,4,42,52,235,142,53,218,136,168,129,249,67,115,157,228,118,43,179,242,182,213,255,198,215,254,8,85,15,196,167,155,142,165,159,110,0,182,176,156,102,219,121,233,142,119,141,193,245,133,239,236,83,44,207,107,175,189,54,245,120,151,106,55,168,86,99,58,245,89,105,210,119,85,36,128,187,189,58,212,241,253,79,60,34,71,30,99,209,108,246,130,107,194,111,117,102,116,69,232,111,76,160,46,243,73,35,126,192,170,6,78,135,124,75,192,81,174,13,107,127,128,192,219,238,252,135,225,255,24,89,111,156,249,87,67,247,154,111,181,218,93,60,254,3,100,69,221,31,244,20,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateGetFailoverHandlerTypesErrorLocalizableString());
			LocalizableStrings.Add(CreateCreateInstanceErrorLocalizableString());
			LocalizableStrings.Add(CreateCallCreateJobErrorLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateGetFailoverHandlerTypesErrorLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("c9adf9f1-8fb7-41c4-b0cb-eb5d9aa85db2"),
				Name = "GetFailoverHandlerTypesError",
				CreatedInPackageId = new Guid("097cd95f-c972-4e9b-ab53-9b1cae85bae7"),
				CreatedInSchemaUId = new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2"),
				ModifiedInSchemaUId = new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2")
			};
			return localizableString;
		}

		protected virtual SchemaLocalizableString CreateCreateInstanceErrorLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("7b54b7e6-7656-4c60-8b05-d9b54eca9b7a"),
				Name = "CreateInstanceError",
				CreatedInPackageId = new Guid("097cd95f-c972-4e9b-ab53-9b1cae85bae7"),
				CreatedInSchemaUId = new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2"),
				ModifiedInSchemaUId = new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2")
			};
			return localizableString;
		}

		protected virtual SchemaLocalizableString CreateCallCreateJobErrorLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("8c906d5c-2c7f-4e89-aa37-26aa5dd99d59"),
				Name = "CallCreateJobError",
				CreatedInPackageId = new Guid("097cd95f-c972-4e9b-ab53-9b1cae85bae7"),
				CreatedInSchemaUId = new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2"),
				ModifiedInSchemaUId = new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7343c90a-4ed2-4554-b75e-790168da5dd2"));
		}

		#endregion

	}

	#endregion

}

