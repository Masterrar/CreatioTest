namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ITestMessageProviderSchema

	/// <exclude/>
	public class ITestMessageProviderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ITestMessageProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ITestMessageProviderSchema(ITestMessageProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bff25474-28b1-4347-ac89-5067a0c9bd19");
			Name = "ITestMessageProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b07b1682-f254-48a2-90d7-644c52f4c69e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,84,77,111,26,49,16,61,39,82,254,195,40,189,180,82,197,222,243,193,161,164,141,56,32,161,36,183,170,7,227,157,101,173,120,237,173,199,46,66,81,254,123,199,54,11,27,4,4,148,28,64,107,123,230,189,231,153,55,54,162,65,106,133,68,120,66,231,4,217,202,15,70,214,84,106,30,156,240,202,154,139,243,151,139,243,179,64,202,204,225,113,73,30,155,235,173,53,199,107,141,50,6,211,224,30,13,58,37,57,134,163,190,56,156,243,46,140,141,71,87,49,201,21,140,159,144,252,4,137,196,28,167,206,254,83,37,186,20,91,20,5,220,80,104,26,225,150,195,213,122,21,64,80,5,147,240,133,86,126,9,149,117,224,25,6,154,140,3,132,166,100,61,131,14,166,232,225,180,97,166,149,4,213,73,216,163,224,236,37,169,88,75,158,160,175,109,73,87,48,77,249,249,112,91,99,218,120,100,114,202,122,102,65,63,3,54,66,233,181,180,133,242,53,148,75,35,26,22,33,45,171,48,126,176,202,17,90,131,195,150,225,5,129,170,96,67,129,8,210,97,117,123,25,3,123,122,239,132,23,131,135,156,50,17,244,76,151,197,16,90,103,91,116,92,23,91,129,175,17,90,225,184,169,124,93,184,73,159,12,4,204,143,183,151,37,167,115,70,199,163,8,76,96,13,92,78,108,90,191,252,30,191,100,109,185,156,61,93,6,132,177,140,203,71,130,112,176,22,89,108,23,34,179,245,169,134,81,47,67,253,13,202,97,185,191,111,55,69,74,221,32,57,244,193,25,26,62,32,5,237,41,222,140,130,148,156,86,5,221,165,37,60,20,178,238,196,50,78,151,24,145,182,106,151,177,82,233,239,70,189,253,175,59,106,12,81,254,183,235,149,37,248,60,187,34,173,95,179,181,223,110,118,182,25,105,65,108,154,29,144,123,77,158,82,210,93,22,78,180,109,188,88,230,63,162,112,7,12,47,19,236,78,33,219,94,159,102,3,41,60,198,238,227,146,29,172,42,197,126,88,249,173,231,122,135,210,186,114,143,71,86,194,238,131,42,225,7,231,252,140,41,227,18,94,96,142,254,154,239,196,127,175,39,49,199,121,18,210,31,79,59,202,9,39,144,38,145,32,74,110,54,17,82,199,204,140,170,85,172,135,39,191,22,30,132,75,106,164,224,249,230,95,153,231,158,251,136,90,53,138,103,241,176,56,242,46,246,61,145,61,108,160,143,21,153,158,130,40,109,61,181,73,20,213,54,232,18,102,201,47,254,176,2,126,31,127,255,129,254,211,178,139,253,227,163,144,167,240,180,97,112,121,114,211,76,196,250,127,198,36,116,58,62,54,11,204,29,91,78,176,168,49,61,145,209,27,221,243,180,224,62,108,94,173,195,229,159,89,171,225,49,7,127,180,237,111,121,245,242,232,238,115,137,252,123,14,56,85,72,197,142,230,113,240,54,149,229,24,21,191,82,198,39,56,145,247,254,3,141,184,14,124,222,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bff25474-28b1-4347-ac89-5067a0c9bd19"));
		}

		#endregion

	}

	#endregion

}

