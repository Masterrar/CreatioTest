namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ConditionalTransitionElementHandlerSchema

	/// <exclude/>
	public class ConditionalTransitionElementHandlerSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ConditionalTransitionElementHandlerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ConditionalTransitionElementHandlerSchema(ConditionalTransitionElementHandlerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d");
			Name = "ConditionalTransitionElementHandler";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,89,91,111,219,54,20,126,78,129,253,7,206,3,90,25,48,148,181,79,67,211,164,200,197,110,141,165,73,81,59,219,67,81,12,140,68,219,68,37,202,37,41,39,110,154,255,62,94,37,82,162,28,123,203,218,151,1,5,82,147,231,126,14,191,115,68,18,152,35,182,132,9,2,83,68,41,100,197,140,199,167,5,153,225,121,73,33,199,5,249,233,201,221,79,79,246,74,134,201,28,76,214,140,163,252,160,241,91,208,103,25,74,36,49,139,223,32,130,40,78,90,52,103,144,195,214,226,57,38,95,90,139,83,116,203,235,69,215,170,60,47,72,120,135,162,174,245,248,152,115,138,175,75,142,88,39,201,41,204,151,16,207,59,101,87,4,241,112,133,8,127,11,73,154,33,218,73,125,118,34,182,196,230,47,20,205,69,76,192,105,6,25,123,9,68,84,83,44,131,4,179,41,133,132,169,255,15,51,148,215,34,21,219,254,254,62,120,197,202,60,135,116,125,100,126,43,17,128,23,96,161,8,65,98,12,2,72,26,196,128,208,2,179,12,36,181,10,192,43,29,0,105,37,130,108,86,115,178,100,129,114,24,91,133,251,142,198,101,121,157,225,4,48,4,51,148,130,68,233,222,194,122,32,124,52,210,221,56,157,64,134,6,96,124,73,236,230,9,154,137,48,77,224,202,95,62,45,150,107,161,252,78,5,161,14,158,40,42,14,133,241,47,193,123,101,150,222,110,6,73,45,92,136,90,86,62,150,148,10,253,129,16,152,248,209,184,146,225,250,109,29,79,164,78,192,68,221,200,228,118,120,171,148,29,130,94,215,126,239,192,56,130,72,170,125,241,29,123,135,248,162,72,165,91,20,175,32,71,122,119,169,127,128,241,144,148,57,162,240,58,67,175,222,148,56,61,2,111,16,31,222,98,198,133,77,163,34,75,17,29,167,44,106,147,205,236,94,31,200,115,187,183,183,130,20,32,195,56,22,231,139,9,163,9,186,1,231,98,73,243,68,253,3,69,137,103,32,170,216,193,161,32,43,69,77,125,251,86,203,140,199,108,152,47,249,58,234,91,233,123,20,241,146,18,95,131,22,119,239,169,199,213,238,4,73,176,48,86,232,31,209,21,67,84,100,154,104,20,233,107,209,18,87,202,156,68,189,113,218,179,75,35,90,228,81,79,144,114,152,112,29,135,106,239,207,5,162,168,185,57,0,14,251,94,60,38,145,150,26,191,135,84,100,144,35,202,106,167,133,91,144,25,155,180,19,33,211,227,201,18,37,120,182,190,40,206,139,228,243,91,44,138,211,134,48,72,62,188,69,137,192,159,15,8,10,45,17,85,127,192,225,145,31,179,248,56,77,205,158,192,80,174,141,252,3,102,165,73,172,142,66,223,232,233,140,250,189,95,70,171,2,167,96,76,68,116,185,23,22,191,114,166,229,210,212,207,0,92,175,57,250,248,233,232,8,164,2,176,167,133,230,29,0,185,89,97,199,56,181,233,151,7,25,38,11,16,201,52,75,14,128,137,199,89,213,73,192,136,72,18,14,92,169,78,225,108,233,72,20,176,29,104,185,29,38,75,75,117,194,205,9,214,231,60,30,21,52,135,60,234,221,253,122,255,215,221,243,251,158,107,216,64,137,140,101,152,159,27,35,101,241,106,123,58,138,119,76,120,209,85,169,19,196,85,62,7,160,89,140,145,163,200,163,150,198,134,232,107,87,124,250,83,145,24,142,210,147,117,88,141,111,115,124,170,17,83,174,198,198,100,17,49,79,224,187,34,197,51,252,152,18,117,80,166,235,37,10,75,124,7,233,103,36,203,91,245,0,22,215,244,103,107,2,115,156,52,5,10,86,161,114,59,97,182,235,140,112,38,49,192,203,83,83,238,4,65,154,44,228,4,179,49,99,47,42,46,115,226,13,42,132,74,249,76,64,3,71,27,206,100,7,154,203,178,211,188,29,101,247,95,3,228,214,30,94,45,69,96,54,121,184,1,117,52,239,22,32,227,19,170,232,232,165,70,116,132,147,193,144,136,152,96,190,208,16,46,153,63,20,55,22,211,163,126,69,243,232,245,223,16,121,73,66,2,69,189,161,41,206,81,124,197,147,139,226,166,193,187,107,77,110,206,190,108,236,95,74,152,181,114,31,192,163,102,242,187,241,250,56,225,66,38,254,218,172,2,155,47,57,112,216,115,56,81,227,168,157,58,26,227,69,115,160,168,7,59,38,235,221,242,2,95,88,60,202,138,27,51,148,49,239,8,220,202,246,123,27,155,61,137,40,241,91,200,70,25,156,55,236,113,41,234,65,207,6,226,233,83,112,11,176,55,27,79,208,151,18,145,4,57,170,107,98,161,23,62,68,221,143,53,34,141,83,240,243,161,234,97,177,26,185,118,149,34,253,81,130,118,101,28,27,190,83,49,42,207,81,90,3,161,26,212,116,228,182,144,163,83,214,70,52,156,250,41,11,166,210,215,86,69,100,147,80,139,5,66,100,112,82,246,244,110,22,164,219,186,16,228,241,136,170,79,208,146,71,142,46,35,198,194,146,195,25,244,170,93,130,142,58,13,18,152,176,200,241,55,20,124,9,83,1,232,116,216,6,96,72,18,1,45,98,168,185,154,142,126,147,227,228,137,32,170,37,131,215,175,65,175,30,38,107,251,171,16,238,98,191,102,250,129,246,7,59,141,215,31,76,186,67,115,176,63,230,54,0,100,72,56,230,107,91,120,33,136,251,128,242,98,133,174,72,201,80,186,51,202,153,163,41,190,176,26,122,199,68,196,94,156,171,127,64,237,129,222,22,112,218,62,3,80,161,246,168,254,16,212,172,15,98,235,35,131,235,150,232,234,116,197,186,198,118,3,218,78,52,168,198,158,105,161,103,174,142,88,116,39,224,71,70,198,161,222,45,30,162,5,92,20,220,126,232,63,66,124,235,185,65,33,104,163,192,66,183,15,54,224,241,49,113,47,27,130,83,115,139,105,195,88,114,134,213,116,6,233,186,241,201,232,244,140,122,178,250,55,215,43,93,154,190,211,101,203,99,220,181,216,37,103,212,252,177,215,48,187,221,194,108,186,132,177,225,180,87,49,38,190,123,234,206,64,252,59,4,15,94,197,28,24,22,157,87,121,89,106,130,212,197,236,7,82,122,168,89,173,160,246,117,144,44,155,90,174,213,120,191,227,29,144,242,73,95,7,248,87,39,45,203,219,87,36,99,25,10,53,132,94,160,27,249,55,234,158,121,186,26,187,149,20,240,165,235,82,104,203,134,108,67,96,53,116,118,105,237,253,49,73,79,48,217,189,77,111,217,61,55,195,225,145,59,83,253,255,169,18,252,84,121,236,111,13,7,95,221,232,111,254,186,232,108,17,200,251,166,96,254,135,134,211,52,102,141,198,230,93,95,56,79,18,152,120,70,57,233,110,104,138,127,71,107,22,158,175,171,210,12,161,80,67,204,199,90,91,37,193,130,143,194,8,109,184,124,134,81,199,62,4,25,109,52,10,8,21,188,174,168,54,97,227,19,83,210,195,140,161,118,219,126,248,237,228,161,39,161,234,10,130,57,193,126,198,244,53,210,181,122,136,2,12,174,228,67,79,224,101,44,240,68,244,241,146,202,64,60,239,127,82,40,163,31,140,20,200,92,58,15,91,21,170,112,186,182,41,234,188,13,49,1,218,244,41,97,66,35,108,228,178,146,244,32,165,222,181,110,171,18,48,239,85,57,98,12,206,205,119,240,121,242,117,162,150,117,7,218,244,150,37,58,180,235,65,165,162,234,116,22,110,206,139,249,92,52,183,33,165,5,53,151,230,70,231,64,152,243,16,100,239,241,5,45,110,218,169,14,102,79,151,32,3,137,40,36,249,176,231,156,151,103,58,133,194,126,144,97,242,153,1,204,229,251,168,123,162,54,38,240,69,40,129,178,96,67,169,219,216,63,190,87,110,164,113,223,59,43,141,3,168,87,253,69,177,246,55,234,32,204,30,68,32,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateOnCopyExceptionLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateOnCopyExceptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("8bf5e243-9892-4fc1-9e2b-141cb6d52222"),
				Name = "OnCopyException",
				CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48"),
				CreatedInSchemaUId = new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d"),
				ModifiedInSchemaUId = new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2af9086c-4bf0-45a0-926a-77e05a3df84d"));
		}

		#endregion

	}

	#endregion

}

