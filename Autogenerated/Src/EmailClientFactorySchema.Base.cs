namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: EmailClientFactorySchema

	/// <exclude/>
	public class EmailClientFactorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailClientFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailClientFactorySchema(EmailClientFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("bb18ef6c-25c9-43e3-b6da-de0755b0e432");
			Name = "EmailClientFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("a99d7388-fb0e-4870-87fc-76975bec5847");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,229,86,203,110,219,48,16,60,187,64,255,97,235,92,100,192,176,129,30,227,216,64,234,198,69,14,1,138,244,113,41,122,96,164,149,76,64,162,4,146,74,96,20,249,247,174,72,201,38,245,136,147,180,77,14,245,193,176,169,217,217,229,238,104,72,193,50,84,5,11,17,190,162,148,76,229,177,158,93,49,158,206,190,160,136,80,194,175,183,111,70,165,226,34,113,158,175,115,17,243,164,148,76,243,92,44,122,1,18,135,214,103,27,22,234,92,114,84,132,32,204,137,196,132,104,96,157,50,165,78,225,34,163,228,235,148,163,208,22,184,51,168,249,124,14,103,170,204,50,38,119,171,250,191,129,66,104,176,16,91,48,240,172,72,49,163,21,83,220,172,9,157,59,177,63,62,98,204,202,84,127,224,34,162,250,2,189,43,48,143,131,203,110,234,201,228,39,225,139,242,38,229,33,37,162,2,123,234,131,83,232,9,173,26,71,177,251,237,109,120,138,17,237,239,179,228,183,76,163,125,88,200,92,99,168,49,2,137,44,202,69,186,131,111,10,37,245,87,208,114,21,230,255,93,212,156,52,26,75,235,231,32,160,210,178,172,242,87,153,76,217,22,225,181,239,196,251,128,243,237,252,34,56,34,132,18,227,229,184,187,187,241,124,53,243,122,106,51,20,76,178,12,4,73,106,57,46,189,202,199,171,118,130,78,9,246,67,180,134,197,144,214,157,239,230,15,90,109,242,147,77,140,106,71,163,22,104,217,130,85,10,29,221,63,220,210,43,212,219,40,55,115,171,71,213,211,208,107,212,165,20,10,66,148,154,113,225,182,206,85,6,53,173,22,17,167,57,49,17,98,95,15,165,37,91,173,159,65,214,196,250,218,114,195,224,19,234,154,217,89,13,154,142,241,24,90,173,157,81,192,165,218,32,35,102,188,16,236,134,100,28,88,69,92,10,141,137,53,129,239,239,199,147,134,99,100,171,176,47,116,61,175,138,229,204,173,99,21,8,188,115,5,123,46,147,178,122,109,131,182,112,166,173,119,96,50,49,115,171,6,119,200,37,202,52,117,199,249,15,198,3,35,232,138,156,88,34,10,229,44,85,227,213,185,216,71,66,30,131,222,162,17,28,56,32,71,221,123,190,191,51,240,138,238,73,35,95,31,170,114,43,124,5,37,88,236,232,217,130,152,30,35,112,167,52,245,54,107,35,143,41,234,49,246,48,100,182,205,66,199,237,58,142,123,50,117,125,208,121,60,44,136,3,121,151,191,47,147,177,215,7,93,91,153,83,223,100,57,143,104,203,74,29,156,187,125,82,180,204,218,19,243,211,246,209,182,46,107,251,183,92,234,146,165,190,152,73,182,116,124,186,66,166,121,87,183,140,110,229,141,12,189,120,116,126,47,135,220,112,177,127,5,92,248,187,165,81,69,91,221,14,196,213,145,159,168,210,230,151,76,23,117,134,150,130,23,174,242,218,124,125,150,214,44,52,214,134,238,85,168,186,207,64,156,75,80,5,134,60,230,228,7,230,249,115,102,95,223,2,155,248,129,105,63,96,89,3,167,83,39,57,79,4,93,14,175,121,178,213,148,118,147,178,132,12,148,105,168,238,104,33,77,92,193,221,150,94,54,170,69,231,96,193,32,13,186,239,198,240,167,210,153,194,77,158,167,224,22,245,31,168,233,197,60,170,215,173,142,155,147,119,218,14,49,188,190,33,29,57,89,159,44,32,151,227,133,181,228,159,150,143,17,86,235,164,180,171,254,226,253,111,227,234,35,61,116,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("bb18ef6c-25c9-43e3-b6da-de0755b0e432"));
		}

		#endregion

	}

	#endregion

}

