namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ImapFolderSchema

	/// <exclude/>
	public class ImapFolderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImapFolderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImapFolderSchema(ImapFolderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d0f5998d-7198-4457-bf8b-3d6cc640f362");
			Name = "ImapFolder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("1b48d10c-73f9-465d-8c06-a582b79b2f43");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,84,75,111,219,48,12,62,167,64,255,3,209,94,218,75,114,95,31,135,117,8,80,96,43,138,165,221,206,138,76,199,68,101,201,211,163,89,80,228,191,143,146,236,216,201,154,37,221,33,138,249,254,244,145,162,22,53,186,70,72,132,39,180,86,56,83,250,241,157,209,37,45,130,21,158,140,30,223,215,162,57,61,121,59,61,25,5,71,122,1,179,149,243,88,95,109,228,111,130,212,103,196,228,23,191,217,194,182,115,139,11,142,134,59,37,156,251,4,209,56,53,170,64,155,172,147,201,4,174,93,168,107,97,87,183,173,156,60,193,87,194,3,106,41,26,23,148,240,232,216,15,17,164,197,242,230,108,183,212,56,167,60,155,220,2,105,231,133,150,56,238,178,79,118,210,95,91,100,241,197,117,242,79,225,98,86,46,81,112,48,24,203,137,192,27,168,197,11,38,184,207,158,20,121,66,55,67,251,74,76,16,213,141,194,26,181,79,188,112,80,129,13,242,161,61,148,214,212,128,191,61,90,45,20,40,154,91,174,220,67,25,148,110,194,92,145,4,153,46,219,179,2,111,137,151,158,54,195,247,177,65,122,99,153,189,199,28,148,93,218,12,125,236,69,155,162,76,127,151,49,213,104,52,122,224,198,194,77,171,28,71,233,42,233,191,160,162,154,24,105,111,220,168,178,199,172,50,214,111,135,111,84,217,227,187,88,110,219,91,69,182,62,160,243,60,24,95,241,21,213,0,193,64,155,253,166,74,44,92,239,144,196,100,89,239,187,104,123,183,214,126,206,228,103,186,182,185,123,180,166,65,27,59,215,49,151,237,220,139,225,204,69,121,26,148,2,29,175,98,74,30,61,236,176,116,238,195,33,234,240,112,95,226,216,39,2,50,213,11,244,249,70,174,253,88,199,99,79,201,39,174,34,43,97,133,140,61,88,86,36,43,32,7,193,241,28,242,72,10,168,8,121,122,100,181,130,98,211,42,70,231,176,225,32,143,160,34,131,46,170,50,216,132,223,29,3,185,111,253,126,220,123,80,167,1,200,76,93,44,201,87,38,120,96,60,105,246,7,40,128,74,16,122,117,249,113,58,251,161,251,48,182,61,77,140,108,46,249,103,209,7,171,153,221,249,42,89,29,63,103,182,146,150,42,20,177,244,254,123,28,3,188,123,11,255,49,10,249,133,48,104,157,223,70,198,207,195,208,66,33,205,251,104,11,221,191,219,204,254,176,245,248,142,192,4,187,160,142,216,183,233,165,198,165,203,59,204,72,74,43,52,14,197,59,45,135,119,129,14,210,64,62,15,54,253,111,156,237,214,11,154,126,5,94,206,113,15,83,73,135,74,43,195,60,63,223,23,63,132,162,130,252,234,64,229,225,142,105,117,67,213,250,15,180,36,115,250,63,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d0f5998d-7198-4457-bf8b-3d6cc640f362"));
		}

		#endregion

	}

	#endregion

}

