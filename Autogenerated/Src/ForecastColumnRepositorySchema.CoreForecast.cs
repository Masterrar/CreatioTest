namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnRepositorySchema

	/// <exclude/>
	public class ForecastColumnRepositorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnRepositorySchema(ForecastColumnRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4b467841-fbdd-4c76-b17f-b9d97a6b110f");
			Name = "ForecastColumnRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,89,89,143,227,54,18,126,214,2,251,31,8,37,15,50,182,33,3,121,236,195,193,244,53,235,197,38,211,137,61,179,15,131,65,192,150,202,109,37,178,228,33,169,158,113,26,254,239,169,226,161,131,182,100,183,129,32,187,192,190,116,91,84,85,177,206,175,138,84,193,87,32,215,60,1,54,7,33,184,44,23,42,190,41,139,69,246,84,9,174,178,178,136,239,75,1,9,151,234,195,119,236,229,239,127,11,42,153,21,79,108,182,145,10,86,23,222,51,114,230,57,36,196,38,227,183,80,128,200,146,134,166,189,129,128,253,235,171,85,89,244,191,137,255,37,251,94,11,136,239,121,162,74,145,129,236,165,184,43,84,166,134,8,110,175,241,21,190,252,70,192,19,26,193,166,133,2,177,64,239,156,179,169,243,3,218,88,173,138,159,97,93,202,12,247,219,104,134,241,120,204,46,101,181,90,113,177,153,216,231,7,81,62,103,41,72,182,2,181,44,83,201,22,165,96,40,3,178,103,218,58,209,114,88,202,21,103,229,130,94,106,241,177,147,54,110,137,91,87,143,121,150,176,204,169,51,164,77,64,81,218,81,72,47,188,5,37,153,90,130,221,91,250,251,238,110,108,86,214,92,240,21,43,48,85,174,66,71,63,77,195,201,28,69,185,103,134,166,162,123,23,25,136,248,114,172,57,26,1,2,84,37,10,57,105,242,131,182,190,148,128,170,8,88,92,133,93,115,194,241,228,114,236,120,72,200,244,174,168,86,32,248,99,14,151,93,210,9,25,101,126,202,232,109,149,165,172,81,112,100,130,185,223,23,183,144,131,194,224,24,87,28,107,189,92,2,40,207,112,189,214,54,102,166,137,198,147,93,63,180,69,153,141,157,27,109,54,28,227,196,89,246,164,221,151,106,11,152,84,92,85,50,238,58,236,177,44,115,107,98,164,213,49,90,158,49,237,34,183,181,117,208,182,55,133,157,175,91,94,234,203,205,36,231,82,178,110,112,14,39,35,86,132,116,73,217,178,125,32,26,207,60,175,160,126,156,247,241,53,100,86,63,109,248,52,101,47,236,9,212,5,237,122,193,182,3,249,177,163,30,69,237,117,138,121,28,59,42,73,37,8,8,126,68,178,211,213,210,133,79,56,125,180,106,38,54,40,36,5,129,144,162,165,236,65,129,29,117,17,125,216,131,221,237,116,125,241,135,66,171,229,171,245,117,140,175,81,217,122,120,230,88,61,173,131,224,120,189,147,50,125,69,248,223,23,217,231,10,152,130,175,74,115,82,189,186,18,47,210,44,225,136,213,71,40,126,67,172,39,187,90,109,214,167,85,149,245,184,207,31,12,40,172,203,107,142,12,167,150,152,180,168,182,204,210,166,59,30,175,242,172,195,62,168,170,198,198,169,252,103,246,10,223,222,130,196,97,134,231,217,239,216,50,234,116,250,21,199,17,166,74,146,97,125,102,95,177,242,241,87,236,115,67,234,59,180,238,226,182,85,113,222,116,53,183,217,229,124,18,141,216,151,37,8,28,213,206,13,220,158,177,2,190,224,170,6,217,192,200,97,52,35,197,45,125,137,177,214,248,251,239,89,248,178,13,71,244,3,121,217,60,162,30,16,216,22,96,254,126,3,69,106,230,159,206,44,116,67,59,158,179,191,114,12,50,226,1,120,46,75,219,107,15,79,173,113,239,172,20,178,49,73,253,120,11,11,94,229,234,154,42,179,120,138,40,237,203,69,212,203,54,26,125,26,110,123,13,41,27,156,27,169,57,146,243,107,15,227,216,172,120,161,208,203,15,34,123,230,10,204,251,181,121,64,87,21,52,110,24,104,232,138,101,87,204,159,161,46,14,178,78,29,18,181,185,235,197,1,1,88,227,200,129,163,75,63,137,110,106,72,68,255,7,200,230,153,202,53,157,254,49,64,88,103,48,210,186,223,3,228,117,159,66,114,247,123,128,92,227,44,146,210,255,33,109,9,16,73,89,252,31,218,225,210,171,150,110,48,69,69,71,18,138,167,206,22,27,78,147,57,125,121,17,189,199,210,69,238,194,14,202,85,231,209,21,123,119,53,190,89,66,242,219,27,241,132,83,114,161,126,172,242,60,162,225,3,179,216,227,54,213,30,120,91,92,121,155,180,32,97,199,190,181,40,21,82,65,106,112,212,89,241,126,250,225,187,187,130,6,116,204,141,9,235,110,128,103,65,53,149,247,128,131,170,0,75,21,133,109,214,208,205,234,206,125,136,26,107,16,116,88,163,98,176,91,250,26,120,102,120,143,22,219,183,221,34,106,234,17,242,188,85,169,191,36,157,231,139,157,86,80,31,158,234,193,159,56,16,201,28,75,220,219,164,230,195,92,173,14,85,155,214,167,166,247,120,165,217,2,79,121,66,247,200,95,187,50,8,110,78,201,27,10,201,101,207,38,147,72,11,13,168,65,180,210,216,165,87,20,118,179,37,60,243,60,63,26,141,14,20,199,15,166,21,244,224,220,208,105,239,221,163,44,233,84,51,197,205,196,192,209,207,150,201,51,167,94,35,17,221,209,126,178,231,223,153,84,190,80,219,3,53,241,154,171,37,146,126,27,126,124,217,65,196,237,249,52,61,175,159,62,197,97,195,6,242,179,221,64,223,49,108,102,201,18,86,252,167,10,118,234,57,110,19,252,192,11,254,4,226,204,3,131,150,62,89,106,150,44,158,226,62,241,155,212,174,69,90,217,127,32,28,143,98,122,223,112,81,241,31,230,163,119,62,39,13,171,135,57,9,39,125,78,59,159,15,48,59,220,246,57,221,17,166,110,101,93,54,135,223,214,43,93,234,248,29,29,99,174,55,111,100,226,194,72,220,247,89,174,64,72,146,18,209,243,141,64,240,1,179,250,159,76,45,31,232,104,13,68,18,153,197,155,114,133,199,237,12,103,39,2,247,248,238,115,197,243,51,102,143,242,103,237,204,26,181,157,85,95,103,24,165,49,33,77,120,155,139,14,47,252,150,155,228,241,100,201,34,29,99,5,43,58,213,52,226,92,250,6,38,119,181,25,148,92,94,211,183,68,129,238,199,36,133,20,32,253,173,235,62,16,176,92,82,105,76,162,118,34,141,206,44,163,13,83,47,171,233,123,147,168,155,79,53,187,109,155,7,217,187,73,85,179,183,122,250,65,17,59,217,85,75,105,181,250,94,41,120,116,157,68,94,226,104,33,70,198,214,70,101,219,158,163,141,235,219,173,240,24,124,250,179,112,233,79,3,152,19,0,143,50,29,129,155,58,157,86,192,58,116,42,223,228,95,248,70,206,128,178,24,101,98,223,128,134,163,41,104,61,235,141,246,189,169,17,98,47,27,70,117,239,139,208,28,230,194,255,73,216,252,63,248,245,130,159,11,201,49,248,208,206,41,155,1,135,49,209,220,128,6,173,24,18,79,26,207,203,153,22,235,156,26,100,11,22,153,157,48,203,105,188,126,39,238,86,107,181,209,192,56,170,21,14,142,217,180,3,196,86,126,112,172,153,30,16,59,246,228,52,32,182,236,219,215,247,154,212,235,32,164,151,215,21,104,175,83,144,190,198,128,87,3,124,93,43,142,211,222,71,29,12,201,183,225,11,189,217,226,137,182,230,181,23,68,3,188,116,254,153,52,224,243,170,86,114,120,48,110,29,24,255,59,191,229,180,46,11,143,250,166,99,46,91,172,90,123,238,188,78,252,198,99,19,179,89,233,158,133,155,50,197,195,240,46,144,81,97,239,57,194,182,230,47,29,64,191,171,119,191,49,249,225,238,59,163,248,92,205,133,35,230,239,18,68,166,210,50,177,110,106,223,85,30,254,142,211,154,42,204,154,233,254,152,189,135,103,3,125,56,215,23,79,9,92,111,168,158,35,63,116,93,212,55,109,170,189,143,237,48,70,248,126,204,215,144,44,103,85,146,128,36,24,88,240,92,66,19,3,123,221,123,15,42,89,222,139,114,117,123,29,213,198,213,193,48,159,108,163,219,235,187,175,144,84,116,111,149,62,214,63,247,152,42,43,1,183,215,205,82,212,66,234,134,51,158,41,46,212,92,240,66,114,75,230,96,85,225,177,217,49,4,221,51,114,108,130,66,139,50,178,49,169,231,184,7,140,101,137,184,50,210,107,31,63,177,23,182,139,168,116,111,107,110,210,156,165,108,203,182,245,222,65,219,91,214,61,54,17,218,159,239,2,223,26,250,82,158,237,55,103,203,112,142,163,190,123,251,248,110,13,230,162,244,238,107,2,107,93,188,240,181,241,78,91,224,207,88,223,143,60,249,109,175,200,64,45,69,249,165,222,160,238,39,187,69,81,155,51,0,131,251,238,159,113,237,15,221,9,164,49,164,32,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4b467841-fbdd-4c76-b17f-b9d97a6b110f"));
		}

		#endregion

	}

	#endregion

}

