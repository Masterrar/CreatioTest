namespace Terrasoft.WebApp
{

	using Newtonsoft.Json;
	using Newtonsoft.Json.Linq;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.ComponentModel;
	using System.Drawing;
	using System.Globalization;
	using System.Linq;
	using System.Runtime.Serialization.Formatters;
	using System.Text;
	using System.Web;
	using System.Web.UI.WebControls;
	using Terrasoft.Common;
	using Terrasoft.Common.Json;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;
	using Terrasoft.Core.DB;
	using Terrasoft.Core.Entities;
	using Terrasoft.Core.Process;
	using Terrasoft.Core.Process.Configuration;
	using Terrasoft.UI.WebControls;
	using Terrasoft.UI.WebControls.Controls;
	using Terrasoft.UI.WebControls.Utilities;
	using UIControls = Terrasoft.UI.WebControls.Controls;

	#region Class: AutoGeneratedPageUserTaskParametersEditPageSchema

	/// <exclude/>
	public class AutoGeneratedPageUserTaskParametersEditPageSchema : Terrasoft.WebApp.BaseProcessParametersEditPageSchema
	{

		#region Properties: Public

		private Terrasoft.UI.WebControls.Controls.TabPanel _sourceTabPanel;
		public Terrasoft.UI.WebControls.Controls.TabPanel SourceTabPanel {
			get {
				return _sourceTabPanel;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Tab _autoGeneratedPageParametersTab;
		public Terrasoft.UI.WebControls.Controls.Tab AutoGeneratedPageParametersTab {
			get {
				return _autoGeneratedPageParametersTab;
			}
		}

		private Terrasoft.UI.WebControls.Controls.ControlLayout _pageParametersControlLayout;
		public Terrasoft.UI.WebControls.Controls.ControlLayout PageParametersControlLayout {
			get {
				return _pageParametersControlLayout;
			}
		}

		private Terrasoft.UI.WebControls.Controls.TextEdit _userTaskTitleEdit;
		public Terrasoft.UI.WebControls.Controls.TextEdit UserTaskTitleEdit {
			get {
				return _userTaskTitleEdit;
			}
		}

		private Terrasoft.UI.WebControls.Controls.TextEdit _titleEditEdit;
		public Terrasoft.UI.WebControls.Controls.TextEdit TitleEditEdit {
			get {
				return _titleEditEdit;
			}
		}

		private Terrasoft.UI.WebControls.Controls.MemoEdit _recommendationEdit;
		public Terrasoft.UI.WebControls.Controls.MemoEdit RecommendationEdit {
			get {
				return _recommendationEdit;
			}
		}

		private Terrasoft.UI.WebControls.Controls.MemoEdit _informationOnStepMemoEdit;
		public Terrasoft.UI.WebControls.Controls.MemoEdit InformationOnStepMemoEdit {
			get {
				return _informationOnStepMemoEdit;
			}
		}

		private Terrasoft.UI.WebControls.Controls.LookupEdit _entitySchemaLookupEdit;
		public Terrasoft.UI.WebControls.Controls.LookupEdit EntitySchemaLookupEdit {
			get {
				return _entitySchemaLookupEdit;
			}
		}

		private Terrasoft.UI.WebControls.Controls.ProcessSchemaParameterValueEdit _entityEdit;
		public Terrasoft.UI.WebControls.Controls.ProcessSchemaParameterValueEdit EntityEdit {
			get {
				return _entityEdit;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Label _buttonsLabel;
		public Terrasoft.UI.WebControls.Controls.Label ButtonsLabel {
			get {
				return _buttonsLabel;
			}
		}

		private Terrasoft.UI.WebControls.Controls.ControlLayout _buttonsConfigControlLayout;
		public Terrasoft.UI.WebControls.Controls.ControlLayout ButtonsConfigControlLayout {
			get {
				return _buttonsConfigControlLayout;
			}
		}

		private Terrasoft.UI.WebControls.Controls.ControlLayout _buttonsControlLayout;
		public Terrasoft.UI.WebControls.Controls.ControlLayout ButtonsControlLayout {
			get {
				return _buttonsControlLayout;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _addButton;
		public Terrasoft.UI.WebControls.Controls.Button AddButton {
			get {
				return _addButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _editButton;
		public Terrasoft.UI.WebControls.Controls.Button EditButton {
			get {
				return _editButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _deleteButton;
		public Terrasoft.UI.WebControls.Controls.Button DeleteButton {
			get {
				return _deleteButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Spacer _spacer2;
		public Terrasoft.UI.WebControls.Controls.Spacer Spacer2 {
			get {
				return _spacer2;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _upButton;
		public Terrasoft.UI.WebControls.Controls.Button UpButton {
			get {
				return _upButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _downButton;
		public Terrasoft.UI.WebControls.Controls.Button DownButton {
			get {
				return _downButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.TreeGrid _buttonsTreeGrid;
		public Terrasoft.UI.WebControls.Controls.TreeGrid ButtonsTreeGrid {
			get {
				return _buttonsTreeGrid;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Label _elementsLabel;
		public Terrasoft.UI.WebControls.Controls.Label ElementsLabel {
			get {
				return _elementsLabel;
			}
		}

		private Terrasoft.UI.WebControls.Controls.ControlLayout _elementsControlLayout;
		public Terrasoft.UI.WebControls.Controls.ControlLayout ElementsControlLayout {
			get {
				return _elementsControlLayout;
			}
		}

		private Terrasoft.UI.WebControls.Controls.ControlLayout _buttonsControlLayout1;
		public Terrasoft.UI.WebControls.Controls.ControlLayout ButtonsControlLayout1 {
			get {
				return _buttonsControlLayout1;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _addElementButton;
		public Terrasoft.UI.WebControls.Controls.Button AddElementButton {
			get {
				return _addElementButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _editElementButton;
		public Terrasoft.UI.WebControls.Controls.Button EditElementButton {
			get {
				return _editElementButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _deleteElementButton;
		public Terrasoft.UI.WebControls.Controls.Button DeleteElementButton {
			get {
				return _deleteElementButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Spacer _spacer3;
		public Terrasoft.UI.WebControls.Controls.Spacer Spacer3 {
			get {
				return _spacer3;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _groupEditButton;
		public Terrasoft.UI.WebControls.Controls.Button GroupEditButton {
			get {
				return _groupEditButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _upElementButton;
		public Terrasoft.UI.WebControls.Controls.Button UpElementButton {
			get {
				return _upElementButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Button _downElementButton;
		public Terrasoft.UI.WebControls.Controls.Button DownElementButton {
			get {
				return _downElementButton;
			}
		}

		private Terrasoft.UI.WebControls.Controls.TreeGrid _elementsTreeGrid;
		public Terrasoft.UI.WebControls.Controls.TreeGrid ElementsTreeGrid {
			get {
				return _elementsTreeGrid;
			}
		}

		private Terrasoft.UI.WebControls.Controls.Tab _sourceTab;
		public Terrasoft.UI.WebControls.Controls.Tab SourceTab {
			get {
				return _sourceTab;
			}
		}

		private Terrasoft.UI.WebControls.Controls.ControlLayout _sourceControlLayout;
		public Terrasoft.UI.WebControls.Controls.ControlLayout SourceControlLayout {
			get {
				return _sourceControlLayout;
			}
		}

		private Terrasoft.UI.WebControls.Controls.MemoEdit _codeSyntaxMemoEdit;
		public Terrasoft.UI.WebControls.Controls.MemoEdit CodeSyntaxMemoEdit {
			get {
				return _codeSyntaxMemoEdit;
			}
		}

		#endregion

		#region Constructors: Public

		public AutoGeneratedPageUserTaskParametersEditPageSchema(PageSchemaManager pageSchemaManager)
			: base(pageSchemaManager) {
		}

		public AutoGeneratedPageUserTaskParametersEditPageSchema(AutoGeneratedPageUserTaskParametersEditPageSchema source)
			: base(source) {
		}

		#endregion

		#region Methods: Private

		private void UpdateTopControlLayout() {
			TopControlLayout.Image = new ControlImage {};
			TopControlLayout.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
		}

		private void UpdateContextHelpButton() {
			ContextHelpButton.Image = new ControlImage {};
			ContextHelpButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
		}

		private void UpdateOkButton() {
			OkButton.AjaxEvents.Click.IsProcessEventHandler = true;
			OkButton.Image = new ControlImage {};
			OkButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
		}

		private void UpdateCancelButton() {
			CancelButton.AjaxEvents.Click.IsProcessEventHandler = true;
			CancelButton.Image = new ControlImage {};
			CancelButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
		}

		private void UpdateBottomControlLayout() {
			BottomControlLayout.Image = new ControlImage {};
			BottomControlLayout.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			RealUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			Name = "AutoGeneratedPageUserTaskParametersEditPage";
			ParentSchemaUId = new Guid("eda93b42-6405-4946-9e28-d45fecd6d1d8");
			CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59");
			Width = 510;
			Height = 650;
			UseProfile = false;
		}

		protected override void InitializeParameters() {
			base.InitializeParameters();
		}

		protected override void InitializeEventsProcessSchema() {
			EventsProcessSchema = CreateAutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema();
		}

		protected override void InitializeControls() {
			base.InitializeControls();
			UpdateBottomControlLayout();
			UpdateCancelButton();
			UpdateOkButton();
			UpdateContextHelpButton();
			UpdateTopControlLayout();
			TopLevelControl.MoveItem(0, MainMessagePanel);
			TopLevelControl.MoveItem(1, TopControlLayout);
			TopControlLayout.InsertItem(0, CreateSourceTabPanel());
			SourceTabPanel.InsertItem(0, CreateAutoGeneratedPageParametersTab());
			AutoGeneratedPageParametersTab.InsertItem(0, CreatePageParametersControlLayout());
			PageParametersControlLayout.InsertItem(0, CreateUserTaskTitleEdit());
			PageParametersControlLayout.InsertItem(1, CreateTitleEditEdit());
			PageParametersControlLayout.InsertItem(2, CreateRecommendationEdit());
			PageParametersControlLayout.InsertItem(3, CreateInformationOnStepMemoEdit());
			PageParametersControlLayout.InsertItem(4, CreateEntitySchemaLookupEdit());
			PageParametersControlLayout.InsertItem(5, CreateEntityEdit());
			PageParametersControlLayout.InsertItem(6, CreateButtonsLabel());
			PageParametersControlLayout.InsertItem(7, CreateButtonsConfigControlLayout());
			ButtonsConfigControlLayout.InsertItem(0, CreateButtonsControlLayout());
			ButtonsControlLayout.InsertItem(0, CreateAddButton());
			ButtonsControlLayout.InsertItem(1, CreateEditButton());
			ButtonsControlLayout.InsertItem(2, CreateDeleteButton());
			ButtonsControlLayout.InsertItem(3, CreateSpacer2());
			ButtonsControlLayout.InsertItem(4, CreateUpButton());
			ButtonsControlLayout.InsertItem(5, CreateDownButton());
			ButtonsConfigControlLayout.InsertItem(1, CreateButtonsTreeGrid());
			PageParametersControlLayout.InsertItem(8, CreateElementsLabel());
			PageParametersControlLayout.InsertItem(9, CreateElementsControlLayout());
			ElementsControlLayout.InsertItem(0, CreateButtonsControlLayout1());
			ButtonsControlLayout1.InsertItem(0, CreateAddElementButton());
			ButtonsControlLayout1.InsertItem(1, CreateEditElementButton());
			ButtonsControlLayout1.InsertItem(2, CreateDeleteElementButton());
			ButtonsControlLayout1.InsertItem(3, CreateSpacer3());
			ButtonsControlLayout1.InsertItem(4, CreateGroupEditButton());
			ButtonsControlLayout1.InsertItem(5, CreateUpElementButton());
			ButtonsControlLayout1.InsertItem(6, CreateDownElementButton());
			ElementsControlLayout.InsertItem(1, CreateElementsTreeGrid());
			SourceTabPanel.InsertItem(1, CreateSourceTab());
			SourceTab.InsertItem(0, CreateSourceControlLayout());
			SourceControlLayout.InsertItem(0, CreateCodeSyntaxMemoEdit());
			TopLevelControl.MoveItem(2, BottomControlLayout);
			BottomControlLayout.MoveItem(0, ContextHelpButton);
			BottomControlLayout.MoveItem(1, Spacer1);
			BottomControlLayout.MoveItem(2, OkButton);
			BottomControlLayout.MoveItem(3, CancelButton);
			SetControlsDefInheritance(UId);
			InitializeLocalizableValues();
		}

		protected virtual EmbeddedProcessSchema CreateAutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema() {
			var schema = new AutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema(ProcessSchemaManager, this);
			schema.InitializePrimaryInfo();
			return schema;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.TextEdit CreateUserTaskTitleEdit() {
			_userTaskTitleEdit = new Terrasoft.UI.WebControls.Controls.TextEdit();
			_userTaskTitleEdit.UId = new Guid("16a52b9a-1b1d-4a30-b4ab-3b916b4f14a8");
			_userTaskTitleEdit.Name = "UserTaskTitleEdit";
			_userTaskTitleEdit.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_userTaskTitleEdit.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_userTaskTitleEdit.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_userTaskTitleEdit.Tag = "";
			_userTaskTitleEdit.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_userTaskTitleEdit.Image = new ControlImage {};
			_userTaskTitleEdit.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			return _userTaskTitleEdit;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.TextEdit CreateTitleEditEdit() {
			_titleEditEdit = new Terrasoft.UI.WebControls.Controls.TextEdit();
			_titleEditEdit.UId = new Guid("8ce9a2de-cf6d-4da8-91bc-23759fd0a002");
			_titleEditEdit.Name = "TitleEditEdit";
			_titleEditEdit.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_titleEditEdit.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_titleEditEdit.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_titleEditEdit.Tag = "";
			_titleEditEdit.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_titleEditEdit.Image = new ControlImage {};
			_titleEditEdit.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_titleEditEdit.Required = true;
			return _titleEditEdit;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.MemoEdit CreateRecommendationEdit() {
			_recommendationEdit = new Terrasoft.UI.WebControls.Controls.MemoEdit();
			_recommendationEdit.UId = new Guid("15fd86e7-3227-4455-a040-e73d480804ff");
			_recommendationEdit.Name = "RecommendationEdit";
			_recommendationEdit.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_recommendationEdit.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_recommendationEdit.CreatedInPackageId = new Guid("415f292c-4eb5-4c80-8e80-df146f3cd0dc");
			_recommendationEdit.Tag = "";
			_recommendationEdit.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_recommendationEdit.Height = System.Web.UI.WebControls.Unit.Pixel(50);
			_recommendationEdit.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			return _recommendationEdit;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.MemoEdit CreateInformationOnStepMemoEdit() {
			_informationOnStepMemoEdit = new Terrasoft.UI.WebControls.Controls.MemoEdit();
			_informationOnStepMemoEdit.UId = new Guid("7be38618-9a61-4c57-981f-982c4f6ef32c");
			_informationOnStepMemoEdit.Name = "InformationOnStepMemoEdit";
			_informationOnStepMemoEdit.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_informationOnStepMemoEdit.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_informationOnStepMemoEdit.CreatedInPackageId = new Guid("726732c0-931c-4e11-9479-6aff326ae941");
			_informationOnStepMemoEdit.Tag = "";
			_informationOnStepMemoEdit.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_informationOnStepMemoEdit.Height = System.Web.UI.WebControls.Unit.Pixel(50);
			_informationOnStepMemoEdit.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			return _informationOnStepMemoEdit;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.LookupEdit CreateEntitySchemaLookupEdit() {
			_entitySchemaLookupEdit = new Terrasoft.UI.WebControls.Controls.LookupEdit();
			_entitySchemaLookupEdit.UId = new Guid("f9056721-760f-4985-a4f4-d9a4d3d8af48");
			_entitySchemaLookupEdit.Name = "EntitySchemaLookupEdit";
			_entitySchemaLookupEdit.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_entitySchemaLookupEdit.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_entitySchemaLookupEdit.CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4");
			_entitySchemaLookupEdit.AjaxEvents.Change.IsProcessEventHandler = true;
			_entitySchemaLookupEdit.Tag = "";
			_entitySchemaLookupEdit.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_entitySchemaLookupEdit.Image = new ControlImage {};
			_entitySchemaLookupEdit.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_entitySchemaLookupEdit.LookupSchemaUId = new Guid("2e155463-3ff1-4ccf-8584-4ec8d7233111");
			return _entitySchemaLookupEdit;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.ProcessSchemaParameterValueEdit CreateEntityEdit() {
			_entityEdit = new Terrasoft.UI.WebControls.Controls.ProcessSchemaParameterValueEdit();
			_entityEdit.UId = new Guid("4415e8c1-4726-4df7-802b-47ef060d750d");
			_entityEdit.Name = "EntityEdit";
			_entityEdit.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_entityEdit.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_entityEdit.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_entityEdit.Tag = "";
			_entityEdit.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_entityEdit.DataValueTypeUId = new Guid("b295071f-7ea9-4e62-8d1a-919bf3732ff2");
			_entityEdit.Image = new ControlImage {};
			_entityEdit.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_entityEdit.Enabled = false;
			return _entityEdit;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Label CreateButtonsLabel() {
			_buttonsLabel = new Terrasoft.UI.WebControls.Controls.Label();
			_buttonsLabel.UId = new Guid("fdd00d16-61b6-489c-a9ea-f8801b8c80c3");
			_buttonsLabel.Name = "ButtonsLabel";
			_buttonsLabel.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsLabel.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsLabel.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_buttonsLabel.Tag = "";
			_buttonsLabel.DisplayStyle = Terrasoft.UI.WebControls.Controls.LabelDisplayStyle.GroupHeader;
			_buttonsLabel.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_buttonsLabel.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			return _buttonsLabel;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateAddButton() {
			_addButton = new Terrasoft.UI.WebControls.Controls.Button();
			_addButton.UId = new Guid("06f6d6ed-c12e-48c1-9f71-7a3dfcc2012b");
			_addButton.Name = "AddButton";
			_addButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_addButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_addButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_addButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_addButton.Tag = "";
			_addButton.Image = new ControlImage {};
			return _addButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateEditButton() {
			_editButton = new Terrasoft.UI.WebControls.Controls.Button();
			_editButton.UId = new Guid("307b8d0f-c61a-46d2-b716-97f53f5317c3");
			_editButton.Name = "EditButton";
			_editButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_editButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_editButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_editButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_editButton.Tag = "";
			_editButton.Image = new ControlImage {};
			return _editButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateDeleteButton() {
			_deleteButton = new Terrasoft.UI.WebControls.Controls.Button();
			_deleteButton.UId = new Guid("ca432e31-4144-4df5-8a2f-d66aea786c2c");
			_deleteButton.Name = "DeleteButton";
			_deleteButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_deleteButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_deleteButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_deleteButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_deleteButton.Tag = "";
			_deleteButton.Image = new ControlImage {};
			return _deleteButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Spacer CreateSpacer2() {
			_spacer2 = new Terrasoft.UI.WebControls.Controls.Spacer();
			_spacer2.UId = new Guid("e417321b-6031-4fdf-b90d-48118d3193ec");
			_spacer2.Name = "Spacer2";
			_spacer2.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_spacer2.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_spacer2.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_spacer2.Tag = "";
			_spacer2.Size = System.Web.UI.WebControls.Unit.Percentage(100);
			return _spacer2;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateUpButton() {
			_upButton = new Terrasoft.UI.WebControls.Controls.Button();
			_upButton.UId = new Guid("5013166e-3f68-46fc-8b54-44dba4f9243f");
			_upButton.Name = "UpButton";
			_upButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_upButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_upButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_upButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_upButton.Tag = "";
			_upButton.Image = new ControlImage {};
			return _upButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateDownButton() {
			_downButton = new Terrasoft.UI.WebControls.Controls.Button();
			_downButton.UId = new Guid("0bc334eb-6d2f-4723-bfa1-bb108fcc9bf5");
			_downButton.Name = "DownButton";
			_downButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_downButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_downButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_downButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_downButton.Tag = "";
			_downButton.Image = new ControlImage {};
			return _downButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.ControlLayout CreateButtonsControlLayout() {
			_buttonsControlLayout = new Terrasoft.UI.WebControls.Controls.ControlLayout();
			_buttonsControlLayout.UId = new Guid("1ea1ff4e-1d6e-4487-912d-614fea0d25a6");
			_buttonsControlLayout.Name = "ButtonsControlLayout";
			_buttonsControlLayout.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsControlLayout.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsControlLayout.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_buttonsControlLayout.Tag = "";
			_buttonsControlLayout.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_buttonsControlLayout.DisplayStyle = Terrasoft.UI.WebControls.Controls.ControlLayoutDisplayStyle.Topbar;
			_buttonsControlLayout.FitHeightByContent = true;
			_buttonsControlLayout.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_buttonsControlLayout.StartNewAlignGroup = false;
			_buttonsControlLayout.Image = new ControlImage {};
			_buttonsControlLayout.Edges = "";
			return _buttonsControlLayout;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.TreeGrid CreateButtonsTreeGrid() {
			_buttonsTreeGrid = new Terrasoft.UI.WebControls.Controls.TreeGrid();
			_buttonsTreeGrid.UId = new Guid("ee8b4022-7c7a-4fa4-abd2-05bc09318e50");
			_buttonsTreeGrid.Name = "ButtonsTreeGrid";
			_buttonsTreeGrid.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsTreeGrid.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsTreeGrid.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_buttonsTreeGrid.AjaxEvents.DblClick.IsProcessEventHandler = true;
			_buttonsTreeGrid.Tag = "";
			_buttonsTreeGrid.Edges = "0 1 1 1";
			_buttonsTreeGrid.IsColumnAutowidth = true;
			_buttonsTreeGrid.FooterVisible = false;
			_buttonsTreeGrid.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_buttonsTreeGrid.IsSummaryVisible = false;
			_buttonsTreeGrid.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_buttonsTreeGrid.HideHeaders = false;
			return _buttonsTreeGrid;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.ControlLayout CreateButtonsConfigControlLayout() {
			_buttonsConfigControlLayout = new Terrasoft.UI.WebControls.Controls.ControlLayout();
			_buttonsConfigControlLayout.UId = new Guid("ccff0592-37e9-455f-a1b7-fb486187e793");
			_buttonsConfigControlLayout.Name = "ButtonsConfigControlLayout";
			_buttonsConfigControlLayout.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsConfigControlLayout.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsConfigControlLayout.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_buttonsConfigControlLayout.Tag = "";
			_buttonsConfigControlLayout.Height = System.Web.UI.WebControls.Unit.Percentage(50);
			_buttonsConfigControlLayout.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_buttonsConfigControlLayout.StartNewAlignGroup = false;
			_buttonsConfigControlLayout.Image = new ControlImage {};
			_buttonsConfigControlLayout.Edges = "";
			return _buttonsConfigControlLayout;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Label CreateElementsLabel() {
			_elementsLabel = new Terrasoft.UI.WebControls.Controls.Label();
			_elementsLabel.UId = new Guid("9f3b65da-5766-4dbb-b54e-08fbda3fa5c7");
			_elementsLabel.Name = "ElementsLabel";
			_elementsLabel.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_elementsLabel.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_elementsLabel.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_elementsLabel.Tag = "";
			_elementsLabel.DisplayStyle = Terrasoft.UI.WebControls.Controls.LabelDisplayStyle.GroupHeader;
			_elementsLabel.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_elementsLabel.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			return _elementsLabel;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateAddElementButton() {
			_addElementButton = new Terrasoft.UI.WebControls.Controls.Button();
			_addElementButton.UId = new Guid("df71e9e4-6667-49b8-80a0-9e3315d1f508");
			_addElementButton.Name = "AddElementButton";
			_addElementButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_addElementButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_addElementButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_addElementButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_addElementButton.Tag = "";
			_addElementButton.Image = new ControlImage {};
			return _addElementButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateEditElementButton() {
			_editElementButton = new Terrasoft.UI.WebControls.Controls.Button();
			_editElementButton.UId = new Guid("011eb6f1-c977-4c01-8d4e-2c4d81a2e2fd");
			_editElementButton.Name = "EditElementButton";
			_editElementButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_editElementButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_editElementButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_editElementButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_editElementButton.Tag = "";
			_editElementButton.Image = new ControlImage {};
			return _editElementButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateDeleteElementButton() {
			_deleteElementButton = new Terrasoft.UI.WebControls.Controls.Button();
			_deleteElementButton.UId = new Guid("f4341213-1c57-4515-93fb-4406080a0903");
			_deleteElementButton.Name = "DeleteElementButton";
			_deleteElementButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_deleteElementButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_deleteElementButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_deleteElementButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_deleteElementButton.Tag = "";
			_deleteElementButton.Image = new ControlImage {};
			return _deleteElementButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Spacer CreateSpacer3() {
			_spacer3 = new Terrasoft.UI.WebControls.Controls.Spacer();
			_spacer3.UId = new Guid("bfbdb045-2a50-40e9-84bf-0612a334d9c6");
			_spacer3.Name = "Spacer3";
			_spacer3.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_spacer3.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_spacer3.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_spacer3.Tag = "";
			_spacer3.Size = System.Web.UI.WebControls.Unit.Percentage(100);
			return _spacer3;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateGroupEditButton() {
			_groupEditButton = new Terrasoft.UI.WebControls.Controls.Button();
			_groupEditButton.UId = new Guid("3e4e5b9b-5700-430a-a15a-bd05b2287796");
			_groupEditButton.Name = "GroupEditButton";
			_groupEditButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_groupEditButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_groupEditButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_groupEditButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_groupEditButton.Tag = "";
			_groupEditButton.Image = new ControlImage {};
			_groupEditButton.Hidden = true;
			return _groupEditButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateUpElementButton() {
			_upElementButton = new Terrasoft.UI.WebControls.Controls.Button();
			_upElementButton.UId = new Guid("582b04a2-6485-44fa-b94c-1d9a865b8102");
			_upElementButton.Name = "UpElementButton";
			_upElementButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_upElementButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_upElementButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_upElementButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_upElementButton.Tag = "";
			_upElementButton.Image = new ControlImage {};
			return _upElementButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Button CreateDownElementButton() {
			_downElementButton = new Terrasoft.UI.WebControls.Controls.Button();
			_downElementButton.UId = new Guid("da0d4bea-469e-4e1b-a7ae-42d937afe5b8");
			_downElementButton.Name = "DownElementButton";
			_downElementButton.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_downElementButton.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_downElementButton.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_downElementButton.AjaxEvents.Click.IsProcessEventHandler = true;
			_downElementButton.Tag = "";
			_downElementButton.Image = new ControlImage {};
			return _downElementButton;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.ControlLayout CreateButtonsControlLayout1() {
			_buttonsControlLayout1 = new Terrasoft.UI.WebControls.Controls.ControlLayout();
			_buttonsControlLayout1.UId = new Guid("54cf0d42-bef8-47f7-98c8-3e31bb61cbc1");
			_buttonsControlLayout1.Name = "ButtonsControlLayout1";
			_buttonsControlLayout1.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsControlLayout1.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_buttonsControlLayout1.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_buttonsControlLayout1.Tag = "";
			_buttonsControlLayout1.Height = System.Web.UI.WebControls.Unit.Pixel(50);
			_buttonsControlLayout1.DisplayStyle = Terrasoft.UI.WebControls.Controls.ControlLayoutDisplayStyle.Topbar;
			_buttonsControlLayout1.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_buttonsControlLayout1.StartNewAlignGroup = false;
			_buttonsControlLayout1.Image = new ControlImage {};
			_buttonsControlLayout1.Edges = "";
			return _buttonsControlLayout1;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.TreeGrid CreateElementsTreeGrid() {
			_elementsTreeGrid = new Terrasoft.UI.WebControls.Controls.TreeGrid();
			_elementsTreeGrid.UId = new Guid("81ef3193-e6d7-43ba-b362-3794d38ba50d");
			_elementsTreeGrid.Name = "ElementsTreeGrid";
			_elementsTreeGrid.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_elementsTreeGrid.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_elementsTreeGrid.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_elementsTreeGrid.AjaxEvents.DblClick.IsProcessEventHandler = true;
			_elementsTreeGrid.Tag = "";
			_elementsTreeGrid.Edges = "0 1 1 1";
			_elementsTreeGrid.IsColumnAutowidth = true;
			_elementsTreeGrid.FooterVisible = false;
			_elementsTreeGrid.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_elementsTreeGrid.IsSummaryVisible = false;
			_elementsTreeGrid.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_elementsTreeGrid.ToolbarVisible = false;
			_elementsTreeGrid.QuickFilterVisible = false;
			_elementsTreeGrid.HideHeaders = false;
			return _elementsTreeGrid;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.ControlLayout CreateElementsControlLayout() {
			_elementsControlLayout = new Terrasoft.UI.WebControls.Controls.ControlLayout();
			_elementsControlLayout.UId = new Guid("25c41222-2819-4c51-bf34-62b21ea1b8b9");
			_elementsControlLayout.Name = "ElementsControlLayout";
			_elementsControlLayout.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_elementsControlLayout.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_elementsControlLayout.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_elementsControlLayout.Tag = "";
			_elementsControlLayout.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_elementsControlLayout.DisplayStyle = Terrasoft.UI.WebControls.Controls.ControlLayoutDisplayStyle.Controls;
			_elementsControlLayout.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_elementsControlLayout.StartNewAlignGroup = false;
			_elementsControlLayout.Image = new ControlImage {};
			_elementsControlLayout.Edges = "";
			return _elementsControlLayout;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.ControlLayout CreatePageParametersControlLayout() {
			_pageParametersControlLayout = new Terrasoft.UI.WebControls.Controls.ControlLayout();
			_pageParametersControlLayout.UId = new Guid("3ee733fb-6bf7-425b-a42e-f085b12f2caf");
			_pageParametersControlLayout.Name = "PageParametersControlLayout";
			_pageParametersControlLayout.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_pageParametersControlLayout.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_pageParametersControlLayout.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_pageParametersControlLayout.Tag = "";
			_pageParametersControlLayout.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_pageParametersControlLayout.DisplayStyle = Terrasoft.UI.WebControls.Controls.ControlLayoutDisplayStyle.Controls;
			_pageParametersControlLayout.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_pageParametersControlLayout.Padding = "5 5 5 5";
			_pageParametersControlLayout.StartNewAlignGroup = false;
			_pageParametersControlLayout.Image = new ControlImage {};
			_pageParametersControlLayout.Edges = "";
			return _pageParametersControlLayout;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Tab CreateAutoGeneratedPageParametersTab() {
			_autoGeneratedPageParametersTab = new Terrasoft.UI.WebControls.Controls.Tab();
			_autoGeneratedPageParametersTab.UId = new Guid("0453403a-79f2-44b4-84e7-e5e92bfbd63f");
			_autoGeneratedPageParametersTab.Name = "AutoGeneratedPageParametersTab";
			_autoGeneratedPageParametersTab.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_autoGeneratedPageParametersTab.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_autoGeneratedPageParametersTab.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_autoGeneratedPageParametersTab.Tag = "";
			_autoGeneratedPageParametersTab.Image = new ControlImage {};
			return _autoGeneratedPageParametersTab;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.MemoEdit CreateCodeSyntaxMemoEdit() {
			_codeSyntaxMemoEdit = new Terrasoft.UI.WebControls.Controls.MemoEdit();
			_codeSyntaxMemoEdit.UId = new Guid("941e3d25-a332-4aa6-804f-010ae59d4647");
			_codeSyntaxMemoEdit.Name = "CodeSyntaxMemoEdit";
			_codeSyntaxMemoEdit.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_codeSyntaxMemoEdit.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_codeSyntaxMemoEdit.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_codeSyntaxMemoEdit.Tag = "";
			_codeSyntaxMemoEdit.CaptionColor = System.Drawing.Color.FromArgb(0,2,77,156);
			_codeSyntaxMemoEdit.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_codeSyntaxMemoEdit.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_codeSyntaxMemoEdit.CaptionPosition = Terrasoft.UI.WebControls.CaptionPosition.None;
			return _codeSyntaxMemoEdit;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.ControlLayout CreateSourceControlLayout() {
			_sourceControlLayout = new Terrasoft.UI.WebControls.Controls.ControlLayout();
			_sourceControlLayout.UId = new Guid("941ae618-3365-43bb-a116-fea5f88318cd");
			_sourceControlLayout.Name = "SourceControlLayout";
			_sourceControlLayout.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_sourceControlLayout.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_sourceControlLayout.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_sourceControlLayout.Tag = "";
			_sourceControlLayout.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_sourceControlLayout.DisplayStyle = Terrasoft.UI.WebControls.Controls.ControlLayoutDisplayStyle.Controls;
			_sourceControlLayout.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			_sourceControlLayout.Padding = "5 5 5 5";
			_sourceControlLayout.StartNewAlignGroup = false;
			_sourceControlLayout.Image = new ControlImage {};
			_sourceControlLayout.Edges = "";
			return _sourceControlLayout;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.Tab CreateSourceTab() {
			_sourceTab = new Terrasoft.UI.WebControls.Controls.Tab();
			_sourceTab.UId = new Guid("dc5e252d-c267-4d21-8197-6ba257d38525");
			_sourceTab.Name = "SourceTab";
			_sourceTab.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_sourceTab.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_sourceTab.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_sourceTab.Tag = "";
			_sourceTab.Image = new ControlImage {};
			_sourceTab.Hidden = true;
			return _sourceTab;
		}

		protected virtual Terrasoft.UI.WebControls.Controls.TabPanel CreateSourceTabPanel() {
			_sourceTabPanel = new Terrasoft.UI.WebControls.Controls.TabPanel();
			_sourceTabPanel.UId = new Guid("e1bf9c56-e646-417d-962c-4680846b0ca6");
			_sourceTabPanel.Name = "SourceTabPanel";
			_sourceTabPanel.CreatedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_sourceTabPanel.ModifiedInSchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			_sourceTabPanel.CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251");
			_sourceTabPanel.AjaxEvents.BeforeTabChange.IsProcessEventHandler = true;
			_sourceTabPanel.Tag = "";
			_sourceTabPanel.ActiveTabIndex = 0;
			_sourceTabPanel.Height = System.Web.UI.WebControls.Unit.Percentage(100);
			_sourceTabPanel.StartNewAlignGroup = false;
			_sourceTabPanel.Width = System.Web.UI.WebControls.Unit.Percentage(100);
			return _sourceTabPanel;
		}

		protected override void InitializeMethods() {
			base.InitializeMethods();
			SetMethodsDefInheritance();
		}

		#endregion

		#region Methods: Public

		public override PageSchemaUserControl CreateUserControl() {
			return new AutoGeneratedPageUserTaskParametersEditPageSchemaUserControl();
		}

		public override object Clone() {
			return new AutoGeneratedPageUserTaskParametersEditPageSchema(this);
		}

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5c56940b-cb14-4180-b327-1270d77ac486"));
		}

		public override EmbeddedProcess CreateEventsProcess(UserConnection userConnnection) {
			return 
			new AutoGeneratedPageUserTaskParametersEditPageEventsProcess(userConnnection);
		}

		#endregion

	}

	#endregion

	#region Class: AutoGeneratedPageUserTaskParametersEditPageEventsProcess

	/// <exclude/>
	public class AutoGeneratedPageUserTaskParametersEditPageEventsProcess<TPage> : Terrasoft.WebApp.BaseProcessParametersEditPageEventsProcess<TPage> where TPage : Terrasoft.WebApp.AutoGeneratedPageUserTaskParametersEditPageSchemaUserControl
	{

		#region Class: OpenAddButtonElementPageUserTaskFlowElement

		/// <exclude/>
		public class OpenAddButtonElementPageUserTaskFlowElement : OpenPageUserTask
		{

			public OpenAddButtonElementPageUserTaskFlowElement(UserConnection userConnection, AutoGeneratedPageUserTaskParametersEditPageEventsProcess<TPage> process)
				: base(userConnection) {
				UId = Guid.NewGuid();
				Owner = process;
				Type = "ProcessSchemaUserTask";
				Name = "OpenAddButtonElementPageUserTask";
				IsLogging = false;
				SchemaElementUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384");
				CreatedInSchemaUId = process.InternalSchemaUId;
			}

		}

		#endregion

		#region Class: OpenGroupOfElementsEditPageUserTaskFlowElement

		/// <exclude/>
		public class OpenGroupOfElementsEditPageUserTaskFlowElement : OpenPageUserTask
		{

			public OpenGroupOfElementsEditPageUserTaskFlowElement(UserConnection userConnection, AutoGeneratedPageUserTaskParametersEditPageEventsProcess<TPage> process)
				: base(userConnection) {
				UId = Guid.NewGuid();
				Owner = process;
				Type = "ProcessSchemaUserTask";
				Name = "OpenGroupOfElementsEditPageUserTask";
				IsLogging = false;
				SchemaElementUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509");
				CreatedInSchemaUId = process.InternalSchemaUId;
			}

		}

		#endregion

		public AutoGeneratedPageUserTaskParametersEditPageEventsProcess(UserConnection userConnection)
			: base(userConnection) {
			InitializeMetaPathParameterValues();
			UId = Guid.NewGuid();
			Name = "AutoGeneratedPageUserTaskParametersEditPageEventsProcess";
			SchemaUId = new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			SchemaManagerName = "PageSchemaManager";
			SerializeToDB = false;
			IsLogging = false;
			InitializeFlowElements();
		}

		#region Properties: Private

		private Guid InternalSchemaUId {
			get {
				return new Guid("5c56940b-cb14-4180-b327-1270d77ac486");
			}
		}

		#endregion

		#region Properties: Public

		public override string InstanceUId {
			get {
				return ((Terrasoft.UI.WebControls.Page)Page.AspPage).InstanceId.ToString() + 
				Page.PageContainer.UniqueID;
			}
		}

		public virtual Guid EntitySchemaUId {
			get;
			set;
		}

		public virtual Guid EntitySchemaEditOldValue {
			get;
			set;
		}

		public virtual string EditElementSettingsContextKey {
			get;
			set;
		}

		public virtual string EditButtonSettingsContextKey {
			get;
			set;
		}

		private string _controlSettingsVirtualDataSourceName;
		public virtual string ControlSettingsVirtualDataSourceName {
			get {
				return _controlSettingsVirtualDataSourceName ?? (_controlSettingsVirtualDataSourceName = new LocalizableString(Storage, "5c56940bcb144180b3271270d77ac486",
						 "EventsProcessSchema.Parameters.ControlSettingsVirtualDataSourceName.Value"));
			}
			set {
				_controlSettingsVirtualDataSourceName = value;
			}
		}

		private string _buttonSettingsVirtualDataSourceName;
		public virtual string ButtonSettingsVirtualDataSourceName {
			get {
				return _buttonSettingsVirtualDataSourceName ?? (_buttonSettingsVirtualDataSourceName = new LocalizableString(Storage, "5c56940bcb144180b3271270d77ac486",
						 "EventsProcessSchema.Parameters.ButtonSettingsVirtualDataSourceName.Value"));
			}
			set {
				_buttonSettingsVirtualDataSourceName = value;
			}
		}

		public virtual string IsButtonSettigs {
			get;
			set;
		}

		public virtual string ExtendedClientModule {
			get;
			set;
		}

		private ProcessFlowElement _addElementButtonClickEventSubProcess;
		public ProcessFlowElement AddElementButtonClickEventSubProcess {
			get {
				return _addElementButtonClickEventSubProcess ?? (_addElementButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "AddElementButtonClickEventSubProcess",
					SchemaElementUId = new Guid("4f2feb74-110f-4592-8873-819fc6ec32ce"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _addElementButtonClickStartMessage;
		public ProcessFlowElement AddElementButtonClickStartMessage {
			get {
				return _addElementButtonClickStartMessage ?? (_addElementButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "AddElementButtonClickStartMessage",
					SchemaElementUId = new Guid("b8a683a6-b6af-45eb-a967-3f6644215f73"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _addElementButtonClickScriptTask;
		public ProcessScriptTask AddElementButtonClickScriptTask {
			get {
				return _addElementButtonClickScriptTask ?? (_addElementButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "AddElementButtonClickScriptTask",
					SchemaElementUId = new Guid("9d7fe0cd-d8e1-47ca-b238-cb6d398b6b29"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = AddElementButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _deleteElementButtonClickEventSubProcess;
		public ProcessFlowElement DeleteElementButtonClickEventSubProcess {
			get {
				return _deleteElementButtonClickEventSubProcess ?? (_deleteElementButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "DeleteElementButtonClickEventSubProcess",
					SchemaElementUId = new Guid("2f010301-320b-4679-8af4-30099dcc64e9"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _deleteElementButtonClickStartMessage;
		public ProcessFlowElement DeleteElementButtonClickStartMessage {
			get {
				return _deleteElementButtonClickStartMessage ?? (_deleteElementButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "DeleteElementButtonClickStartMessage",
					SchemaElementUId = new Guid("6758b087-4cd5-4f5d-b07e-cd5a1e32b96d"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _deleteElementButtonClickScriptTask;
		public ProcessScriptTask DeleteElementButtonClickScriptTask {
			get {
				return _deleteElementButtonClickScriptTask ?? (_deleteElementButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "DeleteElementButtonClickScriptTask",
					SchemaElementUId = new Guid("fbddd709-4f48-432e-8345-bf9aa05a7157"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = DeleteElementButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _editElementButtonClickEventSubProcess;
		public ProcessFlowElement EditElementButtonClickEventSubProcess {
			get {
				return _editElementButtonClickEventSubProcess ?? (_editElementButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "EditElementButtonClickEventSubProcess",
					SchemaElementUId = new Guid("dcc7e46f-6104-4350-b87a-f9a0ebef1eef"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _editElementButtonClickStartMessage;
		public ProcessFlowElement EditElementButtonClickStartMessage {
			get {
				return _editElementButtonClickStartMessage ?? (_editElementButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "EditElementButtonClickStartMessage",
					SchemaElementUId = new Guid("e7158616-a5e8-4f7e-8c88-37f40a92d262"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _editElementButtonClickScriptTask;
		public ProcessScriptTask EditElementButtonClickScriptTask {
			get {
				return _editElementButtonClickScriptTask ?? (_editElementButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "EditElementButtonClickScriptTask",
					SchemaElementUId = new Guid("0d6fde80-bffb-4fa7-84a2-29ec0d42656f"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = EditElementButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _elementsTreeGridDblClickStartMessage;
		public ProcessFlowElement ElementsTreeGridDblClickStartMessage {
			get {
				return _elementsTreeGridDblClickStartMessage ?? (_elementsTreeGridDblClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "ElementsTreeGridDblClickStartMessage",
					SchemaElementUId = new Guid("52db3d4e-7fa3-496d-be84-8402cb78610e"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _downElementButtonClickEventSubProcess;
		public ProcessFlowElement DownElementButtonClickEventSubProcess {
			get {
				return _downElementButtonClickEventSubProcess ?? (_downElementButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "DownElementButtonClickEventSubProcess",
					SchemaElementUId = new Guid("cace6421-b622-4846-a711-83889f4207b9"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _downElementButtonClickStartMessage;
		public ProcessFlowElement DownElementButtonClickStartMessage {
			get {
				return _downElementButtonClickStartMessage ?? (_downElementButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "DownElementButtonClickStartMessage",
					SchemaElementUId = new Guid("923fcc38-5f0b-4076-ab4c-3ecf79f3fe21"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _downElementButtonClickScriptTask;
		public ProcessScriptTask DownElementButtonClickScriptTask {
			get {
				return _downElementButtonClickScriptTask ?? (_downElementButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "DownElementButtonClickScriptTask",
					SchemaElementUId = new Guid("ea0c7345-5339-4547-8134-2c526a0fcfe7"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = DownElementButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _upElementButtonClickEventSubProcess;
		public ProcessFlowElement UpElementButtonClickEventSubProcess {
			get {
				return _upElementButtonClickEventSubProcess ?? (_upElementButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "UpElementButtonClickEventSubProcess",
					SchemaElementUId = new Guid("135ed2d4-7921-4754-9549-41f513c8a5ee"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _upElementButtonClickStartMessage;
		public ProcessFlowElement UpElementButtonClickStartMessage {
			get {
				return _upElementButtonClickStartMessage ?? (_upElementButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "UpElementButtonClickStartMessage",
					SchemaElementUId = new Guid("ba64cb51-e5f5-4332-a732-e28851372170"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _upElementButtonClickScriptTask;
		public ProcessScriptTask UpElementButtonClickScriptTask {
			get {
				return _upElementButtonClickScriptTask ?? (_upElementButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "UpElementButtonClickScriptTask",
					SchemaElementUId = new Guid("16f17f2f-5801-4877-9935-f3654ec9b8f3"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = UpElementButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _addButtonClickEventSubProcess;
		public ProcessFlowElement AddButtonClickEventSubProcess {
			get {
				return _addButtonClickEventSubProcess ?? (_addButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "AddButtonClickEventSubProcess",
					SchemaElementUId = new Guid("882b20f5-4290-4b27-8cd8-888dce4214a8"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _addButtonClickStartMessage;
		public ProcessFlowElement AddButtonClickStartMessage {
			get {
				return _addButtonClickStartMessage ?? (_addButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "AddButtonClickStartMessage",
					SchemaElementUId = new Guid("f860e50a-76ac-4330-9327-8c0e81f93975"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _addButtonClickScriptTask;
		public ProcessScriptTask AddButtonClickScriptTask {
			get {
				return _addButtonClickScriptTask ?? (_addButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "AddButtonClickScriptTask",
					SchemaElementUId = new Guid("bfc0c229-76b7-47f9-b681-634c2cb938a1"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = AddButtonClickScriptTaskExecute,
				});
			}
		}

		private OpenAddButtonElementPageUserTaskFlowElement _openAddButtonElementPageUserTask;
		public OpenAddButtonElementPageUserTaskFlowElement OpenAddButtonElementPageUserTask {
			get {
				return _openAddButtonElementPageUserTask ?? (_openAddButtonElementPageUserTask = new OpenAddButtonElementPageUserTaskFlowElement(UserConnection, this) { ExecutedEventHandler = OnExecuted });
			}
		}

		private ProcessFlowElement _eventSubProcess4;
		public ProcessFlowElement EventSubProcess4 {
			get {
				return _eventSubProcess4 ?? (_eventSubProcess4 = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "EventSubProcess4",
					SchemaElementUId = new Guid("d3776214-560f-4ec7-b689-f07ba64c67df"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _deleteButtonClickStartMessage;
		public ProcessFlowElement DeleteButtonClickStartMessage {
			get {
				return _deleteButtonClickStartMessage ?? (_deleteButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "DeleteButtonClickStartMessage",
					SchemaElementUId = new Guid("157efaee-6af9-4271-9415-c0f5f645723a"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _deleteButtonClickScriptTask;
		public ProcessScriptTask DeleteButtonClickScriptTask {
			get {
				return _deleteButtonClickScriptTask ?? (_deleteButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "DeleteButtonClickScriptTask",
					SchemaElementUId = new Guid("526dbaa0-7c39-4fe8-a9fd-f0120fcf2511"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = DeleteButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _upButtonClickEventSubProcess;
		public ProcessFlowElement UpButtonClickEventSubProcess {
			get {
				return _upButtonClickEventSubProcess ?? (_upButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "UpButtonClickEventSubProcess",
					SchemaElementUId = new Guid("86c4d291-9abc-4c4a-9d1e-a167315377fd"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _upButtonClickStartMessage;
		public ProcessFlowElement UpButtonClickStartMessage {
			get {
				return _upButtonClickStartMessage ?? (_upButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "UpButtonClickStartMessage",
					SchemaElementUId = new Guid("f9203641-5806-45d8-9783-45638896912b"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _upButtonClickScriptTask;
		public ProcessScriptTask UpButtonClickScriptTask {
			get {
				return _upButtonClickScriptTask ?? (_upButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "UpButtonClickScriptTask",
					SchemaElementUId = new Guid("063b73ec-da7f-45db-95ef-ba56b7768679"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = UpButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _downButtonClickEventSubProcess;
		public ProcessFlowElement DownButtonClickEventSubProcess {
			get {
				return _downButtonClickEventSubProcess ?? (_downButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "DownButtonClickEventSubProcess",
					SchemaElementUId = new Guid("f439fb4b-b5a9-4434-8f8e-d7f54f7f75e7"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _downButtonClickStartMessage;
		public ProcessFlowElement DownButtonClickStartMessage {
			get {
				return _downButtonClickStartMessage ?? (_downButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "DownButtonClickStartMessage",
					SchemaElementUId = new Guid("6fea9f9c-78fd-4c67-8cdb-0eed98bcebdd"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _downButtonClickScriptTask;
		public ProcessScriptTask DownButtonClickScriptTask {
			get {
				return _downButtonClickScriptTask ?? (_downButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "DownButtonClickScriptTask",
					SchemaElementUId = new Guid("11a23f25-f75c-4025-9c18-f97a903a7ff0"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = DownButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _editButtonClickEventSubProcess;
		public ProcessFlowElement EditButtonClickEventSubProcess {
			get {
				return _editButtonClickEventSubProcess ?? (_editButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "EditButtonClickEventSubProcess",
					SchemaElementUId = new Guid("caf35d14-21b0-4889-9a05-3a913883ed65"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _editButtonClickStartMessage;
		public ProcessFlowElement EditButtonClickStartMessage {
			get {
				return _editButtonClickStartMessage ?? (_editButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "EditButtonClickStartMessage",
					SchemaElementUId = new Guid("d5568cae-fded-47b1-9a5a-de9ed27a388f"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _editButtonClickScriptTask;
		public ProcessScriptTask EditButtonClickScriptTask {
			get {
				return _editButtonClickScriptTask ?? (_editButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "EditButtonClickScriptTask",
					SchemaElementUId = new Guid("613de7bc-e5b9-479a-87c8-52ce8ee90cfc"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = EditButtonClickScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _buttonsTreeGridDblClickStartMessage;
		public ProcessFlowElement ButtonsTreeGridDblClickStartMessage {
			get {
				return _buttonsTreeGridDblClickStartMessage ?? (_buttonsTreeGridDblClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "ButtonsTreeGridDblClickStartMessage",
					SchemaElementUId = new Guid("2e655a9d-43b2-4982-9410-6b0503f9e478"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _eventSubProcess2;
		public ProcessFlowElement EventSubProcess2 {
			get {
				return _eventSubProcess2 ?? (_eventSubProcess2 = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "EventSubProcess2",
					SchemaElementUId = new Guid("f70e2e8d-518d-4e7d-a4d8-e6821d5f72bd"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _closedButtonSettingsEditPageStartMessage;
		public ProcessFlowElement ClosedButtonSettingsEditPageStartMessage {
			get {
				return _closedButtonSettingsEditPageStartMessage ?? (_closedButtonSettingsEditPageStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "ClosedButtonSettingsEditPageStartMessage",
					SchemaElementUId = new Guid("3a51268e-904d-4cf4-b60a-f6cbe10c04bc"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _closedButtonSettingsEditPageScriptTask;
		public ProcessScriptTask ClosedButtonSettingsEditPageScriptTask {
			get {
				return _closedButtonSettingsEditPageScriptTask ?? (_closedButtonSettingsEditPageScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "ClosedButtonSettingsEditPageScriptTask",
					SchemaElementUId = new Guid("d7088813-436b-4a51-8607-f8c6a0e47195"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = ClosedButtonSettingsEditPageScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _groupEditButtonClickEventSubProcess;
		public ProcessFlowElement GroupEditButtonClickEventSubProcess {
			get {
				return _groupEditButtonClickEventSubProcess ?? (_groupEditButtonClickEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "GroupEditButtonClickEventSubProcess",
					SchemaElementUId = new Guid("7ef25b1d-1e4a-4644-89a9-17a2875032ca"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _groupEditButtonClickStartMessage;
		public ProcessFlowElement GroupEditButtonClickStartMessage {
			get {
				return _groupEditButtonClickStartMessage ?? (_groupEditButtonClickStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "GroupEditButtonClickStartMessage",
					SchemaElementUId = new Guid("de4b0675-0121-4a16-98c7-64b315dc0ec0"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _groupEditButtonClickScriptTask;
		public ProcessScriptTask GroupEditButtonClickScriptTask {
			get {
				return _groupEditButtonClickScriptTask ?? (_groupEditButtonClickScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "GroupEditButtonClickScriptTask",
					SchemaElementUId = new Guid("156c761e-2db4-48da-b6e5-030a73a990be"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = GroupEditButtonClickScriptTaskExecute,
				});
			}
		}

		private OpenGroupOfElementsEditPageUserTaskFlowElement _openGroupOfElementsEditPageUserTask;
		public OpenGroupOfElementsEditPageUserTaskFlowElement OpenGroupOfElementsEditPageUserTask {
			get {
				return _openGroupOfElementsEditPageUserTask ?? (_openGroupOfElementsEditPageUserTask = new OpenGroupOfElementsEditPageUserTaskFlowElement(UserConnection, this) { ExecutedEventHandler = OnExecuted });
			}
		}

		private ProcessFlowElement _clientUnitSchemaeEditChangeEventSubProcess;
		public ProcessFlowElement ClientUnitSchemaeEditChangeEventSubProcess {
			get {
				return _clientUnitSchemaeEditChangeEventSubProcess ?? (_clientUnitSchemaeEditChangeEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "ClientUnitSchemaeEditChangeEventSubProcess",
					SchemaElementUId = new Guid("4b48b8e9-489a-497c-93e6-3818ec4a191a"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _clientUnitSchemaeEditChangeStartMessage;
		public ProcessFlowElement ClientUnitSchemaeEditChangeStartMessage {
			get {
				return _clientUnitSchemaeEditChangeStartMessage ?? (_clientUnitSchemaeEditChangeStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "ClientUnitSchemaeEditChangeStartMessage",
					SchemaElementUId = new Guid("bd5c23d1-eefe-4712-bf6f-719f5589b54b"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _clientUnitSchemaeEditChangeScriptTask;
		public ProcessScriptTask ClientUnitSchemaeEditChangeScriptTask {
			get {
				return _clientUnitSchemaeEditChangeScriptTask ?? (_clientUnitSchemaeEditChangeScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "ClientUnitSchemaeEditChangeScriptTask",
					SchemaElementUId = new Guid("b1e7dc97-0c9c-4ab8-93eb-183dbcc82447"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = ClientUnitSchemaeEditChangeScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _entitySchemaLookupEditChangeEventSubProcess;
		public ProcessFlowElement EntitySchemaLookupEditChangeEventSubProcess {
			get {
				return _entitySchemaLookupEditChangeEventSubProcess ?? (_entitySchemaLookupEditChangeEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "EntitySchemaLookupEditChangeEventSubProcess",
					SchemaElementUId = new Guid("e7767923-3199-4564-ae7d-9855d93deb04"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _entitySchemaLookupEditChangeStartMessage;
		public ProcessFlowElement EntitySchemaLookupEditChangeStartMessage {
			get {
				return _entitySchemaLookupEditChangeStartMessage ?? (_entitySchemaLookupEditChangeStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "EntitySchemaLookupEditChangeStartMessage",
					SchemaElementUId = new Guid("9163f05d-e8fa-4c36-ae0e-964b6a59cf41"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _entitySchemaLookupEditChangeScriptTask;
		public ProcessScriptTask EntitySchemaLookupEditChangeScriptTask {
			get {
				return _entitySchemaLookupEditChangeScriptTask ?? (_entitySchemaLookupEditChangeScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "EntitySchemaLookupEditChangeScriptTask",
					SchemaElementUId = new Guid("d2f15914-fb81-44dc-88ee-3e516b843e1c"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = EntitySchemaLookupEditChangeScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _eventSubProcessPreconfiguredFormInit;
		public ProcessFlowElement EventSubProcessPreconfiguredFormInit {
			get {
				return _eventSubProcessPreconfiguredFormInit ?? (_eventSubProcessPreconfiguredFormInit = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "EventSubProcessPreconfiguredFormInit",
					SchemaElementUId = new Guid("9f994e14-b7f8-4a3f-be31-282c1c7f7e1e"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _initStartMessage;
		public ProcessFlowElement InitStartMessage {
			get {
				return _initStartMessage ?? (_initStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "InitStartMessage",
					SchemaElementUId = new Guid("485786b7-a3e1-42ee-8752-2f0f252e9252"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessThrowMessageEvent _initIntermediateThrowMessageEvent;
		public ProcessThrowMessageEvent InitIntermediateThrowMessageEvent {
			get {
				return _initIntermediateThrowMessageEvent ?? (_initIntermediateThrowMessageEvent = new ProcessThrowMessageEvent() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaIntermediateThrowMessageEvent",
					Name = "InitIntermediateThrowMessageEvent",
					SchemaElementUId = new Guid("18d3af5f-055c-4304-ba51-6f911f24bd5c"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Message = "Init",
						ThrowToBase = true,
				});
			}
		}

		private ProcessScriptTask _initScriptTask;
		public ProcessScriptTask InitScriptTask {
			get {
				return _initScriptTask ?? (_initScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "InitScriptTask",
					SchemaElementUId = new Guid("20f367b1-c524-4fb9-99f5-0cbb94641ec4"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = InitScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _pageLoadCompleteEventSubProcess;
		public ProcessFlowElement PageLoadCompleteEventSubProcess {
			get {
				return _pageLoadCompleteEventSubProcess ?? (_pageLoadCompleteEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "PageLoadCompleteEventSubProcess",
					SchemaElementUId = new Guid("55ec07b6-0184-4a92-b34a-9fde76f8da50"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _pageLoqdCompleteStartMessage;
		public ProcessFlowElement PageLoqdCompleteStartMessage {
			get {
				return _pageLoqdCompleteStartMessage ?? (_pageLoqdCompleteStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "PageLoqdCompleteStartMessage",
					SchemaElementUId = new Guid("ba0d9eed-c5a9-4aca-af0c-05cb0a662bad"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessThrowMessageEvent _pageLoqdCompleteIntermediateThrowMessageEvent;
		public ProcessThrowMessageEvent PageLoqdCompleteIntermediateThrowMessageEvent {
			get {
				return _pageLoqdCompleteIntermediateThrowMessageEvent ?? (_pageLoqdCompleteIntermediateThrowMessageEvent = new ProcessThrowMessageEvent() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaIntermediateThrowMessageEvent",
					Name = "PageLoqdCompleteIntermediateThrowMessageEvent",
					SchemaElementUId = new Guid("33de6576-bc52-4dda-95dc-2c87ef03f248"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Message = "PageLoadComplete",
						ThrowToBase = true,
				});
			}
		}

		private ProcessScriptTask _pageLoadCompleteScriptTask;
		public ProcessScriptTask PageLoadCompleteScriptTask {
			get {
				return _pageLoadCompleteScriptTask ?? (_pageLoadCompleteScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "PageLoadCompleteScriptTask",
					SchemaElementUId = new Guid("bb723294-caf2-4f95-8f08-d74dbca15f34"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = PageLoadCompleteScriptTaskExecute,
				});
			}
		}

		private ProcessFlowElement _eventSubProcessPressedButtonOK;
		public ProcessFlowElement EventSubProcessPressedButtonOK {
			get {
				return _eventSubProcessPressedButtonOK ?? (_eventSubProcessPressedButtonOK = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "EventSubProcessPressedButtonOK",
					SchemaElementUId = new Guid("e4f84319-5360-4e6e-b260-255d75628353"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _okButtonClickPreconfiguredFormStartMessage;
		public ProcessFlowElement OkButtonClickPreconfiguredFormStartMessage {
			get {
				return _okButtonClickPreconfiguredFormStartMessage ?? (_okButtonClickPreconfiguredFormStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "OkButtonClickPreconfiguredFormStartMessage",
					SchemaElementUId = new Guid("909f1dcc-eceb-43a4-8b9f-840ea80df3a1"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _okButtonClickPreconfiguredFormScriptTask;
		public ProcessScriptTask OkButtonClickPreconfiguredFormScriptTask {
			get {
				return _okButtonClickPreconfiguredFormScriptTask ?? (_okButtonClickPreconfiguredFormScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "OkButtonClickPreconfiguredFormScriptTask",
					SchemaElementUId = new Guid("6214c098-3b9b-45d2-8a29-cda92a00139c"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = OkButtonClickPreconfiguredFormScriptTaskExecute,
				});
			}
		}

		private ProcessThrowMessageEvent _okButtonClickIntermediateThrowMessageEvent;
		public ProcessThrowMessageEvent OkButtonClickIntermediateThrowMessageEvent {
			get {
				return _okButtonClickIntermediateThrowMessageEvent ?? (_okButtonClickIntermediateThrowMessageEvent = new ProcessThrowMessageEvent() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaIntermediateThrowMessageEvent",
					Name = "OkButtonClickIntermediateThrowMessageEvent",
					SchemaElementUId = new Guid("6c718c71-90c8-4de1-8503-d242f3c5d765"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Message = "OkButtonClick",
						ThrowToBase = true,
				});
			}
		}

		private ProcessFlowElement _sourceTabPanelBeforeTabChangeEventSubProcess;
		public ProcessFlowElement SourceTabPanelBeforeTabChangeEventSubProcess {
			get {
				return _sourceTabPanelBeforeTabChangeEventSubProcess ?? (_sourceTabPanelBeforeTabChangeEventSubProcess = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaEventSubProcess",
					Name = "SourceTabPanelBeforeTabChangeEventSubProcess",
					SchemaElementUId = new Guid("dd3fdddf-577f-4b08-a4b8-5419b3f5090f"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessFlowElement _sourceTabPanelBeforeTabChangeStartMessage;
		public ProcessFlowElement SourceTabPanelBeforeTabChangeStartMessage {
			get {
				return _sourceTabPanelBeforeTabChangeStartMessage ?? (_sourceTabPanelBeforeTabChangeStartMessage = new ProcessFlowElement() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaStartMessageEvent",
					Name = "SourceTabPanelBeforeTabChangeStartMessage",
					SchemaElementUId = new Guid("3cb88234-c1c5-460a-a993-5f20f7055587"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
				});
			}
		}

		private ProcessScriptTask _sourceTabPanelBeforeTabChangeScriptTask;
		public ProcessScriptTask SourceTabPanelBeforeTabChangeScriptTask {
			get {
				return _sourceTabPanelBeforeTabChangeScriptTask ?? (_sourceTabPanelBeforeTabChangeScriptTask = new ProcessScriptTask() {
					UId = Guid.NewGuid(),
					Owner = this,
					Type = "ProcessSchemaScriptTask",
					Name = "SourceTabPanelBeforeTabChangeScriptTask",
					SchemaElementUId = new Guid("efd5b6de-9be6-4f32-9079-185fefc846b0"),
					CreatedInSchemaUId = InternalSchemaUId,
					ExecutedEventHandler = OnExecuted,
						Script = SourceTabPanelBeforeTabChangeScriptTaskExecute,
				});
			}
		}

		private LocalizableString _captionColumnCaption;
		public LocalizableString CaptionColumnCaption {
			get {
				return _captionColumnCaption ?? (_captionColumnCaption = new LocalizableString(Storage, Schema.GetResourceManagerName(), "EventsProcessSchema.LocalizableStrings.CaptionColumnCaption.Value"));
			}
		}

		private LocalizableString _nameColumnCaption;
		public LocalizableString NameColumnCaption {
			get {
				return _nameColumnCaption ?? (_nameColumnCaption = new LocalizableString(Storage, Schema.GetResourceManagerName(), "EventsProcessSchema.LocalizableStrings.NameColumnCaption.Value"));
			}
		}

		#endregion

		#region Methods: Private

		private void InitializeFlowElements() {
			FlowElements[AddElementButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { AddElementButtonClickEventSubProcess };
			FlowElements[AddElementButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { AddElementButtonClickStartMessage };
			FlowElements[AddElementButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { AddElementButtonClickScriptTask };
			FlowElements[DeleteElementButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { DeleteElementButtonClickEventSubProcess };
			FlowElements[DeleteElementButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { DeleteElementButtonClickStartMessage };
			FlowElements[DeleteElementButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { DeleteElementButtonClickScriptTask };
			FlowElements[EditElementButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { EditElementButtonClickEventSubProcess };
			FlowElements[EditElementButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { EditElementButtonClickStartMessage };
			FlowElements[EditElementButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { EditElementButtonClickScriptTask };
			FlowElements[ElementsTreeGridDblClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { ElementsTreeGridDblClickStartMessage };
			FlowElements[DownElementButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { DownElementButtonClickEventSubProcess };
			FlowElements[DownElementButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { DownElementButtonClickStartMessage };
			FlowElements[DownElementButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { DownElementButtonClickScriptTask };
			FlowElements[UpElementButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { UpElementButtonClickEventSubProcess };
			FlowElements[UpElementButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { UpElementButtonClickStartMessage };
			FlowElements[UpElementButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { UpElementButtonClickScriptTask };
			FlowElements[AddButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { AddButtonClickEventSubProcess };
			FlowElements[AddButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { AddButtonClickStartMessage };
			FlowElements[AddButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { AddButtonClickScriptTask };
			FlowElements[OpenAddButtonElementPageUserTask.SchemaElementUId] = new Collection<ProcessFlowElement> { OpenAddButtonElementPageUserTask };
			FlowElements[EventSubProcess4.SchemaElementUId] = new Collection<ProcessFlowElement> { EventSubProcess4 };
			FlowElements[DeleteButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { DeleteButtonClickStartMessage };
			FlowElements[DeleteButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { DeleteButtonClickScriptTask };
			FlowElements[UpButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { UpButtonClickEventSubProcess };
			FlowElements[UpButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { UpButtonClickStartMessage };
			FlowElements[UpButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { UpButtonClickScriptTask };
			FlowElements[DownButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { DownButtonClickEventSubProcess };
			FlowElements[DownButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { DownButtonClickStartMessage };
			FlowElements[DownButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { DownButtonClickScriptTask };
			FlowElements[EditButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { EditButtonClickEventSubProcess };
			FlowElements[EditButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { EditButtonClickStartMessage };
			FlowElements[EditButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { EditButtonClickScriptTask };
			FlowElements[ButtonsTreeGridDblClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { ButtonsTreeGridDblClickStartMessage };
			FlowElements[EventSubProcess2.SchemaElementUId] = new Collection<ProcessFlowElement> { EventSubProcess2 };
			FlowElements[ClosedButtonSettingsEditPageStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { ClosedButtonSettingsEditPageStartMessage };
			FlowElements[ClosedButtonSettingsEditPageScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { ClosedButtonSettingsEditPageScriptTask };
			FlowElements[GroupEditButtonClickEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { GroupEditButtonClickEventSubProcess };
			FlowElements[GroupEditButtonClickStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { GroupEditButtonClickStartMessage };
			FlowElements[GroupEditButtonClickScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { GroupEditButtonClickScriptTask };
			FlowElements[OpenGroupOfElementsEditPageUserTask.SchemaElementUId] = new Collection<ProcessFlowElement> { OpenGroupOfElementsEditPageUserTask };
			FlowElements[ClientUnitSchemaeEditChangeEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { ClientUnitSchemaeEditChangeEventSubProcess };
			FlowElements[ClientUnitSchemaeEditChangeStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { ClientUnitSchemaeEditChangeStartMessage };
			FlowElements[ClientUnitSchemaeEditChangeScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { ClientUnitSchemaeEditChangeScriptTask };
			FlowElements[EntitySchemaLookupEditChangeEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { EntitySchemaLookupEditChangeEventSubProcess };
			FlowElements[EntitySchemaLookupEditChangeStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { EntitySchemaLookupEditChangeStartMessage };
			FlowElements[EntitySchemaLookupEditChangeScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { EntitySchemaLookupEditChangeScriptTask };
			FlowElements[EventSubProcessPreconfiguredFormInit.SchemaElementUId] = new Collection<ProcessFlowElement> { EventSubProcessPreconfiguredFormInit };
			FlowElements[InitStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { InitStartMessage };
			FlowElements[InitIntermediateThrowMessageEvent.SchemaElementUId] = new Collection<ProcessFlowElement> { InitIntermediateThrowMessageEvent };
			FlowElements[InitScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { InitScriptTask };
			FlowElements[PageLoadCompleteEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { PageLoadCompleteEventSubProcess };
			FlowElements[PageLoqdCompleteStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { PageLoqdCompleteStartMessage };
			FlowElements[PageLoqdCompleteIntermediateThrowMessageEvent.SchemaElementUId] = new Collection<ProcessFlowElement> { PageLoqdCompleteIntermediateThrowMessageEvent };
			FlowElements[PageLoadCompleteScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { PageLoadCompleteScriptTask };
			FlowElements[EventSubProcessPressedButtonOK.SchemaElementUId] = new Collection<ProcessFlowElement> { EventSubProcessPressedButtonOK };
			FlowElements[OkButtonClickPreconfiguredFormStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { OkButtonClickPreconfiguredFormStartMessage };
			FlowElements[OkButtonClickPreconfiguredFormScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { OkButtonClickPreconfiguredFormScriptTask };
			FlowElements[OkButtonClickIntermediateThrowMessageEvent.SchemaElementUId] = new Collection<ProcessFlowElement> { OkButtonClickIntermediateThrowMessageEvent };
			FlowElements[SourceTabPanelBeforeTabChangeEventSubProcess.SchemaElementUId] = new Collection<ProcessFlowElement> { SourceTabPanelBeforeTabChangeEventSubProcess };
			FlowElements[SourceTabPanelBeforeTabChangeStartMessage.SchemaElementUId] = new Collection<ProcessFlowElement> { SourceTabPanelBeforeTabChangeStartMessage };
			FlowElements[SourceTabPanelBeforeTabChangeScriptTask.SchemaElementUId] = new Collection<ProcessFlowElement> { SourceTabPanelBeforeTabChangeScriptTask };
		}

		private void OnExecuted(object sender, ProcessActivityAfterEventArgs e) {
			switch (e.Context.SenderName) {
					case "AddElementButtonClickEventSubProcess":
						break;
					case "AddElementButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("AddElementButtonClickScriptTask");
						break;
					case "AddElementButtonClickScriptTask":
						e.Context.QueueTasks.Enqueue("OpenAddButtonElementPageUserTask");
						break;
					case "DeleteElementButtonClickEventSubProcess":
						break;
					case "DeleteElementButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("DeleteElementButtonClickScriptTask");
						break;
					case "DeleteElementButtonClickScriptTask":
						break;
					case "EditElementButtonClickEventSubProcess":
						break;
					case "EditElementButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("EditElementButtonClickScriptTask");
						break;
					case "EditElementButtonClickScriptTask":
						e.Context.QueueTasks.Enqueue("OpenAddButtonElementPageUserTask");
						break;
					case "ElementsTreeGridDblClickStartMessage":
						e.Context.QueueTasks.Enqueue("EditElementButtonClickScriptTask");
						break;
					case "DownElementButtonClickEventSubProcess":
						break;
					case "DownElementButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("DownElementButtonClickScriptTask");
						break;
					case "DownElementButtonClickScriptTask":
						break;
					case "UpElementButtonClickEventSubProcess":
						break;
					case "UpElementButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("UpElementButtonClickScriptTask");
						break;
					case "UpElementButtonClickScriptTask":
						break;
					case "AddButtonClickEventSubProcess":
						break;
					case "AddButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("AddButtonClickScriptTask");
						break;
					case "AddButtonClickScriptTask":
						e.Context.QueueTasks.Enqueue("OpenAddButtonElementPageUserTask");
						break;
					case "OpenAddButtonElementPageUserTask":
						break;
					case "EventSubProcess4":
						break;
					case "DeleteButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("DeleteButtonClickScriptTask");
						break;
					case "DeleteButtonClickScriptTask":
						break;
					case "UpButtonClickEventSubProcess":
						break;
					case "UpButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("UpButtonClickScriptTask");
						break;
					case "UpButtonClickScriptTask":
						break;
					case "DownButtonClickEventSubProcess":
						break;
					case "DownButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("DownButtonClickScriptTask");
						break;
					case "DownButtonClickScriptTask":
						break;
					case "EditButtonClickEventSubProcess":
						break;
					case "EditButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("EditButtonClickScriptTask");
						break;
					case "EditButtonClickScriptTask":
						e.Context.QueueTasks.Enqueue("OpenAddButtonElementPageUserTask");
						break;
					case "ButtonsTreeGridDblClickStartMessage":
						e.Context.QueueTasks.Enqueue("EditButtonClickScriptTask");
						break;
					case "EventSubProcess2":
						break;
					case "ClosedButtonSettingsEditPageStartMessage":
						e.Context.QueueTasks.Enqueue("ClosedButtonSettingsEditPageScriptTask");
						break;
					case "ClosedButtonSettingsEditPageScriptTask":
						break;
					case "GroupEditButtonClickEventSubProcess":
						break;
					case "GroupEditButtonClickStartMessage":
						e.Context.QueueTasks.Enqueue("GroupEditButtonClickScriptTask");
						break;
					case "GroupEditButtonClickScriptTask":
						e.Context.QueueTasks.Enqueue("OpenGroupOfElementsEditPageUserTask");
						break;
					case "OpenGroupOfElementsEditPageUserTask":
						break;
					case "ClientUnitSchemaeEditChangeEventSubProcess":
						break;
					case "ClientUnitSchemaeEditChangeStartMessage":
						e.Context.QueueTasks.Enqueue("ClientUnitSchemaeEditChangeScriptTask");
						break;
					case "ClientUnitSchemaeEditChangeScriptTask":
						break;
					case "EntitySchemaLookupEditChangeEventSubProcess":
						break;
					case "EntitySchemaLookupEditChangeStartMessage":
						e.Context.QueueTasks.Enqueue("EntitySchemaLookupEditChangeScriptTask");
						break;
					case "EntitySchemaLookupEditChangeScriptTask":
						break;
					case "EventSubProcessPreconfiguredFormInit":
						break;
					case "InitStartMessage":
						e.Context.QueueTasks.Enqueue("InitIntermediateThrowMessageEvent");
						break;
					case "InitIntermediateThrowMessageEvent":
						e.Context.QueueTasks.Enqueue("InitScriptTask");
						break;
					case "InitScriptTask":
						break;
					case "PageLoadCompleteEventSubProcess":
						break;
					case "PageLoqdCompleteStartMessage":
						e.Context.QueueTasks.Enqueue("PageLoqdCompleteIntermediateThrowMessageEvent");
						break;
					case "PageLoqdCompleteIntermediateThrowMessageEvent":
						e.Context.QueueTasks.Enqueue("PageLoadCompleteScriptTask");
						break;
					case "PageLoadCompleteScriptTask":
						break;
					case "EventSubProcessPressedButtonOK":
						break;
					case "OkButtonClickPreconfiguredFormStartMessage":
						e.Context.QueueTasks.Enqueue("OkButtonClickPreconfiguredFormScriptTask");
						break;
					case "OkButtonClickPreconfiguredFormScriptTask":
						e.Context.QueueTasks.Enqueue("OkButtonClickIntermediateThrowMessageEvent");
						break;
					case "OkButtonClickIntermediateThrowMessageEvent":
						break;
					case "SourceTabPanelBeforeTabChangeEventSubProcess":
						break;
					case "SourceTabPanelBeforeTabChangeStartMessage":
						e.Context.QueueTasks.Enqueue("SourceTabPanelBeforeTabChangeScriptTask");
						break;
					case "SourceTabPanelBeforeTabChangeScriptTask":
						break;
			}
			ProcessQueue(e.Context);
		}

		#endregion

		#region Methods: Protected

		protected override void PrepareStart(ProcessExecutingContext context) {
			base.PrepareStart(context);
			context.Process = this;
			ActivatedEventElements.Add("AddElementButtonClickStartMessage");
			ActivatedEventElements.Add("DeleteElementButtonClickStartMessage");
			ActivatedEventElements.Add("EditElementButtonClickStartMessage");
			ActivatedEventElements.Add("ElementsTreeGridDblClickStartMessage");
			ActivatedEventElements.Add("DownElementButtonClickStartMessage");
			ActivatedEventElements.Add("UpElementButtonClickStartMessage");
			ActivatedEventElements.Add("AddButtonClickStartMessage");
			ActivatedEventElements.Add("DeleteButtonClickStartMessage");
			ActivatedEventElements.Add("UpButtonClickStartMessage");
			ActivatedEventElements.Add("DownButtonClickStartMessage");
			ActivatedEventElements.Add("EditButtonClickStartMessage");
			ActivatedEventElements.Add("ButtonsTreeGridDblClickStartMessage");
			ActivatedEventElements.Add("ClosedButtonSettingsEditPageStartMessage");
			ActivatedEventElements.Add("GroupEditButtonClickStartMessage");
			ActivatedEventElements.Add("ClientUnitSchemaeEditChangeStartMessage");
			ActivatedEventElements.Add("EntitySchemaLookupEditChangeStartMessage");
			ActivatedEventElements.Add("InitStartMessage");
			ActivatedEventElements.Add("PageLoqdCompleteStartMessage");
			ActivatedEventElements.Add("OkButtonClickPreconfiguredFormStartMessage");
			ActivatedEventElements.Add("SourceTabPanelBeforeTabChangeStartMessage");
		}

		protected override bool ProcessQueue(ProcessExecutingContext context) {
			bool result = base.ProcessQueue(context);
			if (context.QueueTasks.Count == 0) {
				return result;
			}
			switch (context.QueueTasks.Peek()) {
				case "AddElementButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "AddElementButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "AddElementButtonClickStartMessage";
					result = AddElementButtonClickStartMessage.Execute(context);
					break;
				case "AddElementButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "AddElementButtonClickScriptTask";
					result = AddElementButtonClickScriptTask.Execute(context, AddElementButtonClickScriptTaskExecute);
					break;
				case "DeleteElementButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "DeleteElementButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "DeleteElementButtonClickStartMessage";
					result = DeleteElementButtonClickStartMessage.Execute(context);
					break;
				case "DeleteElementButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "DeleteElementButtonClickScriptTask";
					result = DeleteElementButtonClickScriptTask.Execute(context, DeleteElementButtonClickScriptTaskExecute);
					break;
				case "EditElementButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "EditElementButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "EditElementButtonClickStartMessage";
					result = EditElementButtonClickStartMessage.Execute(context);
					break;
				case "EditElementButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "EditElementButtonClickScriptTask";
					result = EditElementButtonClickScriptTask.Execute(context, EditElementButtonClickScriptTaskExecute);
					break;
				case "ElementsTreeGridDblClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "ElementsTreeGridDblClickStartMessage";
					result = ElementsTreeGridDblClickStartMessage.Execute(context);
					break;
				case "DownElementButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "DownElementButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "DownElementButtonClickStartMessage";
					result = DownElementButtonClickStartMessage.Execute(context);
					break;
				case "DownElementButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "DownElementButtonClickScriptTask";
					result = DownElementButtonClickScriptTask.Execute(context, DownElementButtonClickScriptTaskExecute);
					break;
				case "UpElementButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "UpElementButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "UpElementButtonClickStartMessage";
					result = UpElementButtonClickStartMessage.Execute(context);
					break;
				case "UpElementButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "UpElementButtonClickScriptTask";
					result = UpElementButtonClickScriptTask.Execute(context, UpElementButtonClickScriptTaskExecute);
					break;
				case "AddButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "AddButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "AddButtonClickStartMessage";
					result = AddButtonClickStartMessage.Execute(context);
					break;
				case "AddButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "AddButtonClickScriptTask";
					result = AddButtonClickScriptTask.Execute(context, AddButtonClickScriptTaskExecute);
					break;
				case "OpenAddButtonElementPageUserTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "OpenAddButtonElementPageUserTask";
					result = OpenAddButtonElementPageUserTask.Execute(context);
					break;
				case "EventSubProcess4":
					context.QueueTasks.Dequeue();
					break;
				case "DeleteButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "DeleteButtonClickStartMessage";
					result = DeleteButtonClickStartMessage.Execute(context);
					break;
				case "DeleteButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "DeleteButtonClickScriptTask";
					result = DeleteButtonClickScriptTask.Execute(context, DeleteButtonClickScriptTaskExecute);
					break;
				case "UpButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "UpButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "UpButtonClickStartMessage";
					result = UpButtonClickStartMessage.Execute(context);
					break;
				case "UpButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "UpButtonClickScriptTask";
					result = UpButtonClickScriptTask.Execute(context, UpButtonClickScriptTaskExecute);
					break;
				case "DownButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "DownButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "DownButtonClickStartMessage";
					result = DownButtonClickStartMessage.Execute(context);
					break;
				case "DownButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "DownButtonClickScriptTask";
					result = DownButtonClickScriptTask.Execute(context, DownButtonClickScriptTaskExecute);
					break;
				case "EditButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "EditButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "EditButtonClickStartMessage";
					result = EditButtonClickStartMessage.Execute(context);
					break;
				case "EditButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "EditButtonClickScriptTask";
					result = EditButtonClickScriptTask.Execute(context, EditButtonClickScriptTaskExecute);
					break;
				case "ButtonsTreeGridDblClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "ButtonsTreeGridDblClickStartMessage";
					result = ButtonsTreeGridDblClickStartMessage.Execute(context);
					break;
				case "EventSubProcess2":
					context.QueueTasks.Dequeue();
					break;
				case "ClosedButtonSettingsEditPageStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "ClosedButtonSettingsEditPageStartMessage";
					result = ClosedButtonSettingsEditPageStartMessage.Execute(context);
					break;
				case "ClosedButtonSettingsEditPageScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "ClosedButtonSettingsEditPageScriptTask";
					result = ClosedButtonSettingsEditPageScriptTask.Execute(context, ClosedButtonSettingsEditPageScriptTaskExecute);
					break;
				case "GroupEditButtonClickEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "GroupEditButtonClickStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "GroupEditButtonClickStartMessage";
					result = GroupEditButtonClickStartMessage.Execute(context);
					break;
				case "GroupEditButtonClickScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "GroupEditButtonClickScriptTask";
					result = GroupEditButtonClickScriptTask.Execute(context, GroupEditButtonClickScriptTaskExecute);
					break;
				case "OpenGroupOfElementsEditPageUserTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "OpenGroupOfElementsEditPageUserTask";
					result = OpenGroupOfElementsEditPageUserTask.Execute(context);
					break;
				case "ClientUnitSchemaeEditChangeEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "ClientUnitSchemaeEditChangeStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "ClientUnitSchemaeEditChangeStartMessage";
					result = ClientUnitSchemaeEditChangeStartMessage.Execute(context);
					break;
				case "ClientUnitSchemaeEditChangeScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "ClientUnitSchemaeEditChangeScriptTask";
					result = ClientUnitSchemaeEditChangeScriptTask.Execute(context, ClientUnitSchemaeEditChangeScriptTaskExecute);
					break;
				case "EntitySchemaLookupEditChangeEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "EntitySchemaLookupEditChangeStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "EntitySchemaLookupEditChangeStartMessage";
					result = EntitySchemaLookupEditChangeStartMessage.Execute(context);
					break;
				case "EntitySchemaLookupEditChangeScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "EntitySchemaLookupEditChangeScriptTask";
					result = EntitySchemaLookupEditChangeScriptTask.Execute(context, EntitySchemaLookupEditChangeScriptTaskExecute);
					break;
				case "EventSubProcessPreconfiguredFormInit":
					context.QueueTasks.Dequeue();
					break;
				case "InitStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "InitStartMessage";
					result = InitStartMessage.Execute(context);
					break;
				case "InitIntermediateThrowMessageEvent":
					context.QueueTasks.Dequeue();
					base.ThrowEvent(context, "Init");
					result = InitIntermediateThrowMessageEvent.Execute(context);
					break;
				case "InitScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "InitScriptTask";
					result = InitScriptTask.Execute(context, InitScriptTaskExecute);
					break;
				case "PageLoadCompleteEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "PageLoqdCompleteStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "PageLoqdCompleteStartMessage";
					result = PageLoqdCompleteStartMessage.Execute(context);
					break;
				case "PageLoqdCompleteIntermediateThrowMessageEvent":
					context.QueueTasks.Dequeue();
					base.ThrowEvent(context, "PageLoadComplete");
					result = PageLoqdCompleteIntermediateThrowMessageEvent.Execute(context);
					break;
				case "PageLoadCompleteScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "PageLoadCompleteScriptTask";
					result = PageLoadCompleteScriptTask.Execute(context, PageLoadCompleteScriptTaskExecute);
					break;
				case "EventSubProcessPressedButtonOK":
					context.QueueTasks.Dequeue();
					break;
				case "OkButtonClickPreconfiguredFormStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "OkButtonClickPreconfiguredFormStartMessage";
					result = OkButtonClickPreconfiguredFormStartMessage.Execute(context);
					break;
				case "OkButtonClickPreconfiguredFormScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "OkButtonClickPreconfiguredFormScriptTask";
					result = OkButtonClickPreconfiguredFormScriptTask.Execute(context, OkButtonClickPreconfiguredFormScriptTaskExecute);
					break;
				case "OkButtonClickIntermediateThrowMessageEvent":
					context.QueueTasks.Dequeue();
					base.ThrowEvent(context, "OkButtonClick");
					result = OkButtonClickIntermediateThrowMessageEvent.Execute(context);
					break;
				case "SourceTabPanelBeforeTabChangeEventSubProcess":
					context.QueueTasks.Dequeue();
					break;
				case "SourceTabPanelBeforeTabChangeStartMessage":
					context.QueueTasks.Dequeue();
					context.SenderName = "SourceTabPanelBeforeTabChangeStartMessage";
					result = SourceTabPanelBeforeTabChangeStartMessage.Execute(context);
					break;
				case "SourceTabPanelBeforeTabChangeScriptTask":
					context.QueueTasks.Dequeue();
					context.SenderName = "SourceTabPanelBeforeTabChangeScriptTask";
					result = SourceTabPanelBeforeTabChangeScriptTask.Execute(context, SourceTabPanelBeforeTabChangeScriptTaskExecute);
					break;
			}
			if (!result && context.QueueTasks.Count > 0) {
				ProcessQueue(context);
			}
			return result;
		}

		protected override void CompleteApplyingFlowElementsPropertiesData() {
			base.CompleteApplyingFlowElementsPropertiesData();
			foreach (var item in FlowElements) {
				foreach (var itemValue in item.Value) {
					if (Guid.Equals(itemValue.CreatedInSchemaUId, InternalSchemaUId)) {
						itemValue.ExecutedEventHandler = OnExecuted;
					}
				}
			}
		}

		protected override void ApplyPropertiesDataValues(DataReader reader) {
			base.ApplyPropertiesDataValues(reader);
			switch (reader.CurrentName) {
				case "ExtendedClientModule":
					ExtendedClientModule = reader.GetValue<System.String>();
				break;
				case "IsButtonSettigs":
					IsButtonSettigs = reader.GetValue<System.String>();
				break;
				case "ButtonSettingsVirtualDataSourceName":
					ButtonSettingsVirtualDataSourceName = reader.GetValue<System.String>();
				break;
				case "ControlSettingsVirtualDataSourceName":
					ControlSettingsVirtualDataSourceName = reader.GetValue<System.String>();
				break;
				case "EditButtonSettingsContextKey":
					EditButtonSettingsContextKey = reader.GetValue<System.String>();
				break;
				case "EditElementSettingsContextKey":
					EditElementSettingsContextKey = reader.GetValue<System.String>();
				break;
				case "EntitySchemaEditOldValue":
					EntitySchemaEditOldValue = reader.GetValue<System.Guid>();
				break;
				case "EntitySchemaUId":
					EntitySchemaUId = reader.GetValue<System.Guid>();
				break;
			}
		}

		#endregion

		#region Methods: Public

		public virtual bool AddElementButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			IsButtonSettigs = "false";
			return AssignPropertiesControlSettingsEditPage(false, EditElementSettingsContextKey,
				Page.ElementsTreeGrid, IsButtonSettigs);
		}

		public virtual bool DeleteElementButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			DeleteEditedElement(EditElementSettingsContextKey, Page.ElementsTreeGrid.SelectedNodes,
				GetVirtualDataSource(ControlSettingsVirtualDataSourceName));
			return true;
		}

		public virtual bool EditElementButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			IsButtonSettigs = "false";
			return AssignPropertiesControlSettingsEditPage(true, EditElementSettingsContextKey,
				Page.ElementsTreeGrid, IsButtonSettigs);
		}

		public virtual bool DownElementButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			MoveEditedItem(EditElementSettingsContextKey,
				Page.ElementsTreeGrid, GetVirtualDataSource(ControlSettingsVirtualDataSourceName), false);
			return true;
		}

		public virtual bool UpElementButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			MoveEditedItem(EditElementSettingsContextKey,
				Page.ElementsTreeGrid, GetVirtualDataSource(ControlSettingsVirtualDataSourceName), true);
			return true;
		}

		public virtual bool AddButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			IsButtonSettigs = "true";
			return AssignPropertiesControlSettingsEditPage(false, EditButtonSettingsContextKey, Page.ButtonsTreeGrid, IsButtonSettigs);
		}

		public virtual bool DeleteButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			DeleteEditedElement(EditButtonSettingsContextKey, Page.ButtonsTreeGrid.SelectedNodes,
				GetVirtualDataSource(ButtonSettingsVirtualDataSourceName));
			return true;
		}

		public virtual bool UpButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			MoveEditedItem(EditButtonSettingsContextKey,
				Page.ButtonsTreeGrid, GetVirtualDataSource(ButtonSettingsVirtualDataSourceName), true);
			return true;
		}

		public virtual bool DownButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			MoveEditedItem(EditButtonSettingsContextKey,
				Page.ButtonsTreeGrid, GetVirtualDataSource(ButtonSettingsVirtualDataSourceName), false);
			return true;
		}

		public virtual bool EditButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			IsButtonSettigs = "true";
			return AssignPropertiesControlSettingsEditPage(true, EditButtonSettingsContextKey,
				Page.ButtonsTreeGrid, IsButtonSettigs);
		}

		public virtual bool ClosedButtonSettingsEditPageScriptTaskExecute(ProcessExecutingContext context) {
			if (Convert.ToBoolean(IsButtonSettigs)) {
				DisplayEditedItems(GetEditedItems(EditButtonSettingsContextKey),
					GetVirtualDataSource(ButtonSettingsVirtualDataSourceName));
				SetEnabledButtonsTreeGridButtons();
			} else {
				DisplayEditedItems(GetEditedItems(EditElementSettingsContextKey),
					GetVirtualDataSource(ControlSettingsVirtualDataSourceName));
				SetEnabledElementsTreeGridButtons();
			}
			return true;
		}

		public virtual bool GroupEditButtonClickScriptTaskExecute(ProcessExecutingContext context) {
			OpenGroupOfElementsEditPageUserTask.OpenerInstanceId = InstanceUId;
			OpenGroupOfElementsEditPageUserTask.UseCurrentActivePage = true;
			//OpenGroupOfElementsEditPageUserTask.CloseMessage = "ClosedGroupOfElementsSettingsEditPage";
			//// ElementsInGroupEditPage
			OpenGroupOfElementsEditPageUserTask.PageUId = new Guid("5B1EB0BB-9143-4978-B36C-5FD9750C3C2F");
			var parameters = new Dictionary<string, string>() {
				{ "contextKey",  EditElementSettingsContextKey}
			};
			OpenGroupOfElementsEditPageUserTask.PageParameters = parameters;
			return true;
		}

		public virtual bool ClientUnitSchemaeEditChangeScriptTaskExecute(ProcessExecutingContext context) {
			return true;
		}

		public virtual bool EntitySchemaLookupEditChangeScriptTaskExecute(ProcessExecutingContext context) {
			var entitySchemaId = (Guid)Page.EntitySchemaLookupEdit.Value;
			if (EntitySchemaEditOldValue == entitySchemaId) {
				return true;
			}
			bool isNotEmpty = entitySchemaId != Guid.Empty;
			if (isNotEmpty) {
				EntitySchemaUId = GetSchemaUIdById(entitySchemaId);
			} else {
				EntitySchemaUId = Guid.Empty;
			}
			UpdateEntityIdParameterValue();
			Page.EntityEdit.SetRequired(isNotEmpty);
			Page.EntityEdit.Enabled = isNotEmpty;
			EntitySchemaEditOldValue = entitySchemaId;
			return true;
		}

		public virtual bool InitScriptTaskExecute(ProcessExecutingContext context) {
			CreateButtonSettingsVirtualDataSource();
			CreateControlSettingsVirtualDataSource();
			IEnumerable<Guid> packageIds = Terrasoft.Core.Packages.WorkspaceUtilities.GetPackageHierarchyIds(UserConnection, FindDesignedProcessSchema().PackageUId,
				UserConnection.Workspace.Id);
			object[] objectPackageIds = packageIds.Cast<object>().ToArray();
			var packageIdFilter = new Dictionary<string, object> {
				{"comparisonType", FilterComparisonType.Equal},
				{"leftExpressionColumnPath", "SysPackage"},
				{"useDisplayValue", false},
				{"rightExpressionParameterValues", objectPackageIds}};
			var extendParentFilter = new Dictionary<string, object> {
				{"comparisonType", FilterComparisonType.Equal},
				{"leftExpressionColumnPath", "ExtendParent"},
				{"useDisplayValue", false},
				{"rightExpressionParameterValues", new object[] {false}}};
			Page.EntitySchemaLookupEdit.PrepareLookupFilter += delegate (object sender, LookupEditEventArgs e) {
				var filters = e.Filters;
				filters.Add(packageIdFilter);
				filters.Add(extendParentFilter);
			};
			var defValues = DefaultValues as Dictionary<string, ProcessSchemaParameterValue>;
			if (defValues == null) {
				return false;
			}
			if (!Ext.IsAjaxRequest) {
				Page.UserTaskTitleEdit.Text = ElementNewCaption;
				var descriptor = (DesignModeClassDescriptor)Descriptor;
				FillPropertyDataSource(Source, descriptor);
				var propertyDataSource = (VirtualDataSource)PropertyDataSource;
				propertyDataSource.SetClientActiveRow();
				BindEditors(GetEditorsBinding(), propertyDataSource, defValues);
			}
			return true;
		}

		public virtual bool PageLoadCompleteScriptTaskExecute(ProcessExecutingContext context) {
			EditButtonSettingsContextKey = Guid.NewGuid().ToString();
			EditElementSettingsContextKey = Guid.NewGuid().ToString();
			Page.TempUserContext.Add(EditButtonSettingsContextKey);
			Page.TempUserContext.Add(EditElementSettingsContextKey);
			var parameters = DefaultValues as Dictionary<string, ProcessSchemaParameterValue>;
			if (parameters == null) {
				return true;
			}
			string parameterValue = parameters["Buttons"].Value;
			if (!string.IsNullOrEmpty(parameterValue)) {
				var items = JsonConvert.DeserializeObject<List<Dictionary<string, object>>>(parameterValue);
				UserConnection.SessionData[EditButtonSettingsContextKey] = items;
				DisplayEditedItems(items, GetVirtualDataSource(ButtonSettingsVirtualDataSourceName));
			}
			SetEnabledButtonsTreeGridButtons();
			parameterValue = parameters["Elements"].Value;
			if (!string.IsNullOrEmpty(parameterValue)) {
				var items = JsonConvert.DeserializeObject<List<Dictionary<string, object>>>(parameterValue);
				UserConnection.SessionData[EditElementSettingsContextKey] = items;
				DisplayEditedItems(items, GetVirtualDataSource(ControlSettingsVirtualDataSourceName));
			}
			SetEnabledElementsTreeGridButtons();
			parameterValue = parameters["EntitySchemaUId"].Value;
			if (!string.IsNullOrEmpty(parameterValue)) {
				EntitySchemaUId = new Guid(parameterValue);
				Guid entitySchemaId = GetSchemaIdByUId(EntitySchemaUId);
				EntitySchemaEditOldValue = entitySchemaId;
				Page.EntitySchemaLookupEdit.SetValueAndText(entitySchemaId,
					UserConnection.EntitySchemaManager.GetItemByUId(EntitySchemaUId).Caption);
				Page.EntityEdit.Enabled = true;
				ProcessSchemaParameterValue paramValue = Page.EntityEdit.ParameterValue;
				paramValue.ReferenceSchemaUId = EntitySchemaUId;
				Page.EntityEdit.Value = paramValue;
			}
			parameterValue = parameters["ExtendedClientModule"].Value;
			if (!string.IsNullOrEmpty(parameterValue)) {
				ExtendedClientModule = parameterValue;
			}
			return true;
		}

		public virtual bool OkButtonClickPreconfiguredFormScriptTaskExecute(ProcessExecutingContext context) {
			ElementNewCaption = Page.UserTaskTitleEdit.Text;
			var noneVS = ProcessSchemaParameterValueSource.None;
			var constVS = ProcessSchemaParameterValueSource.ConstValue;
			var parametersValue = ParametersValue as Dictionary<string, ProcessSchemaParameterValue>;
			if (parametersValue == null) {
				ParametersValue = (parametersValue = new Dictionary<string, ProcessSchemaParameterValue>());
			}
			bool isEmptyEntitySchemaUId = EntitySchemaUId == Guid.Empty;
			parametersValue["EntitySchemaUId"] = new ProcessSchemaParameterValue() {
				ModifiedInSchemaUId = EditSchemaUId,
				Source = isEmptyEntitySchemaUId ? noneVS : constVS,
				Value = isEmptyEntitySchemaUId ? string.Empty : EntitySchemaUId.ToString()
			};
			if (isEmptyEntitySchemaUId) {
					parametersValue["EntityId"] = new ProcessSchemaParameterValue() {
					ModifiedInSchemaUId = EditSchemaUId,
					Source = noneVS,
					Value = string.Empty
				};
			}
			var jsonSerializerSettings = new JsonSerializerSettings {
				TypeNameHandling = TypeNameHandling.All,
				TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple
			};
			List<Dictionary<string, object>> items = GetEditedItems(EditButtonSettingsContextKey);
			string serializedItems = (items == null || items.Count == 0)
				? string.Empty
				: JsonConvert.SerializeObject(items, Formatting.None, jsonSerializerSettings);
			parametersValue["Buttons"] = new ProcessSchemaParameterValue() {
				ModifiedInSchemaUId = EditSchemaUId,
				Source = string.IsNullOrEmpty(serializedItems) ? noneVS : constVS,
				Value = serializedItems
			};
			items = GetEditedItems(EditElementSettingsContextKey);
			bool isEmpty = (items == null || items.Count == 0);
			if (isEmpty) {
				serializedItems = string.Empty;
			} else {
				serializedItems = JsonConvert.SerializeObject(items, Formatting.None, jsonSerializerSettings);
			}
			ProcessSchema schema = FindDesignedProcessSchema();
			var userTask = (ProcessSchemaUserTask)schema.GetBaseElementByUId(EditElementUId);
			var modifiedParameters = new List<ProcessSchemaParameter>(64);
			if (!isEmpty) {
				foreach(Dictionary<string, object> item in items) {
					ProcessSchemaParameter parameter;
					if (TryCreateParameter(schema, userTask, item, out parameter)) {
						modifiedParameters.Add(parameter);
					}
				}
			}
			/*
			if (modifiedParameters.Count != 0) {
				UpdateProcessSchemaUserTaskCustomParameters(schema, userTask, modifiedParameters);
			}
			*/
			UpdateProcessSchemaUserTaskCustomParameters(schema, userTask, modifiedParameters);
			parametersValue["Elements"] = new ProcessSchemaParameterValue() {
				ModifiedInSchemaUId = EditSchemaUId,
				Source = isEmpty ? noneVS : constVS,
				Value = serializedItems
			};
			ExtendedClientModule = Page.CodeSyntaxMemoEdit.Text;
			parametersValue["ExtendedClientModule"] = new ProcessSchemaParameterValue() {
				ModifiedInSchemaUId = EditSchemaUId,
				Source = string.IsNullOrEmpty(ExtendedClientModule) ? noneVS : constVS,
				Value = ExtendedClientModule == null ? string.Empty : ExtendedClientModule
			};
			return true;
		}

		public virtual bool SourceTabPanelBeforeTabChangeScriptTaskExecute(ProcessExecutingContext context) {
			if (Page.SourceTabPanel.ActiveTabIndex == 0) {
				Page.CodeSyntaxMemoEdit.Text = ExtendedClientModule;
			} else {
				ExtendedClientModule = Page.CodeSyntaxMemoEdit.Text;
			}
			return true;
		}

		public override void InitializeSchemaExplorerWindow() {
			base.InitializeSchemaExplorerWindow();
			var schemaExplorer = SchemaExplorer as UIControls.SchemaStructureExplorer;
			schemaExplorer.IncludedDataValueTypes[ParameterDataValueTypeUId] = EntitySchemaUId;
		}

		public override Dictionary<string, Terrasoft.UI.WebControls.WebControl> GetEditorsBinding() {
			return new Dictionary<string, Terrasoft.UI.WebControls.WebControl>() {
			{"EntityId", Page.EntityEdit},
			{"Title", Page.TitleEditEdit},
			{"Recommendation", Page.RecommendationEdit},
			{"InformationOnStep", Page.InformationOnStepMemoEdit}
			};
		}

		public override void MakeCaption() {
			(Page.AspPage as Terrasoft.UI.WebControls.Page).Caption = string.IsNullOrEmpty(Page.UserTaskTitleEdit.Text) ?
				string.Format("{0} ({1})", WindowCaption, NewRecord) : Page.UserTaskTitleEdit.Text;
		}

		public virtual Guid GetSchemaUIdById(Guid schemaId) {
			return
				(new Select(UserConnection)
					.Column("UId")
				.From("SysSchema")
				.Where("Id")
				.IsEqual(Column.Parameter(schemaId)) as Select)
				.ExecuteScalar<Guid>();
		}

		public virtual Guid GetSchemaIdByUId(Guid schemaUId) {
			return
				(new Select(UserConnection)
					.Column("SysSchema", "Id")
				.From("SysSchema")
				.InnerJoin("SysPackage").On("SysPackage", "Id").IsEqual("SysSchema", "SysPackageId")
				.Where("SysSchema", "UId").IsEqual(Column.Parameter(schemaUId))
				.And("SysPackage", "SysWorkspaceId").IsEqual(Column.Parameter(UserConnection.Workspace.Id)) as Select)
				.ExecuteScalar<Guid>();
		}

		public virtual bool AssignPropertiesControlSettingsEditPage(bool isEditMode, string contextKey, TreeGrid treeGrid, string isButtonSettings) {
			OpenAddButtonElementPageUserTask.OpenerInstanceId = InstanceUId;
			OpenAddButtonElementPageUserTask.UseCurrentActivePage = true;
			OpenAddButtonElementPageUserTask.CloseMessage = "ClosedButtonSettingsEditPage";
			//// ControlSattingsEditPage
			OpenAddButtonElementPageUserTask.PageUId = new Guid("8ABC19E2-903F-4F69-B4AF-39E747DD33EA");
			var parameters = new Dictionary<string, string>() {
				{ "contextKey",  contextKey},
				{ "treeGridId", treeGrid.ClientID },
				{ "isButtonSettings", isButtonSettings },
				{ "editSchemaUId", EditSchemaUId.ToString() }
			};
			if (isEditMode) {
				if (treeGrid.SelectedNodes.Count == 0) {
					return false;
				}
				TreeGridNode node = treeGrid.SelectedNodes[0];
				parameters.Add("itemId", node.Values["Id"].ToString());
			}
			OpenAddButtonElementPageUserTask.PageParameters = parameters;
			return true;
		}

		public virtual void DeleteEditedElement(string contextKey, TreeGridNodeCollection selectedNodes, VirtualDataSource virtualDataSource) {
			List<Dictionary<string, object>> items = GetEditedItems(contextKey);
			if (items == null) {
				return;
			}
			foreach (TreeGridNode node in selectedNodes) {
				var itemId = node.Values["Id"].ToString();
				RemoveItem(items, itemId);
			}
			UserConnection.SessionData[contextKey] = items;
			DisplayEditedItems(items, virtualDataSource);
		}

		public virtual List<Dictionary<string, object>> GetEditedItems(string contextKey) {
			 return UserConnection.SessionData[contextKey] as List<Dictionary<string, object>>;
		}

		public virtual void DisplayEditedItems(List<Dictionary<string, object>> items, VirtualDataSource virtualDataSource) {
			if (items == null) {
				return;
			}
			virtualDataSource.Clear();
			foreach (Dictionary<string, object> item in items) {
				Entity row = virtualDataSource.CreateRow();
				row.SetColumnValue("Id", item["Id"]);
				row.SetColumnValue("Caption", item["caption"]);
				virtualDataSource.Add(row);
			}
			virtualDataSource.LoadRows();
		}

		public virtual void MoveEditedItem(string contextKey, TreeGrid treeGrid, VirtualDataSource virtualDataSource, bool isMovedUp) {
			List<Dictionary<string, object>> items = GetEditedItems(contextKey);
			if (items == null || treeGrid.SelectedNodes.Count == 0) {
				return;
			}
			TreeGridNode selectedNode = treeGrid.SelectedNodes[0];
			var itemId = selectedNode.Values["Id"].ToString();
			var item = items.Find(el => (string)el["Id"] == itemId);
			if (item == null) {
				return;
			}
			int index = items.IndexOf(item);
			if ((isMovedUp && index == 0) || (!isMovedUp && index == items.Count - 1)) {
				return;
			}
			Dictionary<string, object> targetItem;
			ItemMovePosition itemMovePosition;
			if (isMovedUp) {
				targetItem = items[index - 1];
				items[index - 1] = item;
				items[index] = targetItem;
				itemMovePosition = ItemMovePosition.Above;
			} else {
				targetItem = items[index + 1];
				items[index] = targetItem;
				items[index + 1] = item;
				itemMovePosition = ItemMovePosition.Below;
			}
			UserConnection.SessionData[contextKey] = items;
			virtualDataSource.Move(item["Id"], targetItem["Id"], itemMovePosition);
			treeGrid.SelectNode(itemId);
			var primaryColumnValue = new Guid(itemId);
			//virtualDataSource.SelectedItemPrimaryColumnValues.Add(primaryColumnValue);
			virtualDataSource.SetClientActiveRow(primaryColumnValue);
		}

		public virtual void CreateControlSettingsVirtualDataSource() {
			CreateVirtualDataSource(ControlSettingsVirtualDataSourceName, Page.ElementsTreeGrid);
		}

		public virtual void CreateButtonSettingsVirtualDataSource() {
			CreateVirtualDataSource(ButtonSettingsVirtualDataSourceName, Page.ButtonsTreeGrid);
		}

		public virtual void CreateVirtualDataSource(string virtualDataSourceName, TreeGrid treeGrid) {
			var vds = new VirtualDataSource() {
				ID = virtualDataSourceName
			};
			Page.PageContainer.Controls.Add(vds);
			treeGrid.DataSourceId = vds.ID;
			DataSourceStructure vdsStructure = vds.DefStructure;
			vdsStructure.PrimaryColumnName = "Id";
			vdsStructure.PrimaryDisplayColumnName = "Caption";
			var maxSizeTextDvt = UserConnection.DataValueTypeManager.GetInstanceByName("MaxSizeText");
			vdsStructure.AddColumn(new DataSourceStructureColumn() {
				Name = "Id",
				Caption = NameColumnCaption,
				IsVisible = false,
				IsHideable = false,
				IsSortable = false,
				DataValueType = UserConnection.DataValueTypeManager.GetInstanceByName("Guid")
			});
			vdsStructure.AddColumn(new DataSourceStructureColumn() {
				Name = "Caption",
				Caption = CaptionColumnCaption,
				IsVisible = true,
				IsHideable = true,
				IsSortable = true,
				DataValueType = maxSizeTextDvt
			});
		}

		public virtual VirtualDataSource GetVirtualDataSource(string virtualDataSourceName) {
			return Page.PageContainer.FindControl(virtualDataSourceName) as VirtualDataSource;
		}

		public virtual bool TryCreateParameter(ProcessSchema schema, ProcessSchemaUserTask userTask, Dictionary<string, object> item, out ProcessSchemaParameter parameter) {
			DataValueTypeManager dataValueTypeManager = UserConnection.DataValueTypeManager;
				Guid dataValueTypeUId;
				Guid referenceSchemaUId = Guid.Empty;
				parameter = null;
				switch((string)item["controlEditType"]) {
					case "CommentaryField":
						dataValueTypeUId = dataValueTypeManager.GetItemByName("MaxSizeText").UId;
						break;
					case "GroupOfElements":
						return false;
					case "DateTimeField":
						string dateTimeFormat = (string)item["dateTimeFormat"];
						if (dateTimeFormat == "7") {
							dataValueTypeUId = dataValueTypeManager.GetItemByName("DateTime").UId;
						} else if (dateTimeFormat == "8") {
							dataValueTypeUId = dataValueTypeManager.GetItemByName("Date").UId;
						} else {
							dataValueTypeUId = dataValueTypeManager.GetItemByName("Time").UId;
						}
						break;
					case "SelectionField":
						dataValueTypeUId = dataValueTypeManager.GetItemByName("Lookup").UId;
						referenceSchemaUId = new Guid(item["dataSource"].ToString());
						break;
					case "1":
						dataValueTypeUId = dataValueTypeManager.GetItemByName("MaxSizeText").UId;
						break;
					case "4":
						dataValueTypeUId = dataValueTypeManager.GetItemByName("Integer").UId;
						break;
					case "5":
						dataValueTypeUId = dataValueTypeManager.GetItemByName("Float2").UId;
						break;
					case "12":
						dataValueTypeUId = dataValueTypeManager.GetItemByName("Boolean").UId;
						break;
					default:
						return false;
				}
				Guid uid = new Guid((string)item["Id"]);
				parameter = new ProcessSchemaParameter(schema) {
					UId = uid,
					Name = (string)item["name"],
					Caption = (string)item["caption"],
					ContainerUId = userTask.UId,
					DataValueTypeUId = dataValueTypeUId,
					ReferenceSchemaUId = referenceSchemaUId,
					SourceValue = {
						ModifiedInSchemaUId = schema.UId
					}
				};
				return true;
		}

		public virtual void SetDefEntityEditValue() {
			var entityEditValue = new ProcessSchemaParameterValue() {
				DataValueType = (DataValueType)UserConnection.DataValueTypeManager.GetItemByName("Lookup").Instance,
				ReferenceSchemaUId = EntitySchemaUId
			};
			Page.EntityEdit.Value = entityEditValue;
			Page.AddScript(String.Format("{0}.defaultAvailableValueSources = ['ConstValue', 'Mapping', 'SystemValue', 'SystemSetting'];", Page.EntityEdit.ClientID));
			Page.AddScript(String.Format("{0}.setReferenceSchemaUId('{1}')", Page.EntityEdit.ClientID, EntitySchemaUId));
		}

		public virtual void UpdateEntityIdParameterValue() {
			ProcessSchemaParameterValue parameterValue = Page.EntityEdit.ParameterValue;
			parameterValue.ModifiedInSchemaUId = EditSchemaUId;
			parameterValue.ReferenceSchemaUId = EntitySchemaUId;
			parameterValue.Value = null;
			parameterValue.DisplayValue = null;
			parameterValue.Source = ProcessSchemaParameterValueSource.None;
			Page.EntityEdit.Value = parameterValue;
		}

		public virtual void RemoveElementFromGroup(Dictionary<string, object> item, string groupId) {
			object value;
			if ((string)item["controlEditType"] != "2"
					&& item.TryGetValue("groupId", out value) && value != null && (string)value == groupId) {
				item["groupId"] = null;
			}
		}

		public virtual void RemoveItem(List<Dictionary<string, object>> items, string itemId) {
			int idx = 0;
			bool isNotFound = true;
			foreach (Dictionary<string, object> item in items) {
				if ((string)item["Id"] == itemId) {
					break;
				}
				idx++;
				/*
				if (isNotFound) {
					if ((string)item["Id"] == itemId) {
						if ((string)item["controlEditType"] != "2") {
							break;
						}
						isNotFound = false;
					} else {
						RemoveElementFromGroup(item, itemId);
						idx++;
					}
					
				} else {
					RemoveElementFromGroup(item, itemId);
				}
				*/
			}
			items.RemoveAt(idx);
		}

		public virtual void SetEnabledButtonsTreeGridButtons() {
			int rowsCount = Page.ButtonsTreeGrid.DataSource.Rows.Count;
			bool hasRows = rowsCount > 0;
			bool hasManyRows = rowsCount > 1;
			Page.EditButton.SetEnabled(hasRows);
			Page.DeleteButton.SetEnabled(hasRows);
			Page.UpButton.SetEnabled(hasManyRows);
			Page.DownButton.SetEnabled(hasManyRows);
		}

		public virtual void SetEnabledElementsTreeGridButtons() {
			int rowsCount = Page.ElementsTreeGrid.DataSource.Rows.Count;
			bool hasRows = rowsCount > 0;
			bool hasManyRows = rowsCount > 1;
			Page.EditElementButton.SetEnabled(hasRows);
			Page.DeleteElementButton.SetEnabled(hasRows);
			Page.UpElementButton.SetEnabled(hasManyRows);
			Page.DownElementButton.SetEnabled(hasManyRows);
		}

		public override void ThrowEvent(ProcessExecutingContext context, string message) {
			switch(message) {
					case "AddElementButtonClick":
							if (ActivatedEventElements.Contains("AddElementButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("AddElementButtonClickStartMessage");
						}
						break;
					case "DeleteElementButtonClick":
							if (ActivatedEventElements.Contains("DeleteElementButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("DeleteElementButtonClickStartMessage");
						}
						break;
					case "EditElementButtonClick":
							if (ActivatedEventElements.Contains("EditElementButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("EditElementButtonClickStartMessage");
						}
						break;
					case "ElementsTreeGridDblClick":
							if (ActivatedEventElements.Contains("ElementsTreeGridDblClickStartMessage")) {
							context.QueueTasks.Enqueue("ElementsTreeGridDblClickStartMessage");
						}
						break;
					case "DownElementButtonClick":
							if (ActivatedEventElements.Contains("DownElementButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("DownElementButtonClickStartMessage");
						}
						break;
					case "UpElementButtonClick":
							if (ActivatedEventElements.Contains("UpElementButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("UpElementButtonClickStartMessage");
						}
						break;
					case "AddButtonClick":
							if (ActivatedEventElements.Contains("AddButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("AddButtonClickStartMessage");
						}
						break;
					case "DeleteButtonClick":
							if (ActivatedEventElements.Contains("DeleteButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("DeleteButtonClickStartMessage");
						}
						break;
					case "UpButtonClick":
							if (ActivatedEventElements.Contains("UpButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("UpButtonClickStartMessage");
						}
						break;
					case "DownButtonClick":
							if (ActivatedEventElements.Contains("DownButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("DownButtonClickStartMessage");
						}
						break;
					case "EditButtonClick":
							if (ActivatedEventElements.Contains("EditButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("EditButtonClickStartMessage");
						}
						break;
					case "ButtonsTreeGridDblClick":
							if (ActivatedEventElements.Contains("ButtonsTreeGridDblClickStartMessage")) {
							context.QueueTasks.Enqueue("ButtonsTreeGridDblClickStartMessage");
						}
						break;
					case "ClosedButtonSettingsEditPage":
							if (ActivatedEventElements.Contains("ClosedButtonSettingsEditPageStartMessage")) {
							context.QueueTasks.Enqueue("ClosedButtonSettingsEditPageStartMessage");
						}
						break;
					case "GroupEditButtonClick":
							if (ActivatedEventElements.Contains("GroupEditButtonClickStartMessage")) {
							context.QueueTasks.Enqueue("GroupEditButtonClickStartMessage");
						}
						break;
					case "ClientUnitSchemaeEditChange":
							if (ActivatedEventElements.Contains("ClientUnitSchemaeEditChangeStartMessage")) {
							context.QueueTasks.Enqueue("ClientUnitSchemaeEditChangeStartMessage");
						}
						break;
					case "EntitySchemaLookupEditChange":
							if (ActivatedEventElements.Contains("EntitySchemaLookupEditChangeStartMessage")) {
							context.QueueTasks.Enqueue("EntitySchemaLookupEditChangeStartMessage");
						}
						break;
					case "Init":
							if (ActivatedEventElements.Contains("InitStartMessage")) {
							context.QueueTasks.Enqueue("InitStartMessage");
							ProcessQueue(context);
							return;
						}
						break;
					case "PageLoadComplete":
							if (ActivatedEventElements.Contains("PageLoqdCompleteStartMessage")) {
							context.QueueTasks.Enqueue("PageLoqdCompleteStartMessage");
							ProcessQueue(context);
							return;
						}
						break;
					case "OkButtonClick":
							if (ActivatedEventElements.Contains("OkButtonClickPreconfiguredFormStartMessage")) {
							context.QueueTasks.Enqueue("OkButtonClickPreconfiguredFormStartMessage");
							ProcessQueue(context);
							return;
						}
						break;
					case "SourceTabPanelBeforeTabChange":
							if (ActivatedEventElements.Contains("SourceTabPanelBeforeTabChangeStartMessage")) {
							context.QueueTasks.Enqueue("SourceTabPanelBeforeTabChangeStartMessage");
						}
						break;
			}
			base.ThrowEvent(context, message);
			ProcessQueue(context);
		}

		public override void WritePropertiesData(DataWriter writer, bool writeFlowElements = true) {
			base.WritePropertiesData(writer, writeFlowElements);
			if (!HasMapping("ExtendedClientModule") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("ExtendedClientModule", ExtendedClientModule, null);
			}
			if (!HasMapping("IsButtonSettigs") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("IsButtonSettigs", IsButtonSettigs, null);
			}
			if (!HasMapping("ButtonSettingsVirtualDataSourceName") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("ButtonSettingsVirtualDataSourceName", ButtonSettingsVirtualDataSourceName, null);
			}
			if (!HasMapping("ControlSettingsVirtualDataSourceName") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("ControlSettingsVirtualDataSourceName", ControlSettingsVirtualDataSourceName, null);
			}
			if (!HasMapping("EditButtonSettingsContextKey") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("EditButtonSettingsContextKey", EditButtonSettingsContextKey, null);
			}
			if (!HasMapping("EditElementSettingsContextKey") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("EditElementSettingsContextKey", EditElementSettingsContextKey, null);
			}
			if (!HasMapping("EntitySchemaEditOldValue") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("EntitySchemaEditOldValue", EntitySchemaEditOldValue, Guid.Empty);
			}
			if (!HasMapping("EntitySchemaUId") || Status != Core.Process.ProcessStatus.Inactive) {
				writer.WriteValue("EntitySchemaUId", EntitySchemaUId, Guid.Empty);
			}
		}

		public override object CloneShallow() {
			return base.CloneShallow();
		}

		#endregion

	}

	#endregion

	#region Class: AutoGeneratedPageUserTaskParametersEditPageEventsProcess

	/// <exclude/>
	public class AutoGeneratedPageUserTaskParametersEditPageEventsProcess : AutoGeneratedPageUserTaskParametersEditPageEventsProcess<Terrasoft.WebApp.AutoGeneratedPageUserTaskParametersEditPageSchemaUserControl>
	{

		public AutoGeneratedPageUserTaskParametersEditPageEventsProcess(UserConnection userConnection)
			: base(userConnection) {
		}

	}

	#endregion

	#region Class: AutoGeneratedPageUserTaskParametersEditPageSchemaUserControl

	/// <exclude/>
	public partial class AutoGeneratedPageUserTaskParametersEditPageSchemaUserControl : Terrasoft.WebApp.BaseProcessParametersEditPageSchemaUserControl
	{

		#region Properties: Public

		public Terrasoft.UI.WebControls.Controls.TabPanel SourceTabPanel {
			get {
				return (Terrasoft.UI.WebControls.Controls.TabPanel)PageContainer.FindPageControl("SourceTabPanel", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Tab AutoGeneratedPageParametersTab {
			get {
				return (Terrasoft.UI.WebControls.Controls.Tab)PageContainer.FindPageControl("AutoGeneratedPageParametersTab", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.ControlLayout PageParametersControlLayout {
			get {
				return (Terrasoft.UI.WebControls.Controls.ControlLayout)PageContainer.FindPageControl("PageParametersControlLayout", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.TextEdit UserTaskTitleEdit {
			get {
				return (Terrasoft.UI.WebControls.Controls.TextEdit)PageContainer.FindPageControl("UserTaskTitleEdit", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.TextEdit TitleEditEdit {
			get {
				return (Terrasoft.UI.WebControls.Controls.TextEdit)PageContainer.FindPageControl("TitleEditEdit", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.MemoEdit RecommendationEdit {
			get {
				return (Terrasoft.UI.WebControls.Controls.MemoEdit)PageContainer.FindPageControl("RecommendationEdit", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.MemoEdit InformationOnStepMemoEdit {
			get {
				return (Terrasoft.UI.WebControls.Controls.MemoEdit)PageContainer.FindPageControl("InformationOnStepMemoEdit", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.LookupEdit EntitySchemaLookupEdit {
			get {
				return (Terrasoft.UI.WebControls.Controls.LookupEdit)PageContainer.FindPageControl("EntitySchemaLookupEdit", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.ProcessSchemaParameterValueEdit EntityEdit {
			get {
				return (Terrasoft.UI.WebControls.Controls.ProcessSchemaParameterValueEdit)PageContainer.FindPageControl("EntityEdit", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Label ButtonsLabel {
			get {
				return (Terrasoft.UI.WebControls.Controls.Label)PageContainer.FindPageControl("ButtonsLabel", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.ControlLayout ButtonsConfigControlLayout {
			get {
				return (Terrasoft.UI.WebControls.Controls.ControlLayout)PageContainer.FindPageControl("ButtonsConfigControlLayout", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.ControlLayout ButtonsControlLayout {
			get {
				return (Terrasoft.UI.WebControls.Controls.ControlLayout)PageContainer.FindPageControl("ButtonsControlLayout", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button AddButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("AddButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button EditButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("EditButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button DeleteButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("DeleteButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Spacer Spacer2 {
			get {
				return (Terrasoft.UI.WebControls.Controls.Spacer)PageContainer.FindPageControl("Spacer2", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button UpButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("UpButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button DownButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("DownButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.TreeGrid ButtonsTreeGrid {
			get {
				return (Terrasoft.UI.WebControls.Controls.TreeGrid)PageContainer.FindPageControl("ButtonsTreeGrid", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Label ElementsLabel {
			get {
				return (Terrasoft.UI.WebControls.Controls.Label)PageContainer.FindPageControl("ElementsLabel", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.ControlLayout ElementsControlLayout {
			get {
				return (Terrasoft.UI.WebControls.Controls.ControlLayout)PageContainer.FindPageControl("ElementsControlLayout", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.ControlLayout ButtonsControlLayout1 {
			get {
				return (Terrasoft.UI.WebControls.Controls.ControlLayout)PageContainer.FindPageControl("ButtonsControlLayout1", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button AddElementButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("AddElementButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button EditElementButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("EditElementButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button DeleteElementButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("DeleteElementButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Spacer Spacer3 {
			get {
				return (Terrasoft.UI.WebControls.Controls.Spacer)PageContainer.FindPageControl("Spacer3", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button GroupEditButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("GroupEditButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button UpElementButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("UpElementButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Button DownElementButton {
			get {
				return (Terrasoft.UI.WebControls.Controls.Button)PageContainer.FindPageControl("DownElementButton", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.TreeGrid ElementsTreeGrid {
			get {
				return (Terrasoft.UI.WebControls.Controls.TreeGrid)PageContainer.FindPageControl("ElementsTreeGrid", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.Tab SourceTab {
			get {
				return (Terrasoft.UI.WebControls.Controls.Tab)PageContainer.FindPageControl("SourceTab", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.ControlLayout SourceControlLayout {
			get {
				return (Terrasoft.UI.WebControls.Controls.ControlLayout)PageContainer.FindPageControl("SourceControlLayout", true);
			}
		}

		public Terrasoft.UI.WebControls.Controls.MemoEdit CodeSyntaxMemoEdit {
			get {
				return (Terrasoft.UI.WebControls.Controls.MemoEdit)PageContainer.FindPageControl("CodeSyntaxMemoEdit", true);
			}
		}

		#endregion

		#region Methods: Protected

		protected override void SubscribeOnControlEvents() {
			base.SubscribeOnControlEvents();
			SourceTabPanel.AjaxEvents.BeforeTabChange.Event += SourceTabPanelBeforeTabChange;
			EntitySchemaLookupEdit.AjaxEvents.Change.Event += EntitySchemaLookupEditChange;
			AddButton.AjaxEvents.Click.Event += AddButtonClick;
			EditButton.AjaxEvents.Click.Event += EditButtonClick;
			DeleteButton.AjaxEvents.Click.Event += DeleteButtonClick;
			UpButton.AjaxEvents.Click.Event += UpButtonClick;
			DownButton.AjaxEvents.Click.Event += DownButtonClick;
			ButtonsTreeGrid.AjaxEvents.DblClick.Event += ButtonsTreeGridDblClick;
			AddElementButton.AjaxEvents.Click.Event += AddElementButtonClick;
			EditElementButton.AjaxEvents.Click.Event += EditElementButtonClick;
			DeleteElementButton.AjaxEvents.Click.Event += DeleteElementButtonClick;
			GroupEditButton.AjaxEvents.Click.Event += GroupEditButtonClick;
			UpElementButton.AjaxEvents.Click.Event += UpElementButtonClick;
			DownElementButton.AjaxEvents.Click.Event += DownElementButtonClick;
			ElementsTreeGrid.AjaxEvents.DblClick.Event += ElementsTreeGridDblClick;
		}

		protected override void UnsubscribeOnControlEvents() {
			base.UnsubscribeOnControlEvents();
			SourceTabPanel.AjaxEvents.BeforeTabChange.Event -= SourceTabPanelBeforeTabChange;
			EntitySchemaLookupEdit.AjaxEvents.Change.Event -= EntitySchemaLookupEditChange;
			AddButton.AjaxEvents.Click.Event -= AddButtonClick;
			EditButton.AjaxEvents.Click.Event -= EditButtonClick;
			DeleteButton.AjaxEvents.Click.Event -= DeleteButtonClick;
			UpButton.AjaxEvents.Click.Event -= UpButtonClick;
			DownButton.AjaxEvents.Click.Event -= DownButtonClick;
			ButtonsTreeGrid.AjaxEvents.DblClick.Event -= ButtonsTreeGridDblClick;
			AddElementButton.AjaxEvents.Click.Event -= AddElementButtonClick;
			EditElementButton.AjaxEvents.Click.Event -= EditElementButtonClick;
			DeleteElementButton.AjaxEvents.Click.Event -= DeleteElementButtonClick;
			GroupEditButton.AjaxEvents.Click.Event -= GroupEditButtonClick;
			UpElementButton.AjaxEvents.Click.Event -= UpElementButtonClick;
			DownElementButton.AjaxEvents.Click.Event -= DownElementButtonClick;
			ElementsTreeGrid.AjaxEvents.DblClick.Event -= ElementsTreeGridDblClick;
		}

		protected override void InitializeEmbeddedProcess() {
			var instanceId = ((Terrasoft.UI.WebControls.Page)Page).InstanceId.ToString();
			string processUId = instanceId + PageContainer.UniqueID;
			var process = (AutoGeneratedPageUserTaskParametersEditPageEventsProcess)UserConnection.ProcessEngine.FindProcessByUId(processUId);
			if (process == null) {
				process = new AutoGeneratedPageUserTaskParametersEditPageEventsProcess(UserConnection);
				process.Page = this;
				Process = process;
				UserConnection.ProcessEngine.SetProcess(process);
				process.Execute(UserConnection);
				UserConnection.ProcessEngine.SetProcessPropertiesData(process);
			} else {
				process.InternalContext = new ProcessExecutingContext(UserConnection) {
					Process = process
				};
				process.Page = this;
				Process = process;
				UserConnection.ProcessEngine.SetProcess(process);
			}
		}

		protected override void InitializePageSchemaControls() {
			base.InitializePageSchemaControls();
			if (!PageContainer.IsDesignMode) {
					InitializeEmbeddedProcess();
				}
		}

		#endregion

		#region Methods: Public

		public virtual void SourceTabPanelBeforeTabChange(object sender, EventArgs e) {
			object result = ThrowEvent("SourceTabPanelBeforeTabChange");
		}

		public virtual void EntitySchemaLookupEditChange(object sender, EventArgs e) {
			object result = ThrowEvent("EntitySchemaLookupEditChange");
		}

		public virtual void AddButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("AddButtonClick");
		}

		public virtual void EditButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("EditButtonClick");
		}

		public virtual void DeleteButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("DeleteButtonClick");
		}

		public virtual void UpButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("UpButtonClick");
		}

		public virtual void DownButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("DownButtonClick");
		}

		public virtual void ButtonsTreeGridDblClick(object sender, EventArgs e) {
			object result = ThrowEvent("ButtonsTreeGridDblClick");
		}

		public virtual void AddElementButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("AddElementButtonClick");
		}

		public virtual void EditElementButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("EditElementButtonClick");
		}

		public virtual void DeleteElementButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("DeleteElementButtonClick");
		}

		public virtual void GroupEditButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("GroupEditButtonClick");
		}

		public virtual void UpElementButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("UpElementButtonClick");
		}

		public virtual void DownElementButtonClick(object sender, EventArgs e) {
			object result = ThrowEvent("DownElementButtonClick");
		}

		public virtual void ElementsTreeGridDblClick(object sender, EventArgs e) {
			object result = ThrowEvent("ElementsTreeGridDblClick");
		}

		public override void AddScript(string script) {
			this.ScriptManager.AddScript(script);
		}

		public override void RegisterClientScriptIncludeInternal(string key, string resourceName) {
			this.ScriptManager.RegisterClientScriptIncludeInternal(key, resourceName);
		}

		public override void RegisterClientScriptBlock(string key, string script) {
			this.ScriptManager.RegisterClientScriptBlock(key, script);
		}

		public override void SetSchemaName() {
			SchemaName = "AutoGeneratedPageUserTaskParametersEditPage";
		}

		#endregion

	}

	#endregion

	#region Class: AutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema

	/// <exclude/>
	public class AutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema : Terrasoft.WebApp.BaseProcessParametersEditPageEventsProcessSchema
	{

		#region Constructors: Public

		public AutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema(ProcessSchemaManager processSchemaManager, ProcessBasedSchema ownerSchema)
			: base(processSchemaManager, ownerSchema) {
		}

		public AutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema(AutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema source)
			: base(source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			Name = "AutoGeneratedPageUserTaskParametersEditPageEventsProcess";
			UId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b");
			CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59");
			CreatedInSchemaUId = Guid.Empty;
			CultureName = null;
			EntitySchemaUId = Guid.Empty;
			IsCreatedInSvg = true;
			IsInterpretable = true;
			ModifiedInSchemaUId = Guid.Empty;
			ParametersEditPageSchemaUId = Guid.Empty;
			ParentSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e");
			SequenceFlowStrokeDefColor = Color.FromArgb(-4473925);
			TaskFillDefColor = Color.FromArgb(-1);
			UsageType = ProcessSchemaUsageType.Advanced;
		}

		protected virtual ProcessSchemaParameter CreateEntitySchemaUIdParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("f97a7b05-7837-441d-aa34-1175a1ae382a"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EntitySchemaUId",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Guid"),
			};
		}

		protected virtual ProcessSchemaParameter CreateEntitySchemaEditOldValueParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("7591278d-e1d3-40a4-b22e-558afa4ead8a"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EntitySchemaEditOldValue",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Guid"),
			};
		}

		protected virtual ProcessSchemaParameter CreateEditElementSettingsContextKeyParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("2da07954-8da6-4d0a-a4cd-5d3ee8d512d7"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditElementSettingsContextKey",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("ShortText"),
			};
		}

		protected virtual ProcessSchemaParameter CreateEditButtonSettingsContextKeyParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("b0787d4c-6163-4d4b-9baf-88f04cbdde9b"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditButtonSettingsContextKey",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("ShortText"),
			};
		}

		protected virtual ProcessSchemaParameter CreateControlSettingsVirtualDataSourceNameParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("e7bd33be-7a05-4305-8264-5991cc007e54"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ControlSettingsVirtualDataSourceName",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("MediumText"),
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.ConstValue,
					MetaPath = null,
					ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				},
			};
		}

		protected virtual ProcessSchemaParameter CreateButtonSettingsVirtualDataSourceNameParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("91008265-3381-4014-a5ff-6739208bd403"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ButtonSettingsVirtualDataSourceName",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("MediumText"),
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.ConstValue,
					MetaPath = null,
					ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				},
			};
		}

		protected virtual ProcessSchemaParameter CreateIsButtonSettigsParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("d371671e-287a-46f0-b5d8-1402de588a3a"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"IsButtonSettigs",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("ShortText"),
			};
		}

		protected virtual ProcessSchemaParameter CreateExtendedClientModuleParameter() {
			return new ProcessSchemaParameter(this) {
			UId = new Guid("d1eff887-1e18-4420-9677-3aa30adacd13"),
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ExtendedClientModule",
				SourceParameterUId = Guid.Empty,
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("MaxSizeText"),
			};
		}

		protected override void InitializeParameters() {
			base.InitializeParameters();
			Parameters.Add(CreateEntitySchemaUIdParameter());
			Parameters.Add(CreateEntitySchemaEditOldValueParameter());
			Parameters.Add(CreateEditElementSettingsContextKeyParameter());
			Parameters.Add(CreateEditButtonSettingsContextKeyParameter());
			Parameters.Add(CreateControlSettingsVirtualDataSourceNameParameter());
			Parameters.Add(CreateButtonSettingsVirtualDataSourceNameParameter());
			Parameters.Add(CreateIsButtonSettigsParameter());
			Parameters.Add(CreateExtendedClientModuleParameter());
		}

		protected virtual void InitializeOpenAddButtonElementPageUserTaskParameters(IParametrizedProcessSchemaElement parametrizedElement) {
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("eef8ad6e-08db-4a79-9460-d0fb3639525f"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"PageUId",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Guid"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("97c960d8-a7e1-41a0-aeab-0c35b55e9722"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"PageUrl",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Text"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("2f63627a-9153-4b13-af5c-d0b9f75cdd28"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"OpenerInstanceId",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Text"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("f0c8dbc3-c336-485d-acc5-5c7a77056862"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"CloseOpenerOnLoad",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("a64f3510-c8dc-46d0-a869-c40c187f7683"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"PageParameters",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Object"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("216cdce3-f8dc-4425-8dc1-03e04a531feb"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"Width",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Integer"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("0941903c-5be9-4155-a847-188ba8585bab"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"CloseMessage",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Text"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("647b787b-213e-4fd9-ba87-bfb8c96fd011"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"Height",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Integer"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("1388c2e2-739c-439a-914f-96d1f658359c"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"Centered",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Object"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("fbcff65f-0843-4065-883f-58d692190ff7"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"UseOpenerRegisterScript",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("203e0721-c16c-44fa-bf12-a418ce10ab00"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"UseCurrentActivePage",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("59b3072d-b1c3-4fe1-bd96-b96ac9c332b0"),
				ContainerUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"IgnoreProfile",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = @"",
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
		}

		protected virtual void InitializeOpenGroupOfElementsEditPageUserTaskParameters(IParametrizedProcessSchemaElement parametrizedElement) {
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("7b94b6da-d77d-4113-8ed3-59ea076c3f2b"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"PageUId",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Guid"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("4c8b4307-f585-4674-9ce5-91671979c2ef"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"PageUrl",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Text"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("8e68a6a5-61c6-47e9-8fe3-80b64cd2ae2d"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"OpenerInstanceId",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Text"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("0bb12d4d-e1b5-4dc6-b379-44888f4eef8d"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"CloseOpenerOnLoad",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("9544b63d-225d-4380-9154-90f0b5f5fe5f"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"PageParameters",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Object"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("706874a3-7fb8-4dc2-a6c5-a038d2693bb8"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"Width",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Integer"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("996dcb79-b72b-41b2-af9b-197627704f19"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"CloseMessage",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Text"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("bf29b9b9-b769-4836-a619-5b15ce216e6c"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"Height",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Integer"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("c43c64cd-82c5-4b42-86dd-7e053e3acf54"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"Centered",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Object"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("90160278-4fc1-4593-8e7c-cbb30f54210f"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"UseOpenerRegisterScript",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("75e8f9ec-f8a6-4765-9a0d-f498c7789796"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"UseCurrentActivePage",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = null,
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
			parametrizedElement.Parameters.Add(new ProcessSchemaParameter(this) {
				UId = new Guid("883c9294-69b8-463b-b453-4505e8d0fea5"),
				ContainerUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = Guid.Empty,
				CreatedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Direction = ProcessSchemaParameterDirection.Variable,
				IsCopyValue = false,
				IsLazy = false,
				IsPerformer = false,
				IsRequired = false,
				IsResult = false,
				IsValueSerializable = true,
				ModifiedInSchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				Name = @"IgnoreProfile",
				SourceParameterUId = Guid.Empty,
				SourceValue = new ProcessSchemaParameterValue() {
					Source = ProcessSchemaParameterValueSource.None,
					Value = @"",
					MetaPath = null,
				},
				Tag = @"",
				UseBackgroundMode = false,
				DataValueType = DataValueTypeManager.GetInstanceByName("Boolean"),
			});
		}

		protected override void InitializeBaseElements() {
			base.InitializeBaseElements();
			ProcessSchemaLaneSet schemaLaneSetPreconfiguredForm = CreateLaneSetPreconfiguredFormLaneSet();
			LaneSets.Add(schemaLaneSetPreconfiguredForm);
			ProcessSchemaLane schemaAutoGeneratedPageLane2 = CreateAutoGeneratedPageLane2Lane();
			schemaLaneSetPreconfiguredForm.Lanes.Add(schemaAutoGeneratedPageLane2);
			ProcessSchemaEventSubProcess addelementbuttonclickeventsubprocess = CreateAddElementButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(addelementbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess deleteelementbuttonclickeventsubprocess = CreateDeleteElementButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(deleteelementbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess editelementbuttonclickeventsubprocess = CreateEditElementButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(editelementbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess downelementbuttonclickeventsubprocess = CreateDownElementButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(downelementbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess upelementbuttonclickeventsubprocess = CreateUpElementButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(upelementbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess addbuttonclickeventsubprocess = CreateAddButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(addbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess eventsubprocess4 = CreateEventSubProcess4EventSubProcess();
			FlowElements.Add(eventsubprocess4);
			ProcessSchemaEventSubProcess upbuttonclickeventsubprocess = CreateUpButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(upbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess downbuttonclickeventsubprocess = CreateDownButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(downbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess editbuttonclickeventsubprocess = CreateEditButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(editbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess eventsubprocess2 = CreateEventSubProcess2EventSubProcess();
			FlowElements.Add(eventsubprocess2);
			ProcessSchemaEventSubProcess groupeditbuttonclickeventsubprocess = CreateGroupEditButtonClickEventSubProcessEventSubProcess();
			FlowElements.Add(groupeditbuttonclickeventsubprocess);
			ProcessSchemaEventSubProcess clientunitschemaeeditchangeeventsubprocess = CreateClientUnitSchemaeEditChangeEventSubProcessEventSubProcess();
			FlowElements.Add(clientunitschemaeeditchangeeventsubprocess);
			ProcessSchemaEventSubProcess entityschemalookupeditchangeeventsubprocess = CreateEntitySchemaLookupEditChangeEventSubProcessEventSubProcess();
			FlowElements.Add(entityschemalookupeditchangeeventsubprocess);
			ProcessSchemaEventSubProcess eventsubprocesspreconfiguredforminit = CreateEventSubProcessPreconfiguredFormInitEventSubProcess();
			FlowElements.Add(eventsubprocesspreconfiguredforminit);
			ProcessSchemaEventSubProcess pageloadcompleteeventsubprocess = CreatePageLoadCompleteEventSubProcessEventSubProcess();
			FlowElements.Add(pageloadcompleteeventsubprocess);
			ProcessSchemaEventSubProcess eventsubprocesspressedbuttonok = CreateEventSubProcessPressedButtonOKEventSubProcess();
			FlowElements.Add(eventsubprocesspressedbuttonok);
			ProcessSchemaEventSubProcess sourcetabpanelbeforetabchangeeventsubprocess = CreateSourceTabPanelBeforeTabChangeEventSubProcessEventSubProcess();
			FlowElements.Add(sourcetabpanelbeforetabchangeeventsubprocess);
			ProcessSchemaStartMessageEvent addelementbuttonclickstartmessage = CreateAddElementButtonClickStartMessageStartMessageEvent();
			addelementbuttonclickeventsubprocess.FlowElements.Add(addelementbuttonclickstartmessage);
			ProcessSchemaScriptTask addelementbuttonclickscripttask = CreateAddElementButtonClickScriptTaskScriptTask();
			addelementbuttonclickeventsubprocess.FlowElements.Add(addelementbuttonclickscripttask);
			ProcessSchemaStartMessageEvent deleteelementbuttonclickstartmessage = CreateDeleteElementButtonClickStartMessageStartMessageEvent();
			deleteelementbuttonclickeventsubprocess.FlowElements.Add(deleteelementbuttonclickstartmessage);
			ProcessSchemaScriptTask deleteelementbuttonclickscripttask = CreateDeleteElementButtonClickScriptTaskScriptTask();
			deleteelementbuttonclickeventsubprocess.FlowElements.Add(deleteelementbuttonclickscripttask);
			ProcessSchemaStartMessageEvent editelementbuttonclickstartmessage = CreateEditElementButtonClickStartMessageStartMessageEvent();
			editelementbuttonclickeventsubprocess.FlowElements.Add(editelementbuttonclickstartmessage);
			ProcessSchemaScriptTask editelementbuttonclickscripttask = CreateEditElementButtonClickScriptTaskScriptTask();
			editelementbuttonclickeventsubprocess.FlowElements.Add(editelementbuttonclickscripttask);
			ProcessSchemaStartMessageEvent elementstreegriddblclickstartmessage = CreateElementsTreeGridDblClickStartMessageStartMessageEvent();
			editelementbuttonclickeventsubprocess.FlowElements.Add(elementstreegriddblclickstartmessage);
			ProcessSchemaStartMessageEvent downelementbuttonclickstartmessage = CreateDownElementButtonClickStartMessageStartMessageEvent();
			downelementbuttonclickeventsubprocess.FlowElements.Add(downelementbuttonclickstartmessage);
			ProcessSchemaScriptTask downelementbuttonclickscripttask = CreateDownElementButtonClickScriptTaskScriptTask();
			downelementbuttonclickeventsubprocess.FlowElements.Add(downelementbuttonclickscripttask);
			ProcessSchemaStartMessageEvent upelementbuttonclickstartmessage = CreateUpElementButtonClickStartMessageStartMessageEvent();
			upelementbuttonclickeventsubprocess.FlowElements.Add(upelementbuttonclickstartmessage);
			ProcessSchemaScriptTask upelementbuttonclickscripttask = CreateUpElementButtonClickScriptTaskScriptTask();
			upelementbuttonclickeventsubprocess.FlowElements.Add(upelementbuttonclickscripttask);
			ProcessSchemaStartMessageEvent addbuttonclickstartmessage = CreateAddButtonClickStartMessageStartMessageEvent();
			addbuttonclickeventsubprocess.FlowElements.Add(addbuttonclickstartmessage);
			ProcessSchemaScriptTask addbuttonclickscripttask = CreateAddButtonClickScriptTaskScriptTask();
			addbuttonclickeventsubprocess.FlowElements.Add(addbuttonclickscripttask);
			ProcessSchemaUserTask openaddbuttonelementpageusertask = CreateOpenAddButtonElementPageUserTaskUserTask();
			addbuttonclickeventsubprocess.FlowElements.Add(openaddbuttonelementpageusertask);
			ProcessSchemaStartMessageEvent deletebuttonclickstartmessage = CreateDeleteButtonClickStartMessageStartMessageEvent();
			eventsubprocess4.FlowElements.Add(deletebuttonclickstartmessage);
			ProcessSchemaScriptTask deletebuttonclickscripttask = CreateDeleteButtonClickScriptTaskScriptTask();
			eventsubprocess4.FlowElements.Add(deletebuttonclickscripttask);
			ProcessSchemaStartMessageEvent upbuttonclickstartmessage = CreateUpButtonClickStartMessageStartMessageEvent();
			upbuttonclickeventsubprocess.FlowElements.Add(upbuttonclickstartmessage);
			ProcessSchemaScriptTask upbuttonclickscripttask = CreateUpButtonClickScriptTaskScriptTask();
			upbuttonclickeventsubprocess.FlowElements.Add(upbuttonclickscripttask);
			ProcessSchemaStartMessageEvent downbuttonclickstartmessage = CreateDownButtonClickStartMessageStartMessageEvent();
			downbuttonclickeventsubprocess.FlowElements.Add(downbuttonclickstartmessage);
			ProcessSchemaScriptTask downbuttonclickscripttask = CreateDownButtonClickScriptTaskScriptTask();
			downbuttonclickeventsubprocess.FlowElements.Add(downbuttonclickscripttask);
			ProcessSchemaStartMessageEvent editbuttonclickstartmessage = CreateEditButtonClickStartMessageStartMessageEvent();
			editbuttonclickeventsubprocess.FlowElements.Add(editbuttonclickstartmessage);
			ProcessSchemaScriptTask editbuttonclickscripttask = CreateEditButtonClickScriptTaskScriptTask();
			editbuttonclickeventsubprocess.FlowElements.Add(editbuttonclickscripttask);
			ProcessSchemaStartMessageEvent buttonstreegriddblclickstartmessage = CreateButtonsTreeGridDblClickStartMessageStartMessageEvent();
			editbuttonclickeventsubprocess.FlowElements.Add(buttonstreegriddblclickstartmessage);
			ProcessSchemaStartMessageEvent closedbuttonsettingseditpagestartmessage = CreateClosedButtonSettingsEditPageStartMessageStartMessageEvent();
			eventsubprocess2.FlowElements.Add(closedbuttonsettingseditpagestartmessage);
			ProcessSchemaScriptTask closedbuttonsettingseditpagescripttask = CreateClosedButtonSettingsEditPageScriptTaskScriptTask();
			eventsubprocess2.FlowElements.Add(closedbuttonsettingseditpagescripttask);
			ProcessSchemaStartMessageEvent groupeditbuttonclickstartmessage = CreateGroupEditButtonClickStartMessageStartMessageEvent();
			groupeditbuttonclickeventsubprocess.FlowElements.Add(groupeditbuttonclickstartmessage);
			ProcessSchemaScriptTask groupeditbuttonclickscripttask = CreateGroupEditButtonClickScriptTaskScriptTask();
			groupeditbuttonclickeventsubprocess.FlowElements.Add(groupeditbuttonclickscripttask);
			ProcessSchemaUserTask opengroupofelementseditpageusertask = CreateOpenGroupOfElementsEditPageUserTaskUserTask();
			groupeditbuttonclickeventsubprocess.FlowElements.Add(opengroupofelementseditpageusertask);
			ProcessSchemaStartMessageEvent clientunitschemaeeditchangestartmessage = CreateClientUnitSchemaeEditChangeStartMessageStartMessageEvent();
			clientunitschemaeeditchangeeventsubprocess.FlowElements.Add(clientunitschemaeeditchangestartmessage);
			ProcessSchemaScriptTask clientunitschemaeeditchangescripttask = CreateClientUnitSchemaeEditChangeScriptTaskScriptTask();
			clientunitschemaeeditchangeeventsubprocess.FlowElements.Add(clientunitschemaeeditchangescripttask);
			ProcessSchemaStartMessageEvent entityschemalookupeditchangestartmessage = CreateEntitySchemaLookupEditChangeStartMessageStartMessageEvent();
			entityschemalookupeditchangeeventsubprocess.FlowElements.Add(entityschemalookupeditchangestartmessage);
			ProcessSchemaScriptTask entityschemalookupeditchangescripttask = CreateEntitySchemaLookupEditChangeScriptTaskScriptTask();
			entityschemalookupeditchangeeventsubprocess.FlowElements.Add(entityschemalookupeditchangescripttask);
			ProcessSchemaStartMessageEvent initstartmessage = CreateInitStartMessageStartMessageEvent();
			eventsubprocesspreconfiguredforminit.FlowElements.Add(initstartmessage);
			ProcessSchemaIntermediateThrowMessageEvent initintermediatethrowmessageevent = CreateInitIntermediateThrowMessageEventIntermediateThrowMessageEvent();
			eventsubprocesspreconfiguredforminit.FlowElements.Add(initintermediatethrowmessageevent);
			ProcessSchemaScriptTask initscripttask = CreateInitScriptTaskScriptTask();
			eventsubprocesspreconfiguredforminit.FlowElements.Add(initscripttask);
			ProcessSchemaStartMessageEvent pageloqdcompletestartmessage = CreatePageLoqdCompleteStartMessageStartMessageEvent();
			pageloadcompleteeventsubprocess.FlowElements.Add(pageloqdcompletestartmessage);
			ProcessSchemaIntermediateThrowMessageEvent pageloqdcompleteintermediatethrowmessageevent = CreatePageLoqdCompleteIntermediateThrowMessageEventIntermediateThrowMessageEvent();
			pageloadcompleteeventsubprocess.FlowElements.Add(pageloqdcompleteintermediatethrowmessageevent);
			ProcessSchemaScriptTask pageloadcompletescripttask = CreatePageLoadCompleteScriptTaskScriptTask();
			pageloadcompleteeventsubprocess.FlowElements.Add(pageloadcompletescripttask);
			ProcessSchemaStartMessageEvent okbuttonclickpreconfiguredformstartmessage = CreateOkButtonClickPreconfiguredFormStartMessageStartMessageEvent();
			eventsubprocesspressedbuttonok.FlowElements.Add(okbuttonclickpreconfiguredformstartmessage);
			ProcessSchemaScriptTask okbuttonclickpreconfiguredformscripttask = CreateOkButtonClickPreconfiguredFormScriptTaskScriptTask();
			eventsubprocesspressedbuttonok.FlowElements.Add(okbuttonclickpreconfiguredformscripttask);
			ProcessSchemaIntermediateThrowMessageEvent okbuttonclickintermediatethrowmessageevent = CreateOkButtonClickIntermediateThrowMessageEventIntermediateThrowMessageEvent();
			eventsubprocesspressedbuttonok.FlowElements.Add(okbuttonclickintermediatethrowmessageevent);
			ProcessSchemaStartMessageEvent sourcetabpanelbeforetabchangestartmessage = CreateSourceTabPanelBeforeTabChangeStartMessageStartMessageEvent();
			sourcetabpanelbeforetabchangeeventsubprocess.FlowElements.Add(sourcetabpanelbeforetabchangestartmessage);
			ProcessSchemaScriptTask sourcetabpanelbeforetabchangescripttask = CreateSourceTabPanelBeforeTabChangeScriptTaskScriptTask();
			sourcetabpanelbeforetabchangeeventsubprocess.FlowElements.Add(sourcetabpanelbeforetabchangescripttask);
			FlowElements.Add(CreateSequenceFlow1SequenceFlow());
			FlowElements.Add(CreateSequenceFlow2SequenceFlow());
			FlowElements.Add(CreateSequenceFlow3SequenceFlow());
			FlowElements.Add(CreateSequenceFlow4SequenceFlow());
			FlowElements.Add(CreateSequenceFlow6SequenceFlow());
			FlowElements.Add(CreateSequenceFlow7SequenceFlow());
			FlowElements.Add(CreateSequenceFlow8SequenceFlow());
			FlowElements.Add(CreateSequenceFlow9SequenceFlow());
			FlowElements.Add(CreateSequenceFlow10SequenceFlow());
			FlowElements.Add(CreateSequenceFlow11SequenceFlow());
			FlowElements.Add(CreateSequenceFlow12SequenceFlow());
			FlowElements.Add(CreateSequenceFlow13SequenceFlow());
			FlowElements.Add(CreateSequenceFlow14SequenceFlow());
			FlowElements.Add(CreateSequenceFlow15SequenceFlow());
			FlowElements.Add(CreateSequenceFlow16SequenceFlow());
			FlowElements.Add(CreateSequenceFlow17SequenceFlow());
			FlowElements.Add(CreateSequenceFlow18SequenceFlow());
			FlowElements.Add(CreateSequenceFlow21SequenceFlow());
			FlowElements.Add(CreateSequenceFlow23SequenceFlow());
			FlowElements.Add(CreateSequenceFlow19SequenceFlow());
			FlowElements.Add(CreateSequenceFlow20SequenceFlow());
			FlowElements.Add(CreateSequenceFlow24SequenceFlow());
			FlowElements.Add(CreateSequenceFlow25SequenceFlow());
			FlowElements.Add(CreateSequenceFlow5SequenceFlow());
			FlowElements.Add(CreateSequenceFlow22SequenceFlow());
			FlowElements.Add(CreateSequenceFlow26SequenceFlow());
			FlowElements.Add(CreateSequenceFlow27SequenceFlow());
			FlowElements.Add(CreateSequenceFlow28SequenceFlow());
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateCaptionColumnCaptionLocalizableString());
			LocalizableStrings.Add(CreateNameColumnCaptionLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateCaptionColumnCaptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("78f0bf77-64d3-4784-aada-240062bfd936"),
				Name = "CaptionColumnCaption",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b")
			};
			return localizableString;
		}

		protected virtual SchemaLocalizableString CreateNameColumnCaptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("795ec7e2-03ca-4229-9824-bd861d824485"),
				Name = "NameColumnCaption",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b")
			};
			return localizableString;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow1SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow1",
				UId = new Guid("f304776c-9000-4f65-866b-d54acd1d4933"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(168, 93),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("485786b7-a3e1-42ee-8752-2f0f252e9252"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("18d3af5f-055c-4304-ba51-6f911f24bd5c"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow2SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow2",
				UId = new Guid("92ec41fd-df16-426d-aded-8c4ea054e137"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(281, 92),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("18d3af5f-055c-4304-ba51-6f911f24bd5c"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("20f367b1-c524-4fb9-99f5-0cbb94641ec4"),
				TargetSequenceFlowPointLocalPosition = new Point(-1, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow3SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow3",
				UId = new Guid("17ebc09e-b3b6-4398-b363-cc3c47b50369"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(172, 304),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("909f1dcc-eceb-43a4-8b9f-840ea80df3a1"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("6214c098-3b9b-45d2-8a29-cda92a00139c"),
				TargetSequenceFlowPointLocalPosition = new Point(-1, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow4SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow4",
				UId = new Guid("06624260-e37d-4153-94c2-bf28788a8fdb"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(315, 302),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("6214c098-3b9b-45d2-8a29-cda92a00139c"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("6c718c71-90c8-4de1-8503-d242f3c5d765"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow6SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow6",
				UId = new Guid("98b4c389-a79d-47a7-8ef3-aecb2d1688e0"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(604, 268),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("33de6576-bc52-4dda-95dc-2c87ef03f248"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("bb723294-caf2-4f95-8f08-d74dbca15f34"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow7SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow7",
				UId = new Guid("6f60476a-8efa-4cba-8643-cb1ad3c410c8"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(512, 266),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("ba0d9eed-c5a9-4aca-af0c-05cb0a662bad"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("33de6576-bc52-4dda-95dc-2c87ef03f248"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow8SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow8",
				UId = new Guid("3fd280ec-4dbc-438a-84ef-fba010001adf"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("bd5c23d1-eefe-4712-bf6f-719f5589b54b"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("b1e7dc97-0c9c-4ab8-93eb-183dbcc82447"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow9SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow9",
				UId = new Guid("97c87cc4-2dbf-45dd-81b1-97f824e90e7a"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("f860e50a-76ac-4330-9327-8c0e81f93975"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("bfc0c229-76b7-47f9-b681-634c2cb938a1"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow10SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow10",
				UId = new Guid("7ee7cc46-5567-467d-9398-1dca50a919d2"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("d5568cae-fded-47b1-9a5a-de9ed27a388f"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("613de7bc-e5b9-479a-87c8-52ce8ee90cfc"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow11SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow11",
				UId = new Guid("6bf6d8e1-2d56-4009-9bc7-1cc834309bb6"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("157efaee-6af9-4271-9415-c0f5f645723a"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("526dbaa0-7c39-4fe8-a9fd-f0120fcf2511"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow12SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow12",
				UId = new Guid("ab2280e3-88c8-4bdb-a0ae-c1b1ea2f45f3"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("b8a683a6-b6af-45eb-a967-3f6644215f73"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("9d7fe0cd-d8e1-47ca-b238-cb6d398b6b29"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow13SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow13",
				UId = new Guid("f4a88e2c-349b-4ae4-8384-964398f3312b"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("e7158616-a5e8-4f7e-8c88-37f40a92d262"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("0d6fde80-bffb-4fa7-84a2-29ec0d42656f"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow14SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow14",
				UId = new Guid("bc657762-542e-4a25-8a7d-829702b5bedb"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("6758b087-4cd5-4f5d-b07e-cd5a1e32b96d"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("fbddd709-4f48-432e-8345-bf9aa05a7157"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow15SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow15",
				UId = new Guid("c74f808a-4487-4f5b-8c2a-dca5a57bb053"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("ba64cb51-e5f5-4332-a732-e28851372170"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("16f17f2f-5801-4877-9935-f3654ec9b8f3"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow16SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow16",
				UId = new Guid("ec10786b-d4e4-4f46-be4c-a632fea1f43e"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("923fcc38-5f0b-4076-ab4c-3ecf79f3fe21"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("ea0c7345-5339-4547-8134-2c526a0fcfe7"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow17SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow17",
				UId = new Guid("dadbdac9-5756-4e97-a1e8-7e866e5fb73d"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("f9203641-5806-45d8-9783-45638896912b"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("063b73ec-da7f-45db-95ef-ba56b7768679"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow18SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow18",
				UId = new Guid("0acd1568-890e-4093-93c0-11aaedbab632"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("6fea9f9c-78fd-4c67-8cdb-0eed98bcebdd"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("11a23f25-f75c-4025-9c18-f97a903a7ff0"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow21SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow21",
				UId = new Guid("6f09ea8f-f107-4131-a099-3240be5c61d5"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(301, 415),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("bfc0c229-76b7-47f9-b681-634c2cb938a1"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				TargetSequenceFlowPointLocalPosition = new Point(-1, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow23SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow23",
				UId = new Guid("95047ebd-df07-42fc-9a8b-af5a6f47b277"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(819, 578),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("3a51268e-904d-4cf4-b60a-f6cbe10c04bc"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("d7088813-436b-4a51-8607-f8c6a0e47195"),
				TargetSequenceFlowPointLocalPosition = new Point(-1, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow19SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow19",
				UId = new Guid("f830da8f-1102-457f-9e64-62e4d5333c33"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(314, 268),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("9d7fe0cd-d8e1-47ca-b238-cb6d398b6b29"),
				SourceSequenceFlowPointLocalPosition = new Point(1, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				TargetSequenceFlowPointLocalPosition = new Point(1, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow20SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow20",
				UId = new Guid("b5927c22-4623-47c0-aa28-645e6279688b"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(296, 334),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("0d6fde80-bffb-4fa7-84a2-29ec0d42656f"),
				SourceSequenceFlowPointLocalPosition = new Point(1, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 1),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow24SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow24",
				UId = new Guid("fe6e5106-0354-4e9e-b65b-a6438ff930c2"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("9163f05d-e8fa-4c36-ae0e-964b6a59cf41"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("d2f15914-fb81-44dc-88ee-3e516b843e1c"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow25SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow25",
				UId = new Guid("dd8a50e0-c8e8-49bb-aa6d-14750576753d"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(183, 258),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("52db3d4e-7fa3-496d-be84-8402cb78610e"),
				SourceSequenceFlowPointLocalPosition = new Point(1, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("0d6fde80-bffb-4fa7-84a2-29ec0d42656f"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 1),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow5SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow5",
				UId = new Guid("66f35497-f5c1-4ec9-bad7-08abc7eedc8b"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(180, 672),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("2e655a9d-43b2-4982-9410-6b0503f9e478"),
				SourceSequenceFlowPointLocalPosition = new Point(1, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("613de7bc-e5b9-479a-87c8-52ce8ee90cfc"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 1),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow22SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow22",
				UId = new Guid("c9efdd20-33c5-4847-a20e-dcce2eb0e949"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(296, 608),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("613de7bc-e5b9-479a-87c8-52ce8ee90cfc"),
				SourceSequenceFlowPointLocalPosition = new Point(1, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				TargetSequenceFlowPointLocalPosition = new Point(0, -1),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow26SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow26",
				UId = new Guid("76b69385-68e2-4efd-9cd6-1614f18ed9a8"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("3cb88234-c1c5-460a-a993-5f20f7055587"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("efd5b6de-9be6-4f32-9079-185fefc846b0"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow27SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow27",
				UId = new Guid("a09b92fe-f51f-4bf7-aca7-4c49debad8de"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(380, 188),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Size = new Size(0, 0),
				SourceRefUId = new Guid("de4b0675-0121-4a16-98c7-64b315dc0ec0"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("156c761e-2db4-48da-b6e5-030a73a990be"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaSequenceFlow CreateSequenceFlow28SequenceFlow() {
			ProcessSchemaSequenceFlow schemaFlow = new ProcessSchemaSequenceFlow(this, ProcessSchemaEditSequenceFlowType.Sequence) {
				Name = "SequenceFlow28",
				UId = new Guid("0b0eda21-af3a-4fb8-80ef-caaeab326957"),
				ContainerItemIndex = 0,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CurveCenterPosition = new Point(697, 886),
				DragGroupName = @"SequenceFlow",
				FlowType = ProcessSchemaEditSequenceFlowType.Sequence,
				ManagerItemUId = new Guid("0d8351f6-c2f4-4737-bdd9-6fbfe0837fec"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				OwnerSchemaManagerName = @"PageSchemaManager",
				Size = new Size(0, 0),
				SourceRefUId = new Guid("156c761e-2db4-48da-b6e5-030a73a990be"),
				SourceSequenceFlowPointLocalPosition = new Point(0, 0),
				StrokeColor = Color.FromArgb(-7105128),
				TargetRefUId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				TargetSequenceFlowPointLocalPosition = new Point(0, 0),
				UseBackgroundMode = false,
				VisualType = ProcessSchemaSequenceFlowVisualType.AutoPolyline
			};
			return schemaFlow;
		}

		protected virtual ProcessSchemaLaneSet CreateLaneSetPreconfiguredFormLaneSet() {
			ProcessSchemaLaneSet schemaLaneSetPreconfiguredForm = new ProcessSchemaLaneSet(this) {
				UId = new Guid("faa703d5-085e-4dc2-83ff-3d8d50c7527e"),
				ContainerItemIndex = 1,
				ContainerUId = Guid.Empty,
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = ProcessSchemaPoolDirectionType.Vertical,
				DragGroupName = @"LaneSet",
				ManagerItemUId = new Guid("11a47caf-a0d5-41fa-a274-a0b11f77447a"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"LaneSetPreconfiguredForm",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(5, 5),
				Size = new Size(958, 491),
				UseBackgroundMode = false
			};
			return schemaLaneSetPreconfiguredForm;
		}

		protected virtual ProcessSchemaLane CreateAutoGeneratedPageLane2Lane() {
			ProcessSchemaLane schemaAutoGeneratedPageLane2 = new ProcessSchemaLane(this) {
				UId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				ContainerItemIndex = 1,
				ContainerUId = new Guid("faa703d5-085e-4dc2-83ff-3d8d50c7527e"),
				CreatedInOwnerSchemaUId = Guid.Empty,
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Lane",
				ManagerItemUId = new Guid("abcd74b9-5912-414b-82ac-f1aa4dcd554e"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"AutoGeneratedPageLane2",
				Position = new Point(29, 0),
				Size = new Size(929, 491),
				UseBackgroundMode = false
			};
			return schemaAutoGeneratedPageLane2;
		}

		protected virtual ProcessSchemaEventSubProcess CreateAddElementButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaAddElementButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("4f2feb74-110f-4592-8873-819fc6ec32ce"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"AddElementButtonClickEventSubProcess",
				Position = new Point(36, 100),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(361, 137),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaAddElementButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateAddElementButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("b8a683a6-b6af-45eb-a967-3f6644215f73"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("4f2feb74-110f-4592-8873-819fc6ec32ce"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"AddElementButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"AddElementButtonClickStartMessage",
				Position = new Point(29, 51),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateAddElementButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("9d7fe0cd-d8e1-47ca-b238-cb6d398b6b29"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("4f2feb74-110f-4592-8873-819fc6ec32ce"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"AddElementButtonClickScriptTask",
				Position = new Point(134, 37),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,85,206,65,10,194,64,12,133,225,181,133,222,33,116,165,48,120,129,226,66,165,72,113,83,208,11,20,250,28,2,99,166,36,41,232,237,101,138,46,92,62,248,126,120,189,157,22,247,44,55,184,115,52,58,80,243,24,147,161,105,235,74,225,139,10,29,205,56,202,160,121,134,58,195,206,89,92,115,90,11,137,214,77,236,195,24,177,93,187,64,101,119,9,79,136,255,72,41,240,242,43,222,161,174,54,5,239,191,194,238,10,92,148,167,64,253,255,147,93,251,1,44,176,66,127,155,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateDeleteElementButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaDeleteElementButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("2f010301-320b-4679-8af4-30099dcc64e9"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DeleteElementButtonClickEventSubProcess",
				Position = new Point(414, 170),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(245, 137),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaDeleteElementButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateDeleteElementButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("6758b087-4cd5-4f5d-b07e-cd5a1e32b96d"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("2f010301-320b-4679-8af4-30099dcc64e9"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"DeleteElementButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DeleteElementButtonClickStartMessage",
				Position = new Point(36, 51),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateDeleteElementButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("fbddd709-4f48-432e-8345-bf9aa05a7157"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("2f010301-320b-4679-8af4-30099dcc64e9"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DeleteElementButtonClickScriptTask",
				Position = new Point(141, 37),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,101,204,177,10,131,48,24,4,224,185,130,239,224,168,32,190,128,99,21,135,130,8,41,221,127,204,33,129,152,192,159,11,180,111,95,5,59,117,187,227,142,111,128,7,49,90,71,216,209,99,71,96,125,182,43,27,144,46,108,233,30,3,241,230,3,159,182,90,100,67,119,237,233,169,192,164,206,118,230,128,214,3,153,163,69,106,203,226,54,129,47,167,204,226,7,161,152,152,117,69,125,58,26,253,143,253,59,204,178,163,105,250,178,80,48,107,168,168,25,253,23,127,233,38,13,164,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateEditElementButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaEditElementButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("dcc7e46f-6104-4350-b87a-f9a0ebef1eef"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditElementButtonClickEventSubProcess",
				Position = new Point(36, 247),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(361, 220),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaEditElementButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateEditElementButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("e7158616-a5e8-4f7e-8c88-37f40a92d262"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("dcc7e46f-6104-4350-b87a-f9a0ebef1eef"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"EditElementButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditElementButtonClickStartMessage",
				Position = new Point(36, 121),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateEditElementButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("0d6fde80-bffb-4fa7-84a2-29ec0d42656f"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("dcc7e46f-6104-4350-b87a-f9a0ebef1eef"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditElementButtonClickScriptTask",
				Position = new Point(127, 107),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,85,206,65,10,194,48,20,132,225,181,133,222,33,116,165,16,188,64,113,161,82,164,184,41,232,5,10,29,67,32,190,200,123,19,208,219,75,68,23,46,7,190,31,102,180,67,33,179,92,64,198,96,110,231,186,219,156,12,93,223,54,10,22,21,183,55,139,65,38,205,15,40,35,236,152,133,154,211,167,144,96,195,18,57,205,1,107,106,129,119,117,14,9,119,8,127,162,6,120,242,140,151,111,155,85,181,219,175,176,171,2,39,141,139,119,227,255,145,77,255,6,50,204,220,16,154,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateElementsTreeGridDblClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("52db3d4e-7fa3-496d-be84-8402cb78610e"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("dcc7e46f-6104-4350-b87a-f9a0ebef1eef"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"ElementsTreeGridDblClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ElementsTreeGridDblClickStartMessage",
				Position = new Point(36, 44),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaEventSubProcess CreateDownElementButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaDownElementButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("cace6421-b622-4846-a711-83889f4207b9"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DownElementButtonClickEventSubProcess",
				Position = new Point(414, 317),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(240, 149),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaDownElementButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateDownElementButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("923fcc38-5f0b-4076-ab4c-3ecf79f3fe21"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cace6421-b622-4846-a711-83889f4207b9"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"DownElementButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DownElementButtonClickStartMessage",
				Position = new Point(42, 56),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateDownElementButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("ea0c7345-5339-4547-8134-2c526a0fcfe7"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cace6421-b622-4846-a711-83889f4207b9"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DownElementButtonClickScriptTask",
				Position = new Point(140, 42),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,101,140,187,10,194,64,20,5,107,3,249,135,45,19,88,252,129,148,26,130,136,34,68,236,47,238,49,44,236,3,238,158,21,253,123,9,104,101,55,197,204,156,242,19,163,243,132,59,16,177,91,113,12,136,72,156,65,250,180,148,93,78,196,139,71,188,109,219,108,46,178,96,251,53,202,85,129,73,189,179,102,2,111,94,89,37,236,133,50,231,170,119,116,107,169,57,252,70,127,194,89,34,122,107,30,18,10,250,161,109,20,172,154,12,181,98,248,0,210,17,3,168,152,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateUpElementButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaUpElementButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("135ed2d4-7921-4754-9549-41f513c8a5ee"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"UpElementButtonClickEventSubProcess",
				Position = new Point(414, 16),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(247, 137),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaUpElementButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateUpElementButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("ba64cb51-e5f5-4332-a732-e28851372170"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("135ed2d4-7921-4754-9549-41f513c8a5ee"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"UpElementButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"UpElementButtonClickStartMessage",
				Position = new Point(42, 49),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateUpElementButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("16f17f2f-5801-4877-9935-f3654ec9b8f3"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("135ed2d4-7921-4754-9549-41f513c8a5ee"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"UpElementButtonClickScriptTask",
				Position = new Point(147, 35),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,101,140,205,10,130,64,24,69,215,9,190,131,75,133,161,23,112,89,34,17,69,96,180,255,112,46,50,48,63,240,121,39,242,237,69,169,85,187,115,225,220,115,75,111,116,214,17,246,66,132,122,195,206,35,32,114,0,233,226,52,159,82,36,62,188,98,49,101,113,120,200,132,227,215,152,159,10,244,234,172,169,122,240,229,148,89,252,89,40,67,202,58,162,222,158,154,252,47,244,39,220,37,160,49,21,53,163,105,203,66,193,172,113,159,237,10,20,253,113,18,151,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateAddButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaAddButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("882b20f5-4290-4b27-8cd8-888dce4214a8"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"AddButtonClickEventSubProcess",
				Position = new Point(35, 503),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(360, 163),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaAddButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateAddButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("f860e50a-76ac-4330-9327-8c0e81f93975"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("882b20f5-4290-4b27-8cd8-888dce4214a8"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"AddButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"AddButtonClickStartMessage",
				Position = new Point(36, 64),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateAddButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("bfc0c229-76b7-47f9-b681-634c2cb938a1"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("882b20f5-4290-4b27-8cd8-888dce4214a8"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"AddButtonClickScriptTask",
				Position = new Point(127, 50),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,85,142,65,10,194,64,16,4,239,130,127,24,114,82,88,252,64,240,160,34,18,188,4,146,15,4,210,46,3,97,87,102,122,65,127,175,171,23,61,54,93,213,116,231,199,66,230,52,128,212,232,178,151,134,86,208,180,235,149,129,197,146,28,220,53,166,222,242,29,70,133,159,114,162,229,229,35,164,232,231,89,217,79,17,155,219,180,56,130,212,252,51,249,38,170,128,7,175,120,6,169,228,238,91,251,104,192,197,116,14,210,253,159,216,182,47,173,161,133,41,150,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaUserTask CreateOpenAddButtonElementPageUserTaskUserTask() {
			ProcessSchemaUserTask schemaTask = new ProcessSchemaUserTask(this) {
				UId = new Guid("f7b799b9-ba0b-436e-babb-e7b230fe8384"),
				AfterActivitySaveScript = @"",
				ContainerItemIndex = 0,
				ContainerUId = new Guid("882b20f5-4290-4b27-8cd8-888dce4214a8"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("1418e61a-82c3-403e-8221-01088f52c125"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"OpenAddButtonElementPageUserTask",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(253, 50),
				SchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			InitializeOpenAddButtonElementPageUserTaskParameters(schemaTask);
			return schemaTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateEventSubProcess4EventSubProcess() {
			ProcessSchemaEventSubProcess schemaEventSubProcess4 = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("d3776214-560f-4ec7-b689-f07ba64c67df"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EventSubProcess4",
				Position = new Point(414, 506),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(245, 143),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaEventSubProcess4;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateDeleteButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("157efaee-6af9-4271-9415-c0f5f645723a"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("d3776214-560f-4ec7-b689-f07ba64c67df"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"DeleteButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DeleteButtonClickStartMessage",
				Position = new Point(36, 44),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateDeleteButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("526dbaa0-7c39-4fe8-a9fd-f0120fcf2511"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("d3776214-560f-4ec7-b689-f07ba64c67df"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DeleteButtonClickScriptTask",
				Position = new Point(141, 30),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,101,204,177,10,131,48,20,133,225,185,130,239,224,168,32,190,128,91,171,56,20,164,16,233,30,204,65,2,241,6,110,78,160,125,251,42,157,74,199,159,31,190,1,1,196,232,60,225,198,128,29,194,250,172,107,38,163,24,144,94,182,116,139,66,188,120,199,187,173,30,118,67,247,221,105,81,96,82,239,58,115,48,235,65,204,209,33,181,101,113,153,192,167,87,102,27,6,75,107,98,214,21,245,47,250,247,103,187,163,105,250,178,80,48,171,84,212,140,254,3,20,2,202,69,161,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateUpButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaUpButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("86c4d291-9abc-4c4a-9d1e-a167315377fd"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"UpButtonClickEventSubProcess",
				Position = new Point(680, 506),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(235, 137),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaUpButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateUpButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("f9203641-5806-45d8-9783-45638896912b"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("86c4d291-9abc-4c4a-9d1e-a167315377fd"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"UpButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"UpButtonClickStartMessage",
				Position = new Point(36, 51),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateUpButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("063b73ec-da7f-45db-95ef-ba56b7768679"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("86c4d291-9abc-4c4a-9d1e-a167315377fd"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"UpButtonClickScriptTask",
				Position = new Point(134, 37),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,243,205,47,75,117,77,201,44,73,77,241,44,73,205,213,0,49,157,74,75,74,242,243,130,83,75,74,50,243,210,139,157,243,243,74,82,43,74,188,83,43,117,120,185,56,3,18,211,83,245,32,10,138,67,138,82,83,221,139,50,83,116,20,220,83,75,194,50,139,74,74,19,115,92,18,75,18,131,243,75,139,146,83,53,80,141,193,144,247,75,204,77,213,212,81,40,41,42,77,213,180,230,229,42,74,45,41,45,202,3,115,173,1,208,225,203,72,148,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateDownButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaDownButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("f439fb4b-b5a9-4434-8f8e-d7f54f7f75e7"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DownButtonClickEventSubProcess",
				Position = new Point(414, 663),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(234, 135),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaDownButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateDownButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("6fea9f9c-78fd-4c67-8cdb-0eed98bcebdd"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("f439fb4b-b5a9-4434-8f8e-d7f54f7f75e7"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"DownButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DownButtonClickStartMessage",
				Position = new Point(35, 49),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateDownButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("11a23f25-f75c-4025-9c18-f97a903a7ff0"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("f439fb4b-b5a9-4434-8f8e-d7f54f7f75e7"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"DownButtonClickScriptTask",
				Position = new Point(133, 35),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,101,140,203,10,194,48,20,5,215,22,250,15,89,182,16,252,129,238,124,80,164,40,66,197,253,197,28,75,160,77,224,230,92,209,191,23,113,37,238,6,102,152,99,126,96,31,34,17,14,196,210,124,112,99,100,78,35,200,152,166,178,205,137,120,114,192,203,215,213,234,44,19,214,223,160,92,20,232,53,6,239,122,240,26,149,38,243,78,40,99,54,189,161,249,221,252,249,147,44,104,189,187,203,92,208,118,117,165,160,105,114,84,67,247,6,103,173,80,52,149,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateEditButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaEditButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("caf35d14-21b0-4889-9a05-3a913883ed65"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditButtonClickEventSubProcess",
				Position = new Point(35, 657),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(360, 233),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaEditButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateEditButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("d5568cae-fded-47b1-9a5a-de9ed27a388f"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("caf35d14-21b0-4889-9a05-3a913883ed65"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"EditButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditButtonClickStartMessage",
				Position = new Point(36, 134),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateEditButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("613de7bc-e5b9-479a-87c8-52ce8ee90cfc"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("caf35d14-21b0-4889-9a05-3a913883ed65"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EditButtonClickScriptTask",
				Position = new Point(127, 120),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,243,44,118,42,45,41,201,207,11,78,45,41,201,76,47,86,176,85,80,42,41,42,77,85,178,230,229,42,74,45,41,45,202,83,112,44,46,206,76,207,11,40,202,47,72,45,42,201,76,45,118,206,207,43,41,202,207,1,107,200,75,47,118,77,201,44,9,72,76,79,213,0,105,211,81,0,113,145,76,4,42,0,169,79,173,40,241,78,173,212,225,229,226,4,41,213,131,40,40,14,41,74,77,117,47,202,76,209,81,240,68,117,133,166,53,0,238,221,86,165,151,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateButtonsTreeGridDblClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("2e655a9d-43b2-4982-9410-6b0503f9e478"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("caf35d14-21b0-4889-9a05-3a913883ed65"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"ButtonsTreeGridDblClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ButtonsTreeGridDblClickStartMessage",
				Position = new Point(36, 57),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaEventSubProcess CreateEventSubProcess2EventSubProcess() {
			ProcessSchemaEventSubProcess schemaEventSubProcess2 = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("f70e2e8d-518d-4e7d-a4d8-e6821d5f72bd"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EventSubProcess2",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(665, 657),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(225, 133),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaEventSubProcess2;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateClosedButtonSettingsEditPageStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("3a51268e-904d-4cf4-b60a-f6cbe10c04bc"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("f70e2e8d-518d-4e7d-a4d8-e6821d5f72bd"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("02340c80-8e75-4f7a-917b-04125bc07192"),
				Message = @"ClosedButtonSettingsEditPage",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ClosedButtonSettingsEditPageStartMessage",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(35, 56),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateClosedButtonSettingsEditPageScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("d7088813-436b-4a51-8607-f8c6a0e47195"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("f70e2e8d-518d-4e7d-a4d8-e6821d5f72bd"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ClosedButtonSettingsEditPageScriptTask",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(133, 42),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,149,142,65,10,194,48,16,69,215,22,188,67,151,9,136,23,232,174,182,148,34,184,105,113,31,237,87,2,105,34,147,137,88,196,187,155,162,66,69,55,221,205,103,254,155,121,250,148,138,141,179,87,16,175,91,151,59,103,160,172,168,125,30,152,157,109,192,172,207,94,202,244,190,76,22,133,246,23,163,134,178,211,140,174,102,244,94,84,224,105,28,231,9,105,207,62,222,102,220,120,139,65,174,226,137,69,4,246,154,56,40,83,40,86,141,11,116,132,248,70,126,246,59,213,67,202,44,226,177,82,90,117,48,232,94,136,111,9,168,72,127,162,24,91,143,20,198,99,134,113,105,208,195,242,44,229,177,68,206,204,114,126,255,249,47,189,76,8,28,200,166,76,1,217,19,195,94,171,65,151,1,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateGroupEditButtonClickEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaGroupEditButtonClickEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("7ef25b1d-1e4a-4644-89a9-17a2875032ca"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"GroupEditButtonClickEventSubProcess",
				Position = new Point(413, 811),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(376, 151),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaGroupEditButtonClickEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateGroupEditButtonClickStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("de4b0675-0121-4a16-98c7-64b315dc0ec0"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("7ef25b1d-1e4a-4644-89a9-17a2875032ca"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"GroupEditButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"GroupEditButtonClickStartMessage",
				Position = new Point(35, 49),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateGroupEditButtonClickScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("156c761e-2db4-48da-b6e5-030a73a990be"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("7ef25b1d-1e4a-4644-89a9-17a2875032ca"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"GroupEditButtonClickScriptTask",
				Position = new Point(133, 35),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,141,145,221,106,131,64,16,133,175,43,248,14,203,94,37,16,107,82,99,83,233,15,212,141,9,82,138,129,54,15,176,232,52,72,147,85,102,199,180,33,228,221,187,106,76,75,175,188,218,61,204,204,55,103,102,146,18,212,18,139,170,76,62,162,45,236,64,145,142,178,156,86,114,3,107,13,248,46,245,231,117,98,114,0,99,165,73,170,20,226,140,61,178,78,172,227,236,222,182,146,30,16,243,17,21,162,137,61,167,148,239,161,14,26,16,97,5,134,224,186,125,24,98,91,104,120,5,173,219,90,222,232,236,95,213,27,16,229,106,115,169,230,13,222,117,89,151,16,183,125,186,120,63,251,141,104,70,87,240,197,150,85,158,13,184,31,78,162,112,28,134,78,48,153,122,206,52,152,221,57,161,119,43,28,127,49,15,102,254,88,120,226,102,193,135,166,253,94,34,43,37,202,29,16,160,62,51,230,185,217,67,161,36,30,30,52,161,113,60,98,237,251,52,24,178,163,109,93,29,25,79,11,69,240,77,47,112,224,35,198,106,83,103,131,221,144,226,146,112,178,173,83,207,83,212,98,245,215,206,175,55,67,64,160,10,85,123,152,31,60,26,176,107,30,2,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaUserTask CreateOpenGroupOfElementsEditPageUserTaskUserTask() {
			ProcessSchemaUserTask schemaTask = new ProcessSchemaUserTask(this) {
				UId = new Guid("ce7f20a5-ae65-43d6-bcde-b396a4990509"),
				AfterActivitySaveScript = @"",
				ContainerItemIndex = 0,
				ContainerUId = new Guid("7ef25b1d-1e4a-4644-89a9-17a2875032ca"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("1418e61a-82c3-403e-8221-01088f52c125"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"OpenGroupOfElementsEditPageUserTask",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(266, 35),
				SchemaUId = new Guid("b7042ef4-f468-443e-b3ea-39ebbda1c828"),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			InitializeOpenGroupOfElementsEditPageUserTaskParameters(schemaTask);
			return schemaTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateClientUnitSchemaeEditChangeEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaClientUnitSchemaeEditChangeEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("4b48b8e9-489a-497c-93e6-3818ec4a191a"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ClientUnitSchemaeEditChangeEventSubProcess",
				Position = new Point(322, 991),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(270, 137),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaClientUnitSchemaeEditChangeEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateClientUnitSchemaeEditChangeStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("bd5c23d1-eefe-4712-bf6f-719f5589b54b"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("4b48b8e9-489a-497c-93e6-3818ec4a191a"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"ClientUnitSchemaeEditChange",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ClientUnitSchemaeEditChangeStartMessage",
				Position = new Point(36, 51),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateClientUnitSchemaeEditChangeScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("b1e7dc97-0c9c-4ab8-93eb-183dbcc82447"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("4b48b8e9-489a-497c-93e6-3818ec4a191a"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"ClientUnitSchemaeEditChangeScriptTask",
				Position = new Point(155, 37),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,43,74,45,41,45,202,83,40,41,42,77,181,6,0,0,22,62,211,12,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateEntitySchemaLookupEditChangeEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaEntitySchemaLookupEditChangeEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("e7767923-3199-4564-ae7d-9855d93deb04"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EntitySchemaLookupEditChangeEventSubProcess",
				Position = new Point(50, 992),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(246, 140),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaEntitySchemaLookupEditChangeEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateEntitySchemaLookupEditChangeStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("9163f05d-e8fa-4c36-ae0e-964b6a59cf41"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("e7767923-3199-4564-ae7d-9855d93deb04"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"EntitySchemaLookupEditChange",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EntitySchemaLookupEditChangeStartMessage",
				Position = new Point(36, 54),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateEntitySchemaLookupEditChangeScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("d2f15914-fb81-44dc-88ee-3e516b843e1c"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("e7767923-3199-4564-ae7d-9855d93deb04"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EntitySchemaLookupEditChangeScriptTask",
				Position = new Point(134, 40),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,117,144,193,10,194,48,16,68,207,22,250,15,235,173,94,250,3,210,139,80,74,65,180,88,234,61,154,85,131,105,83,211,141,80,196,127,183,137,98,67,209,99,152,151,153,217,185,51,13,216,144,160,190,60,94,176,102,57,135,4,162,204,8,190,40,216,25,227,212,211,214,74,93,77,155,114,65,241,158,73,131,203,48,16,39,136,124,196,138,91,201,157,12,73,50,177,94,192,35,12,102,26,201,232,6,72,59,135,103,24,28,148,146,32,186,141,162,180,110,169,135,233,55,152,39,96,27,197,78,254,164,142,252,219,213,111,81,185,43,50,164,239,115,213,231,60,154,148,177,225,128,178,195,127,255,253,200,161,102,213,114,70,248,230,114,94,48,205,106,36,212,238,214,200,186,121,131,185,145,74,164,29,222,140,208,200,253,186,63,200,180,97,7,137,54,116,228,6,236,255,178,147,133,6,214,95,245,5,231,206,179,82,213,1,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateEventSubProcessPreconfiguredFormInitEventSubProcess() {
			ProcessSchemaEventSubProcess schemaEventSubProcessPreconfiguredFormInit = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("9f994e14-b7f8-4a3f-be31-282c1c7f7e1e"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EventSubProcessPreconfiguredFormInit",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(36, 1157),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(315, 174),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaEventSubProcessPreconfiguredFormInit;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateInitStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("485786b7-a3e1-42ee-8752-2f0f252e9252"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("9f994e14-b7f8-4a3f-be31-282c1c7f7e1e"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("02340c80-8e75-4f7a-917b-04125bc07192"),
				Message = @"Init",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"InitStartMessage",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(28, 68),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaIntermediateThrowMessageEvent CreateInitIntermediateThrowMessageEventIntermediateThrowMessageEvent() {
			ProcessSchemaIntermediateThrowMessageEvent schemaThrowMessageEvent = new ProcessSchemaIntermediateThrowMessageEvent(this) {
				UId = new Guid("18d3af5f-055c-4304-ba51-6f911f24bd5c"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("9f994e14-b7f8-4a3f-be31-282c1c7f7e1e"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsLogging = false,
				ManagerItemUId = new Guid("7b8b16fb-d4c6-4e8b-a519-988250ac636f"),
				Message = @"Init",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"InitIntermediateThrowMessageEvent",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(119, 68),
				SerializeToDB = false,
				Size = new Size(0, 0),
				ThrowToBase = true,
				UseBackgroundMode = false
			};
			
			return schemaThrowMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateInitScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("20f367b1-c524-4fb9-99f5-0cbb94641ec4"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("9f994e14-b7f8-4a3f-be31-282c1c7f7e1e"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"InitScriptTask",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(210, 56),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,197,84,193,78,219,64,16,61,131,196,63,184,57,217,170,229,31,128,70,10,142,161,145,218,202,34,129,30,170,30,22,239,56,89,178,217,53,179,99,192,66,252,123,103,189,134,36,4,245,84,169,167,108,118,103,222,188,247,102,60,57,130,32,56,111,137,172,153,3,145,50,75,119,163,144,90,161,167,130,196,220,182,88,65,156,156,158,28,231,125,100,110,13,161,213,127,15,157,21,166,221,0,138,91,13,103,151,173,146,227,168,17,213,90,44,97,38,93,244,37,90,0,162,112,182,166,44,183,8,89,25,222,92,246,211,226,218,113,36,92,147,210,138,20,95,93,2,13,207,95,21,3,98,181,234,24,35,190,118,128,204,196,64,69,202,154,52,186,80,70,78,193,169,165,1,89,162,173,192,185,121,181,130,141,136,147,87,248,235,153,76,79,142,143,246,51,183,37,179,153,244,204,237,237,29,191,252,250,29,133,67,185,75,123,171,33,203,133,163,179,16,50,230,18,11,59,97,69,93,175,253,65,224,54,242,66,105,2,228,92,3,143,209,84,245,53,5,118,103,142,144,221,75,135,42,227,232,153,153,61,143,42,187,105,4,42,103,205,162,107,96,228,101,249,244,124,239,58,43,238,217,240,151,180,207,208,80,83,241,212,32,235,101,228,220,234,118,99,74,65,43,206,29,205,59,55,208,31,13,209,173,131,169,114,141,22,221,141,208,173,47,80,11,237,96,120,69,181,92,237,128,149,2,197,6,184,124,31,235,70,233,129,37,47,47,131,92,120,34,48,146,19,192,208,255,84,92,236,240,248,71,154,189,138,183,153,120,14,169,189,238,146,61,200,10,67,138,186,48,105,223,172,93,183,77,33,21,101,37,2,211,135,112,51,24,242,249,75,36,65,195,146,63,161,40,14,136,145,99,182,128,105,180,77,45,30,152,250,4,151,46,130,164,183,200,219,91,247,8,126,2,33,11,104,142,9,28,13,215,217,68,202,248,221,192,37,239,223,15,59,228,67,94,251,39,161,14,130,185,196,20,106,209,106,26,254,11,247,81,15,247,190,176,125,207,198,12,169,234,40,222,129,228,81,104,181,14,114,16,168,69,19,90,224,9,132,224,79,220,184,108,230,38,119,226,233,10,238,57,137,66,116,239,177,255,96,23,194,173,23,138,52,244,246,46,88,13,51,45,52,108,88,206,15,120,204,69,227,41,158,14,126,73,112,21,170,134,172,31,195,56,172,133,239,86,66,174,133,115,211,183,199,100,123,244,153,108,139,102,97,13,32,117,59,235,44,252,164,59,160,201,107,157,230,32,218,215,59,216,136,201,33,170,71,56,204,206,120,169,230,90,249,9,96,203,31,224,202,62,246,27,229,232,156,183,155,87,110,209,197,188,16,135,163,191,229,118,196,73,250,1,147,116,219,212,36,24,61,88,79,216,194,233,31,171,68,22,80,245,5,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreatePageLoadCompleteEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaPageLoadCompleteEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("55ec07b6-0184-4a92-b34a-9fde76f8da50"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"PageLoadCompleteEventSubProcess",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(365, 1157),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(321, 156),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaPageLoadCompleteEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreatePageLoqdCompleteStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("ba0d9eed-c5a9-4aca-af0c-05cb0a662bad"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("55ec07b6-0184-4a92-b34a-9fde76f8da50"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("02340c80-8e75-4f7a-917b-04125bc07192"),
				Message = @"PageLoadComplete",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"PageLoqdCompleteStartMessage",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(35, 70),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaIntermediateThrowMessageEvent CreatePageLoqdCompleteIntermediateThrowMessageEventIntermediateThrowMessageEvent() {
			ProcessSchemaIntermediateThrowMessageEvent schemaThrowMessageEvent = new ProcessSchemaIntermediateThrowMessageEvent(this) {
				UId = new Guid("33de6576-bc52-4dda-95dc-2c87ef03f248"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("55ec07b6-0184-4a92-b34a-9fde76f8da50"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsLogging = false,
				ManagerItemUId = new Guid("7b8b16fb-d4c6-4e8b-a519-988250ac636f"),
				Message = @"PageLoadComplete",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"PageLoqdCompleteIntermediateThrowMessageEvent",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(126, 70),
				SerializeToDB = false,
				Size = new Size(0, 0),
				ThrowToBase = true,
				UseBackgroundMode = false
			};
			
			return schemaThrowMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreatePageLoadCompleteScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("bb723294-caf2-4f95-8f08-d74dbca15f34"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("55ec07b6-0184-4a92-b34a-9fde76f8da50"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"PageLoadCompleteScriptTask",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(210, 56),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,213,85,209,110,218,48,20,125,6,137,127,200,250,148,72,40,63,48,138,212,66,132,216,90,64,131,246,165,234,131,27,95,58,111,142,141,236,155,182,217,212,127,223,181,147,136,36,163,84,172,79,123,138,98,223,115,238,185,231,56,78,194,5,94,230,136,90,173,1,81,168,71,59,209,10,225,5,191,66,17,156,7,179,92,240,120,1,207,238,25,70,241,70,175,209,80,81,24,125,30,244,19,130,38,18,50,80,120,50,118,197,30,33,222,64,182,187,177,96,42,84,124,193,121,152,28,209,243,46,240,77,53,14,249,196,76,176,99,134,101,128,96,44,233,155,194,150,229,18,111,153,204,193,6,204,6,83,145,162,208,138,153,98,100,189,212,97,176,50,58,5,107,215,233,119,200,216,170,70,123,200,152,56,197,54,8,155,156,231,129,202,165,140,130,223,131,126,207,0,230,70,5,104,114,160,202,215,65,191,228,220,107,240,44,164,99,79,112,119,86,142,110,207,238,99,191,91,181,248,84,66,227,185,93,16,253,210,36,217,14,139,176,77,20,149,93,221,148,2,33,115,3,126,177,90,145,7,79,96,48,158,2,249,37,152,20,191,96,249,240,3,82,28,93,9,139,163,3,35,107,191,61,30,143,187,13,72,76,175,114,93,129,135,197,107,242,134,158,83,134,236,238,88,114,247,164,198,171,114,28,83,97,119,146,21,174,30,248,220,173,134,126,111,24,204,0,111,133,193,156,73,199,184,214,185,73,33,108,115,254,181,191,32,137,81,84,58,76,69,137,98,15,18,120,229,227,198,0,204,140,168,95,253,209,59,234,127,117,130,254,219,0,222,252,2,62,146,128,99,49,90,158,24,65,109,229,233,25,40,20,88,148,159,220,205,156,255,123,20,29,34,106,163,224,217,95,75,135,156,117,235,1,52,32,30,65,134,212,111,151,5,145,132,29,82,15,109,174,57,83,151,146,215,131,181,9,93,177,191,193,154,136,43,173,127,230,59,135,163,56,203,235,232,66,241,13,229,22,182,209,67,66,119,15,64,147,232,154,41,226,54,49,105,118,161,30,214,27,79,216,206,33,163,142,22,223,191,138,142,116,87,215,86,239,200,5,88,134,86,15,218,165,106,215,58,170,125,121,252,13,182,96,64,165,208,12,167,163,244,144,190,214,113,169,137,95,223,59,79,47,8,138,3,159,72,65,126,94,107,158,75,248,192,161,58,192,214,108,216,80,213,252,3,252,1,135,96,31,212,104,7,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaEventSubProcess CreateEventSubProcessPressedButtonOKEventSubProcess() {
			ProcessSchemaEventSubProcess schemaEventSubProcessPressedButtonOK = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("e4f84319-5360-4e6e-b260-255d75628353"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"EventSubProcessPressedButtonOK",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(36, 1360),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(341, 175),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaEventSubProcessPressedButtonOK;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateOkButtonClickPreconfiguredFormStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("909f1dcc-eceb-43a4-8b9f-840ea80df3a1"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("e4f84319-5360-4e6e-b260-255d75628353"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("02340c80-8e75-4f7a-917b-04125bc07192"),
				Message = @"OkButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"OkButtonClickPreconfiguredFormStartMessage",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(29, 76),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateOkButtonClickPreconfiguredFormScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("6214c098-3b9b-45d2-8a29-cda92a00139c"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("e4f84319-5360-4e6e-b260-255d75628353"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"OkButtonClickPreconfiguredFormScriptTask",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(127, 62),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,189,86,203,82,219,48,20,93,39,51,249,7,193,202,102,50,166,139,78,23,64,194,64,8,148,182,4,102,28,216,116,186,16,241,5,68,101,41,35,201,128,91,248,247,234,229,60,108,133,71,167,116,5,92,206,125,156,115,31,242,144,66,14,76,141,224,126,128,167,138,112,134,122,232,12,95,67,114,46,65,140,177,252,57,38,138,194,48,35,42,25,195,131,218,238,180,239,176,64,140,51,184,72,13,84,240,9,72,153,78,110,32,199,103,88,224,28,20,136,11,76,11,72,121,33,38,144,140,52,212,123,77,56,147,234,149,110,3,139,53,6,239,60,173,80,210,90,109,153,203,22,44,209,1,153,24,14,88,148,59,82,9,194,174,187,207,165,234,235,208,228,10,69,141,208,61,196,10,74,99,244,187,211,110,213,179,244,2,120,196,224,254,173,185,163,56,214,233,159,58,237,75,206,41,34,114,152,79,85,57,100,138,168,210,225,207,143,51,29,185,97,233,161,163,130,100,137,133,235,0,181,90,190,175,215,28,214,127,248,242,158,169,37,114,76,79,120,70,174,8,100,199,108,169,0,221,250,217,223,93,13,115,13,210,255,89,81,243,110,53,29,91,85,195,141,87,165,212,74,39,167,153,227,165,93,107,128,100,204,83,11,136,98,45,154,239,91,56,150,35,211,90,33,204,155,20,121,173,36,115,77,28,117,107,171,24,47,18,211,246,39,215,117,51,210,183,146,179,20,4,193,148,252,2,145,130,82,26,40,125,117,95,194,255,52,101,141,203,41,140,116,181,159,49,203,168,182,106,143,186,41,217,163,180,187,0,221,147,18,242,75,90,30,114,145,99,21,112,12,3,146,148,228,83,10,78,242,111,68,170,157,192,148,243,203,91,152,168,126,31,17,5,185,41,255,8,148,145,72,203,102,12,145,249,125,191,80,202,240,113,44,244,114,43,125,76,190,66,105,118,192,197,65,178,34,235,220,204,162,249,128,110,29,209,227,163,203,160,111,67,193,148,49,127,208,195,208,218,173,43,188,101,181,211,57,238,64,168,100,166,225,169,45,211,197,236,34,199,211,84,99,47,84,119,69,51,226,208,138,57,50,242,29,87,203,51,58,150,35,77,252,84,88,102,81,77,160,248,133,77,171,193,253,218,172,110,209,208,189,4,225,30,45,30,169,215,117,102,121,71,157,12,205,22,47,182,206,44,6,2,42,97,5,246,223,118,85,239,224,82,223,144,116,63,122,232,144,176,236,0,36,185,102,144,45,65,162,216,191,69,133,127,27,141,18,75,136,234,209,140,93,176,68,203,188,143,37,120,105,247,75,221,231,69,173,205,181,242,33,115,63,33,243,231,198,15,151,221,186,240,132,245,163,79,31,43,157,215,150,132,190,226,2,240,228,38,90,189,173,182,97,136,48,215,56,127,238,194,105,230,79,239,182,1,153,108,99,81,14,116,6,5,51,80,228,24,119,103,218,116,109,100,157,175,80,243,0,177,79,212,106,210,77,246,178,108,254,178,198,54,213,147,185,151,182,85,155,27,142,102,192,207,205,220,154,153,57,27,252,124,154,153,194,66,109,25,20,82,241,124,238,27,40,186,153,192,15,203,198,102,167,253,30,161,155,239,148,155,141,247,60,47,213,34,255,197,1,25,62,40,96,25,100,3,74,116,145,58,113,65,161,250,100,28,240,12,210,146,41,252,112,2,57,95,252,102,108,146,12,132,249,223,247,52,84,195,75,71,53,76,223,159,193,230,71,76,0,237,100,20,160,10,193,144,18,250,251,246,15,99,186,105,194,131,11,0,0 }
			};
			
			return ScriptTask;
		}

		protected virtual ProcessSchemaIntermediateThrowMessageEvent CreateOkButtonClickIntermediateThrowMessageEventIntermediateThrowMessageEvent() {
			ProcessSchemaIntermediateThrowMessageEvent schemaThrowMessageEvent = new ProcessSchemaIntermediateThrowMessageEvent(this) {
				UId = new Guid("6c718c71-90c8-4de1-8503-d242f3c5d765"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("e4f84319-5360-4e6e-b260-255d75628353"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsLogging = false,
				ManagerItemUId = new Guid("7b8b16fb-d4c6-4e8b-a519-988250ac636f"),
				Message = @"OkButtonClick",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"OkButtonClickIntermediateThrowMessageEvent",
				OwnerSchemaManagerName = @"PageSchemaManager",
				Position = new Point(274, 76),
				SerializeToDB = false,
				Size = new Size(0, 0),
				ThrowToBase = true,
				UseBackgroundMode = false
			};
			
			return schemaThrowMessageEvent;
		}

		protected virtual ProcessSchemaEventSubProcess CreateSourceTabPanelBeforeTabChangeEventSubProcessEventSubProcess() {
			ProcessSchemaEventSubProcess schemaSourceTabPanelBeforeTabChangeEventSubProcess = new ProcessSchemaEventSubProcess(this) {
				UId = new Guid("dd3fdddf-577f-4b08-a4b8-5419b3f5090f"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("cd09e94e-c18a-40a5-a203-5c05c9b0f048"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"EventSubProcess",
				EntitySchemaUId = Guid.Empty,
				IsExpanded = true,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0824af03-1340-47a3-8787-ef542f566992"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"SourceTabPanelBeforeTabChangeEventSubProcess",
				Position = new Point(399, 1357),
				SchemaUId = Guid.Empty,
				SerializeToDB = false,
				Size = new Size(270, 135),
				TriggeredByEvent = true,
				UseBackgroundMode = false,
				UseLastSchemaVersion = false
			};
			
			return schemaSourceTabPanelBeforeTabChangeEventSubProcess;
		}

		protected virtual ProcessSchemaStartMessageEvent CreateSourceTabPanelBeforeTabChangeStartMessageStartMessageEvent() {
			ProcessSchemaStartMessageEvent schemaStartMessageEvent = new ProcessSchemaStartMessageEvent(this) {
				UId = new Guid("3cb88234-c1c5-460a-a993-5f20f7055587"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("dd3fdddf-577f-4b08-a4b8-5419b3f5090f"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Event",
				EntitySchemaUId = Guid.Empty,
				ImageList = null,
				ImageName = null,
				IsInterrupting = false,
				IsLogging = false,
				ManagerItemUId = new Guid("429178f5-d44a-40d6-8b74-e72cad04ee73"),
				Message = @"SourceTabPanelBeforeTabChange",
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"SourceTabPanelBeforeTabChangeStartMessage",
				Position = new Point(43, 48),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false
			};
			
			return schemaStartMessageEvent;
		}

		protected virtual ProcessSchemaScriptTask CreateSourceTabPanelBeforeTabChangeScriptTaskScriptTask() {
			ProcessSchemaScriptTask ScriptTask = new ProcessSchemaScriptTask(this) {
				UId = new Guid("efd5b6de-9be6-4f32-9079-185fefc846b0"),
				ContainerItemIndex = 0,
				ContainerUId = new Guid("dd3fdddf-577f-4b08-a4b8-5419b3f5090f"),
				CreatedInOwnerSchemaUId = new Guid("497d874f-afdb-4603-b94f-2d2239127e0e"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				DragGroupName = @"Task",
				EntitySchemaUId = Guid.Empty,
				FillColor = Color.FromArgb(-1),
				ImageList = null,
				ImageName = null,
				IsForCompensation = false,
				IsLogging = false,
				ManagerItemUId = new Guid("0e490dda-e140-4441-b600-6f5c64d024df"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Name = @"SourceTabPanelBeforeTabChangeScriptTask",
				Position = new Point(162, 34),
				SerializeToDB = false,
				Size = new Size(0, 0),
				UseBackgroundMode = false,
				UseFlowEngineScriptVersion = false,
				ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,125,140,177,10,194,48,20,69,103,3,249,135,55,234,18,220,75,6,41,29,28,10,133,246,7,98,223,85,2,49,129,248,34,17,241,223,109,59,139,227,129,115,142,191,210,126,112,55,152,49,149,60,99,114,151,193,69,4,115,154,197,63,87,60,71,70,37,107,233,120,160,183,86,187,77,110,19,99,124,69,113,181,199,61,117,236,197,76,168,66,150,186,42,88,10,110,131,71,148,62,113,9,104,180,250,16,194,3,219,224,151,177,132,255,190,235,64,171,12,41,57,146,228,130,230,11,125,207,242,124,183,0,0,0 }
			};
			
			return ScriptTask;
		}

		protected override void InitializeMethods() {
			base.InitializeMethods();
			SetMethodsDefInheritance();
			Methods.Add(CreateGetSchemaUIdByIdMethod());
			Methods.Add(CreateGetSchemaIdByUIdMethod());
			Methods.Add(CreateAssignPropertiesControlSettingsEditPageMethod());
			Methods.Add(CreateDeleteEditedElementMethod());
			Methods.Add(CreateGetEditedItemsMethod());
			Methods.Add(CreateDisplayEditedItemsMethod());
			Methods.Add(CreateMoveEditedItemMethod());
			Methods.Add(CreateCreateControlSettingsVirtualDataSourceMethod());
			Methods.Add(CreateCreateButtonSettingsVirtualDataSourceMethod());
			Methods.Add(CreateCreateVirtualDataSourceMethod());
			Methods.Add(CreateGetVirtualDataSourceMethod());
			Methods.Add(CreateTryCreateParameterMethod());
			Methods.Add(CreateSetDefEntityEditValueMethod());
			Methods.Add(CreateUpdateEntityIdParameterValueMethod());
			Methods.Add(CreateRemoveElementFromGroupMethod());
			Methods.Add(CreateRemoveItemMethod());
			Methods.Add(CreateSetEnabledButtonsTreeGridButtonsMethod());
			Methods.Add(CreateSetEnabledElementsTreeGridButtonsMethod());
		}

		protected override void InitializeUsings() {
			Usings.Add(new SchemaUsing() {
				UId = new Guid("d4159d90-4d80-4bc4-804d-6cc2ca63435e"),
				Name = "System.Collections.Generic",
				Alias = "",
				CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("a9b659b5-9ae3-4218-9fe8-8047f8e6b589"),
				Name = "System.Text",
				Alias = "",
				CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("b6881e55-7df2-4cef-8151-adab44274ad1"),
				Name = "Terrasoft.UI.WebControls.Controls",
				Alias = "UIControls",
				CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("0840abef-9bb9-452e-a8da-ae98b5fb397d"),
				Name = "Terrasoft.Core",
				Alias = "",
				CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("e1b12ba7-35df-4582-a18f-8349f8901d2b"),
				Name = "Terrasoft.Common.Json",
				Alias = "",
				CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("b424ebf7-dbe4-4ba3-91b6-f05370f2faa3"),
				Name = "Terrasoft.Core.Configuration",
				Alias = "",
				CreatedInPackageId = new Guid("2eb2739e-09fc-468f-bc49-96baa1a33d59")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("519e1ba3-72bf-4e8b-96b9-e7f2b727e846"),
				Name = "System.Runtime.Serialization.Formatters",
				Alias = "",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("fb423533-e565-4623-b6db-138bab70ced6"),
				Name = "System.Web",
				Alias = "",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			Usings.Add(new SchemaUsing() {
				UId = new Guid("963979da-46bf-4874-8fc3-b24cace065eb"),
				Name = "System.Linq",
				Alias = "",
				CreatedInPackageId = new Guid("de8ba084-7212-4480-9dbe-8a387a10844f")
			});
		}

		protected override SchemaMethod CreateInitializeSchemaExplorerWindowMethod() {
			SchemaMethod method = base.CreateInitializeSchemaExplorerWindowMethod();
			method.IsOverride = true;
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,85,141,49,14,194,48,16,4,251,188,194,37,52,249,128,69,5,41,220,33,133,132,34,162,56,236,147,176,228,216,209,221,25,18,94,143,165,136,194,237,204,106,231,9,140,173,137,94,60,4,255,197,222,190,112,134,110,93,66,34,164,187,143,46,125,14,71,221,188,129,20,87,78,157,84,61,86,192,106,48,231,20,133,82,224,118,151,189,80,182,146,9,255,43,221,212,55,165,109,67,118,232,46,32,48,66,200,120,219,22,228,233,10,4,51,10,82,197,7,227,30,37,220,69,241,178,237,133,130,244,15,94,149,197,29,197,0,0,0 };
			return method;
		}

		protected override SchemaMethod CreateGetEditorsBindingMethod() {
			SchemaMethod method = base.CreateGetEditorsBindingMethod();
			method.IsOverride = true;
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,101,142,65,11,130,64,20,132,239,130,255,97,241,84,32,254,129,162,75,121,240,32,69,25,157,55,125,202,130,251,94,60,95,132,136,255,61,118,99,177,232,54,51,223,12,12,131,60,25,21,194,75,29,76,45,134,80,243,184,29,132,13,118,169,170,128,89,15,212,74,118,45,178,27,220,247,132,194,212,15,95,122,183,90,171,41,142,166,36,71,49,50,22,77,146,170,147,238,32,251,248,188,49,50,167,142,87,70,122,8,208,27,199,22,126,134,154,172,5,108,180,123,17,138,191,233,210,46,176,37,182,62,60,226,69,224,17,6,127,160,4,75,126,23,71,243,230,13,32,123,213,184,239,0,0,0 };
			return method;
		}

		protected override SchemaMethod CreateMakeCaptionMethod() {
			SchemaMethod method = base.CreateMakeCaptionMethod();
			method.IsOverride = true;
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,125,204,177,10,194,48,20,133,225,89,159,226,210,41,129,18,116,85,68,164,84,232,82,69,82,58,71,123,45,193,52,41,185,87,170,148,190,187,84,156,157,206,242,159,79,156,77,139,234,64,253,188,96,8,52,198,104,40,220,89,85,133,170,241,154,5,207,49,56,82,115,32,85,102,122,182,193,195,14,136,163,245,173,42,168,124,58,119,138,121,215,243,91,124,181,138,48,106,67,15,109,217,97,222,88,86,26,95,44,97,191,92,252,78,199,16,59,195,34,25,87,19,136,113,61,201,36,133,218,250,38,12,63,63,133,18,135,11,222,66,108,36,108,224,15,187,253,0,212,67,124,110,194,0,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateGetSchemaUIdByIdMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("efeffc77-202c-433e-921c-5e52e1be4b66"),
				Name = "GetSchemaUIdById",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "Guid"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("f3914e18-e384-4a8a-84bd-fd846d64e963"),
				Name = "schemaId",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "Guid",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,53,141,193,10,194,48,16,68,207,21,252,135,146,211,230,146,31,80,188,148,42,185,21,66,241,188,164,11,45,36,27,220,36,168,127,111,109,245,54,188,153,199,8,149,42,124,60,52,192,244,108,29,5,242,5,198,76,210,37,230,53,47,137,245,218,54,166,75,161,70,6,53,218,73,125,137,185,74,138,160,220,59,59,63,83,196,29,222,103,18,2,245,223,216,220,63,42,6,216,101,51,160,96,164,66,2,121,115,236,164,117,139,249,119,187,25,253,139,124,45,228,60,6,148,243,173,46,211,5,244,233,3,60,46,93,100,166,0,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateGetSchemaIdByUIdMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("e1bd0bf7-958e-4960-8d94-b97e140994ba"),
				Name = "GetSchemaIdByUId",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "Guid"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("cee28633-5da8-451d-bea5-f5e856157ce7"),
				Name = "schemaUId",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "Guid",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,125,144,221,10,130,64,16,133,175,13,122,7,217,171,21,98,95,160,8,66,42,236,38,65,196,235,97,29,82,212,221,154,117,169,222,190,245,167,31,189,232,110,102,206,153,239,12,67,216,90,82,203,133,199,21,222,253,4,107,148,45,79,13,82,168,149,114,117,169,85,224,84,79,132,186,182,141,226,44,121,154,68,22,216,0,91,249,44,202,89,167,138,3,233,230,87,234,135,145,3,208,73,151,195,82,12,178,130,11,178,64,156,167,131,17,35,34,179,191,89,168,103,9,95,227,59,43,43,144,112,230,74,39,132,225,84,17,3,65,131,45,18,55,189,209,153,130,158,176,83,249,252,2,215,101,154,42,115,5,137,255,89,211,223,136,207,150,232,232,62,152,241,135,125,208,254,129,210,182,152,72,168,129,54,71,91,230,91,30,172,95,81,138,116,160,115,1,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateAssignPropertiesControlSettingsEditPageMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("ae7be6b9-b4ed-4f94-a2ef-d06d1eeef253"),
				Name = "AssignPropertiesControlSettingsEditPage",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "bool"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("fbf30065-2cdd-4bf4-bab1-d75b5170fa5a"),
				Name = "isEditMode",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "bool",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("5fa7fb27-4f4c-49aa-960e-2458d65fc1a9"),
				Name = "contextKey",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("10fcac05-1d02-4e8e-b199-5c6a30a21f62"),
				Name = "treeGrid",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "TreeGrid",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("96c98d73-809d-419a-b366-c414000cf14b"),
				Name = "isButtonSettings",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,141,82,77,75,195,64,16,61,183,208,255,48,228,84,161,141,213,22,181,104,133,52,77,37,136,86,72,235,69,60,44,217,81,23,211,141,236,78,212,34,253,239,78,54,253,82,4,155,67,146,153,121,239,237,155,153,157,188,161,14,164,28,22,68,185,142,50,156,163,166,59,241,140,51,139,102,42,236,171,63,97,0,154,88,91,18,58,197,88,194,0,214,193,44,150,231,141,250,228,63,5,254,9,11,99,56,29,164,164,222,177,44,178,10,153,2,247,161,135,89,110,241,6,173,173,104,158,139,87,248,4,137,148,126,182,145,84,142,228,177,224,33,63,16,230,154,76,158,37,226,103,125,143,227,92,224,218,212,248,1,87,133,146,77,239,44,24,134,71,253,232,184,221,239,116,199,237,222,248,164,223,30,246,130,113,187,219,143,78,123,167,163,81,183,27,5,222,1,159,253,46,12,188,9,35,230,72,104,236,74,99,164,184,237,92,11,179,184,176,100,216,78,11,170,239,101,243,0,190,26,245,218,23,120,41,251,197,79,186,198,133,215,2,216,70,203,86,85,39,131,120,101,148,140,37,215,215,1,143,70,177,253,120,4,107,152,178,63,231,194,224,223,169,13,22,121,38,73,250,130,115,49,115,170,209,110,236,79,243,196,121,100,139,203,70,125,201,189,169,39,104,42,55,201,155,92,98,229,188,204,109,220,36,152,97,74,40,111,185,108,253,48,47,52,193,96,0,157,10,90,51,72,133,209,240,36,50,91,238,189,198,178,181,233,138,91,82,64,151,175,1,252,173,247,208,121,44,73,219,225,250,188,197,166,167,8,231,206,125,73,246,239,69,86,48,212,227,204,227,78,7,229,102,150,123,174,254,110,119,123,219,211,88,97,229,223,93,219,111,17,4,217,217,54,3,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateDeleteEditedElementMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("b99f29c6-eee3-4af9-89dd-02d2ce8a565e"),
				Name = "DeleteEditedElement",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("e13fc527-0e45-45a9-87ba-7fc601b50551"),
				Name = "contextKey",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("16b7ebf9-84c9-469d-b00c-fe0deecc2dff"),
				Name = "selectedNodes",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "TreeGridNodeCollection",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("9fe019dd-04a3-4b24-a58f-b9bd0d56a0db"),
				Name = "virtualDataSource",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "VirtualDataSource",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,77,143,193,78,195,48,12,134,207,203,83,68,59,181,210,212,23,232,182,11,69,83,5,226,64,7,151,105,135,208,120,96,148,37,200,118,42,42,196,187,147,132,74,112,177,101,203,191,191,255,191,71,150,109,135,163,96,240,134,230,45,11,161,127,221,232,240,242,14,163,236,247,26,5,174,172,119,250,0,114,107,211,96,251,188,168,198,224,5,62,229,14,230,186,85,120,209,213,114,183,211,62,58,87,235,47,181,34,144,72,190,85,223,234,18,8,204,248,166,171,35,1,28,8,237,67,176,160,125,46,232,53,131,75,40,40,75,46,202,201,80,225,246,54,129,243,89,243,108,92,4,62,173,123,187,62,55,199,48,20,151,85,66,175,30,225,26,38,200,166,126,45,108,22,101,157,193,79,12,116,19,188,135,146,175,25,128,57,245,206,136,57,253,5,56,39,72,145,182,170,67,254,112,102,254,31,116,121,58,33,73,52,46,75,135,16,105,132,186,253,1,46,80,175,0,59,1,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateGetEditedItemsMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("8fb09c98-d697-4bb3-b7c6-b4df6dfb1376"),
				Name = "GetEditedItems",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "List<Dictionary<string, object>>"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("c950fbae-e0a7-4fb7-938a-31fe9bd57f87"),
				Name = "contextKey",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,83,40,74,45,41,45,202,83,8,45,78,45,114,206,207,203,75,77,46,201,204,207,211,11,78,45,46,6,210,46,137,37,137,209,201,249,121,37,169,21,37,222,169,149,177,10,137,197,10,62,153,197,37,54,46,153,96,117,137,69,149,54,197,37,69,153,121,233,58,10,249,73,89,64,205,118,118,214,0,167,13,194,183,83,0,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateDisplayEditedItemsMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("0309b06e-5753-4ae3-8aca-ed886883129a"),
				Name = "DisplayEditedItems",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("cc7dbbed-6d47-4d07-8cfd-a88b635daab1"),
				Name = "items",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "List<Dictionary<string, object>>",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("13770dcc-0b80-4fe0-ac9a-a2bfb8ca134b"),
				Name = "virtualDataSource",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "VirtualDataSource",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,117,143,177,10,194,64,12,134,103,11,125,135,224,116,5,241,5,180,130,84,7,193,201,130,139,56,196,107,212,147,243,78,210,156,69,196,119,247,90,197,69,157,146,144,63,223,255,199,236,65,25,161,115,13,121,14,46,88,155,193,61,77,122,76,18,216,141,210,228,145,38,87,195,18,208,206,80,176,244,129,53,13,11,75,200,42,139,235,189,103,66,125,4,53,51,90,140,119,200,183,113,45,108,220,97,0,126,119,34,45,19,104,241,96,92,87,235,23,126,238,196,200,13,216,55,144,195,15,126,132,10,173,124,211,121,244,162,108,88,146,20,222,134,179,91,163,13,164,250,139,170,63,232,136,155,182,221,254,213,21,120,105,115,125,196,250,61,191,46,190,173,167,85,165,34,39,251,247,250,210,99,21,131,213,49,217,19,37,178,18,23,59,1,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateMoveEditedItemMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("cb7f74e5-0535-40ae-ae55-f4661beaf57b"),
				Name = "MoveEditedItem",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("570dd79f-5bfa-4087-821e-c67a25573c4e"),
				Name = "contextKey",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("8bd96412-5608-4110-bea0-558b9748b682"),
				Name = "treeGrid",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "TreeGrid",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("7c9ff80d-1012-4d53-9f34-786ea74014d8"),
				Name = "virtualDataSource",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "VirtualDataSource",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("8905e20f-6ae7-4f4e-b616-8ac74148a3d6"),
				Name = "isMovedUp",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "bool",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,133,83,77,111,19,49,16,61,39,82,254,195,208,67,229,21,101,91,206,52,145,66,10,81,196,87,69,90,46,81,15,219,120,90,25,57,118,101,123,147,86,148,255,206,140,29,147,101,119,129,211,202,179,239,189,121,51,126,254,168,124,56,191,80,235,160,172,169,220,211,185,15,78,153,251,19,176,183,223,113,29,38,19,80,1,55,30,198,48,199,240,78,210,65,46,184,32,214,214,4,124,12,31,240,169,120,51,26,170,59,16,123,224,24,76,173,53,60,63,67,112,136,115,167,100,185,68,77,90,40,63,91,137,190,156,217,218,4,198,157,21,240,99,52,28,56,12,181,51,36,242,115,52,188,218,83,24,9,190,65,35,3,253,114,171,179,27,162,110,43,23,141,46,36,1,155,188,242,91,165,107,66,29,45,228,209,77,121,101,151,113,60,81,52,56,196,136,214,203,247,202,72,129,26,198,19,16,105,13,5,234,196,100,187,73,191,57,109,30,182,59,135,162,9,73,13,31,127,139,47,248,244,229,46,242,178,134,80,254,147,221,162,188,126,128,227,227,140,143,123,161,237,137,23,253,127,147,92,90,226,43,120,93,116,155,255,253,54,33,84,238,30,3,223,32,65,249,195,29,46,173,87,76,136,210,205,66,30,53,251,72,173,14,26,121,184,85,50,71,110,248,46,6,237,218,30,214,250,197,229,63,236,12,218,237,9,208,182,88,78,111,233,196,99,2,106,143,255,246,243,178,235,167,191,105,147,208,50,251,63,63,111,81,219,93,90,251,181,71,55,179,198,96,220,62,165,212,123,250,94,84,161,90,29,30,75,214,247,28,64,229,66,93,105,70,44,109,237,214,88,178,116,76,72,74,221,73,195,107,174,180,77,113,150,90,47,131,115,47,14,105,229,156,63,56,181,161,60,204,172,174,55,38,62,9,242,97,112,7,243,90,201,6,246,244,180,107,42,63,55,118,113,217,209,241,229,84,74,209,213,47,122,7,92,98,152,105,133,38,76,105,73,91,252,106,119,189,212,95,180,152,8,26,149,4,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateCreateControlSettingsVirtualDataSourceMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("91f0774c-5f9b-408d-b0c5-03bfa98d1bee"),
				Name = "CreateControlSettingsVirtualDataSource",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,115,46,74,77,44,73,13,203,44,42,41,77,204,113,73,44,73,12,206,47,45,74,78,213,112,206,207,43,41,202,207,9,78,45,41,201,204,75,47,198,80,224,151,152,155,170,163,16,144,152,158,170,231,154,147,154,155,154,87,82,28,82,148,154,234,94,148,153,162,105,13,0,211,16,30,159,85,0,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateCreateButtonSettingsVirtualDataSourceMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("e08daf7a-e9a5-49b1-b8bb-eed4655f545c"),
				Name = "CreateButtonSettingsVirtualDataSource",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,115,46,74,77,44,73,13,203,44,42,41,77,204,113,73,44,73,12,206,47,45,74,78,213,112,42,45,41,201,207,11,78,45,41,201,204,75,47,198,144,247,75,204,77,213,81,8,72,76,79,213,131,168,44,14,41,74,77,117,47,202,76,209,180,6,0,133,28,134,220,83,0,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateCreateVirtualDataSourceMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("e7391d44-8b7b-44ec-9c46-eb36346fb93a"),
				Name = "CreateVirtualDataSource",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("bb7a77e7-9d66-4d0f-b329-c5914f7a3376"),
				Name = "virtualDataSourceName",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("7c0da49e-50f3-4697-b6dd-4f606104a5b6"),
				Name = "treeGrid",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "TreeGrid",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,82,65,78,195,48,16,60,83,169,127,136,114,74,36,228,15,32,14,208,72,37,135,162,74,41,185,47,241,22,89,114,156,106,109,135,6,196,223,89,55,41,105,83,224,128,184,68,246,236,236,100,103,214,45,80,212,74,27,221,70,6,95,163,82,145,243,160,51,112,80,52,158,42,76,210,232,125,62,187,202,51,38,180,211,226,35,212,56,159,125,220,204,103,107,120,65,17,62,139,198,56,80,6,73,132,19,53,218,138,59,41,19,254,67,202,52,71,136,75,82,82,140,26,185,12,202,210,138,60,99,194,136,23,142,124,229,60,97,40,142,151,158,155,225,246,11,226,174,83,134,88,147,170,129,186,69,163,125,109,194,132,220,19,231,50,254,129,151,41,187,211,48,161,47,96,231,84,99,14,61,156,79,13,251,66,189,225,6,247,46,107,29,19,158,44,18,251,51,88,5,218,193,77,9,218,227,166,219,225,10,12,231,64,98,137,46,55,214,129,169,240,190,11,194,73,188,26,117,226,116,58,15,199,212,15,145,132,69,124,19,196,80,237,23,114,98,236,154,175,195,192,140,132,66,207,28,176,80,206,109,169,172,122,214,161,101,11,218,98,15,62,40,137,112,129,22,13,185,41,122,230,240,239,1,44,189,146,113,202,79,230,159,220,31,247,116,30,193,112,250,53,5,150,189,12,97,4,79,50,56,130,211,8,206,31,197,193,211,39,88,146,138,133,76,3,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateGetVirtualDataSourceMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("b48fcf28-b67d-4faf-85f7-8732efec5953"),
				Name = "GetVirtualDataSource",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "VirtualDataSource"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("f3433b37-d64c-4d8a-ad9b-c55b7374fbd3"),
				Name = "virtualDataSourceName",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,43,74,45,41,45,202,83,8,72,76,79,213,3,17,206,249,121,37,137,153,121,169,69,122,110,153,121,41,32,94,81,126,142,70,89,102,81,73,105,98,142,75,98,73,98,112,126,105,81,114,170,95,98,110,170,166,66,98,177,66,24,186,140,53,0,160,55,203,200,82,0,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateTryCreateParameterMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("0c3f7fc4-2438-4b5a-87f7-5cb893a1b838"),
				Name = "TryCreateParameter",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				ResultValueTypeName = "bool"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("ff3c9cb9-8308-47c2-9c3e-2f18ffa8999a"),
				Name = "schema",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "ProcessSchema",
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("f4354f4a-2560-42f5-bd66-e616a7ee407c"),
				Name = "userTask",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "ProcessSchemaUserTask",
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("b28d9022-eb0d-457f-8a5e-3f4752119a7f"),
				Name = "item",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "Dictionary<string, object>",
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("b0e998f4-6837-4902-860e-fcca3feca487"),
				Name = "parameter",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "out ProcessSchemaParameter",
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,181,84,193,110,155,64,16,61,227,175,64,156,64,170,144,18,181,106,85,43,151,216,142,133,84,183,81,33,185,84,62,76,96,72,86,94,118,209,238,162,196,173,252,239,157,101,113,138,109,172,72,165,61,112,216,153,225,189,55,179,111,103,14,6,238,129,55,152,109,107,92,129,128,71,84,126,49,20,188,242,239,52,170,153,20,2,115,195,164,136,231,3,85,211,137,183,108,88,113,136,112,151,20,251,184,194,18,21,138,28,211,252,9,43,160,12,225,218,76,188,168,106,179,165,178,26,20,84,104,90,66,209,112,78,33,253,204,76,254,20,134,218,40,38,30,35,102,176,250,17,228,82,24,37,249,162,96,198,114,4,235,200,255,53,241,188,28,52,250,193,76,86,21,10,3,106,123,195,144,23,193,103,202,120,199,154,136,96,168,209,120,137,38,33,138,235,237,87,18,18,6,43,120,73,217,79,204,240,197,4,81,236,122,241,188,7,133,176,153,190,18,46,149,108,234,111,229,130,163,229,213,142,80,161,105,148,240,75,224,26,255,148,210,216,48,99,21,246,148,185,198,172,26,151,145,170,2,67,242,14,59,62,76,7,235,86,7,43,253,240,248,191,43,63,248,24,184,113,252,117,215,123,149,189,150,119,62,82,35,254,25,198,79,255,130,241,148,109,20,228,113,3,3,23,151,34,119,118,30,111,148,47,82,110,154,186,199,55,104,118,129,207,173,225,195,215,75,133,84,54,42,39,7,199,153,76,219,11,15,163,104,200,100,23,255,223,199,239,71,81,36,194,32,133,207,195,127,24,5,127,195,37,152,203,243,232,23,151,163,224,175,165,228,8,98,8,191,192,18,26,110,134,94,245,174,219,108,246,235,221,238,225,211,77,10,218,79,199,203,141,74,111,149,204,81,107,231,143,219,125,50,212,237,217,189,39,167,159,32,223,209,193,10,61,217,11,130,130,193,218,166,103,80,91,43,159,84,228,46,222,21,209,226,4,38,80,117,200,180,212,51,208,27,219,180,77,207,223,24,94,87,246,125,200,219,167,134,183,165,206,222,45,0,213,180,15,122,37,11,86,50,44,18,209,255,221,181,109,133,76,218,199,186,163,137,117,211,54,170,193,233,111,253,248,20,199,172,6,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateSetDefEntityEditValueMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("8ff43aa7-5791-47eb-b068-8e12eb1e3630"),
				Name = "SetDefEntityEditValue",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				ResultValueTypeName = "void"
			};
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,141,80,193,74,195,64,16,61,55,95,177,228,146,44,132,69,207,197,67,109,163,4,172,4,99,189,72,15,99,50,173,139,201,110,216,157,84,66,200,191,187,73,53,208,8,226,109,102,222,204,155,247,222,9,12,67,69,146,218,184,144,244,2,101,131,236,134,41,252,100,169,209,57,90,155,229,239,88,65,10,6,42,36,52,227,70,200,89,231,45,54,64,48,182,207,109,61,28,133,23,3,190,179,104,214,90,41,204,73,106,37,46,192,45,40,56,162,17,247,72,9,97,117,219,62,58,246,208,127,208,250,163,169,125,46,18,101,9,84,142,145,183,120,194,3,26,116,245,89,200,46,41,220,171,120,84,60,77,188,126,233,165,142,80,196,147,19,241,99,101,102,238,123,113,85,20,89,110,100,77,97,70,70,170,163,184,211,166,2,10,253,238,170,23,5,30,160,41,105,117,2,89,194,91,137,227,97,166,27,227,242,112,140,175,129,179,101,207,116,65,196,130,45,212,181,163,24,202,172,181,206,206,132,156,219,12,137,6,124,191,244,35,54,151,185,46,165,83,152,108,56,255,143,50,139,244,59,143,48,232,174,251,128,255,65,30,205,3,115,223,190,0,140,123,143,239,249,1,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateUpdateEntityIdParameterValueMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("89a33415-205b-4f97-8eeb-f83a9c443eb1"),
				Name = "UpdateEntityIdParameterValue",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("7663f358-75c0-464d-a7d1-6815c4cfa6e4"),
				ResultValueTypeName = "void"
			};
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,11,40,202,79,78,45,46,14,78,206,72,205,77,12,72,44,74,204,77,45,73,45,10,75,204,41,77,85,40,64,229,218,42,4,36,166,167,234,185,230,149,100,150,84,186,166,100,150,232,161,170,183,230,229,66,213,161,231,155,159,146,153,150,153,154,226,153,7,49,63,212,51,5,104,10,72,43,156,143,169,41,40,53,45,181,40,53,47,57,21,69,15,216,82,60,186,96,78,204,43,205,201,193,148,117,201,44,46,200,73,172,196,175,40,56,191,180,40,25,236,77,220,97,2,81,163,231,151,159,7,242,46,122,120,192,204,71,53,216,26,0,103,61,254,135,100,1,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateRemoveElementFromGroupMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("4181b7c8-c24b-4f3a-b1ec-ba8dcd998174"),
				Name = "RemoveElementFromGroup",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("38f5a47d-46f1-45c9-b7d4-a55d83ef6e65"),
				Name = "item",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "Dictionary<string, object>",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("a348c5fa-c05d-4491-8b2a-e9c1ce07ea18"),
				Name = "groupId",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,203,79,202,74,77,46,81,40,75,204,41,77,181,230,202,76,83,208,208,40,46,41,202,204,75,215,204,44,73,205,141,86,74,206,207,43,41,202,207,113,77,201,44,9,169,44,72,85,138,85,80,180,85,80,50,82,226,226,228,84,83,83,0,169,209,11,41,170,116,79,45,9,3,153,160,161,148,94,148,95,90,224,153,162,164,163,144,95,10,53,86,83,1,168,18,204,2,233,205,43,205,201,1,9,192,172,129,72,216,218,42,64,117,106,42,84,115,113,66,236,134,153,21,171,0,209,102,205,85,11,0,76,200,235,192,175,0,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateRemoveItemMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("79d11508-bb85-45af-8bb4-c26f8b0db6b4"),
				Name = "RemoveItem",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251"),
				ResultValueTypeName = "void"
			};
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("f155aff2-f339-4fc0-9ede-7f3c1f773f10"),
				Name = "items",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "List<Dictionary<string, object>>",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.Arguments.Add(new SchemaMethodArgument() {
				UId = new Guid("9ba6748f-0394-488f-843f-7c30a4da46d1"),
				Name = "itemId",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				ModifiedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				Direction = Terrasoft.Common.ParameterDirection.Input,
				ValueTypeName = "string",
				CreatedInPackageId = new Guid("f69f6aca-d587-4abd-9a90-ac4521baf251")
			});
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,141,144,61,79,195,64,12,134,231,68,202,127,48,153,46,109,69,17,107,9,18,18,45,234,194,128,216,16,67,146,115,192,144,156,171,139,131,90,161,254,119,238,46,41,237,208,161,147,239,236,247,125,252,65,70,128,244,22,114,184,89,36,113,201,220,0,117,207,44,43,238,141,118,89,177,61,186,66,205,22,139,234,19,212,35,85,66,108,10,187,187,235,196,146,249,152,1,151,95,88,201,61,144,96,11,100,66,236,50,248,77,226,136,106,80,106,208,101,62,253,150,174,117,250,14,121,30,68,107,61,168,162,210,193,191,93,151,104,239,61,122,59,157,250,207,124,50,18,142,3,141,250,11,177,103,116,21,27,177,220,44,53,201,235,110,131,206,116,149,67,122,155,30,28,199,81,162,48,140,99,156,94,163,46,154,14,67,117,15,232,158,163,235,5,91,254,193,101,131,45,26,89,89,110,159,44,247,27,229,91,206,14,35,13,204,255,229,6,186,95,249,4,116,41,199,123,39,243,36,118,49,28,251,122,48,62,136,114,252,108,241,7,2,1,233,90,212,1,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateSetEnabledButtonsTreeGridButtonsMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("c1b21ced-2663-4bf3-bd01-21fa9ab7c476"),
				Name = "SetEnabledButtonsTreeGridButtons",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f909d548-ea0a-4163-99d5-5d01014acefb"),
				ResultValueTypeName = "void"
			};
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,203,204,43,81,40,202,47,47,118,206,47,5,178,108,21,2,18,211,83,245,156,74,75,74,242,243,138,67,138,82,83,221,139,50,83,244,92,18,75,18,131,243,75,139,146,83,245,130,128,106,245,192,138,173,121,185,146,242,243,115,20,50,18,139,65,130,64,189,8,115,236,20,12,144,164,125,19,243,42,177,40,49,4,42,1,91,231,154,146,89,2,177,82,47,56,181,196,53,47,49,41,39,53,69,3,106,174,38,76,149,75,106,78,106,73,42,97,117,161,5,88,213,192,28,129,48,47,191,60,143,128,74,0,25,146,59,135,29,1,0,0 };
			return method;
		}

		protected virtual SchemaMethod CreateSetEnabledElementsTreeGridButtonsMethod() {
			SchemaMethod method = new SchemaMethod() {
				UId = new Guid("5856fcb1-50b0-400d-b4cd-0060ef8927d3"),
				Name = "SetEnabledElementsTreeGridButtons",
				CreatedInSchemaUId = new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"),
				CreatedInPackageId = new Guid("f909d548-ea0a-4163-99d5-5d01014acefb"),
				ResultValueTypeName = "void"
			};
			method.ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,203,204,43,81,40,202,47,47,118,206,47,5,178,108,21,2,18,211,83,245,92,115,82,115,83,243,74,138,67,138,82,83,221,139,50,83,244,92,18,75,18,131,243,75,139,146,83,245,130,128,138,245,192,170,173,121,185,146,242,243,115,20,50,18,139,65,130,64,205,8,131,236,20,12,144,164,125,19,243,42,177,40,49,4,42,129,216,151,146,89,2,181,211,169,180,164,36,63,79,47,56,181,196,53,47,49,41,39,53,69,3,106,188,38,76,177,75,106,78,106,73,42,209,202,67,11,240,41,133,185,12,97,122,126,121,30,113,26,0,118,221,225,133,58,1,0,0 };
			return method;
		}

		#endregion

		#region Methods: Public

		public override object Clone() {
			return new AutoGeneratedPageUserTaskParametersEditPageEventsProcessSchema(this);
		}

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("728a96e4-0ea2-4036-a09b-0973c57e632b"));
		}

		#endregion

	}

	#endregion

}

